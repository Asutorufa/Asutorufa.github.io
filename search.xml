<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>安卓通过shell更改语言</title>
      <link href="/posts/f7f814df/"/>
      <url>/posts/f7f814df/</url>
      <content type="html"><![CDATA[<p>对于Android M或更高版本，使用：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setprop ro<span class="selector-class">.product</span><span class="selector-class">.locale</span> xx-XX</span><br><span class="line">setprop persist<span class="selector-class">.sys</span><span class="selector-class">.locale</span> xx-XX</span><br></pre></td></tr></table></figure></p><p>XX是语言<br>XX是国家<br>改为日语为:xx=ja XX=JP  </p><p>其他安卓版本:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setprop persist<span class="selector-class">.sys</span><span class="selector-class">.language</span> xx</span><br><span class="line">setprop persist<span class="selector-class">.sys</span><span class="selector-class">.country</span> XX</span><br><span class="line">setprop ctl<span class="selector-class">.restart</span> zygote</span><br></pre></td></tr></table></figure></p><p>XX是语言<br>XX是国家<br>Zygote进程运行时, 会初始化Dalvik虚拟机, 并运行它. Android的应用程序是由Java编写的, 它们不能直接运行在Linux上, 只能运行在Dalvik虚拟机中. 并且, 每个应用程序都运行在各自的虚拟机中, 应用程序每次运行都要重新初始化并启动虚拟机, 这个过程会消耗相当长时间, 是拖慢应用程序的原因之一. 因此, 在Android中, 应用程序运行前, 通过Zygote进程共享已运行的虚拟机的代码与内存信息, 缩短应用程序运行所耗费的时间. 也就是说, Zygote进程会事先将应用程序要使用的Android Framework中的类与资源加载到内存中, 并组织形成所用资源的链接信息. 这样, 新运行的Android应用程序在使用所需资源时不必每次形成资源的链接信息, 这样就大大提升了程序的运行时间.   </p><p>参考:<br>1.<a href="http://bbs.bugcode.cn/t/16729" target="_blank" rel="noopener">通过ADB更改设备语言</a><br>2.<a href="https://www.jianshu.com/p/3dbe46439359" target="_blank" rel="noopener">初识Zygote进程</a></p>]]></content>
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决xfce4画面撕裂</title>
      <link href="/posts/38868ade/"/>
      <url>/posts/38868ade/</url>
      <content type="html"><![CDATA[<h2 id="安装compton"><a href="#安装compton" class="headerlink" title="安装compton"></a>安装compton</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> compton</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>compton的配置文件在~/.config/compton.conf<br>因为有些窗口的阴影有时候会变的很奇怪,大概你有可能需要修改一下,附上我的:<a id="more"></a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Backend</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Backend to use: <span class="string">"xrender"</span> or <span class="string">"glx"</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> GLX backend is typically much faster but depends on a sane driver.</span></span><br><span class="line">backend = "glx";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> GLX backend</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line">glx-no-stencil = true;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> My tests with nvidia-drivers show a 10% decrease <span class="keyword">in</span> performance when the whole screen is modified,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> but a 20% increase when only 1/4 is.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> My tests on nouveau show terrible slowdown.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Useful with --glx-swap-method, as well.</span></span><br><span class="line">glx-copy-from-front = false;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> GLX backend: Use MESA_copy_sub_buffer to <span class="keyword">do</span> partial screen update.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> May <span class="built_in">break</span> VSync and is not available on some drivers.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Overrides --glx-copy-from-front.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> glx-use-copysubbuffermesa = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> GLX backend: Avoid rebinding pixmap on window damage.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Probably could improve performance on rapid window content changes, but is known to <span class="built_in">break</span> things on some drivers (LLVMpipe).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Recommended <span class="keyword">if</span> it works.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> glx-no-rebind-pixmap = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> GLX backend: GLX buffer swap method we assume.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> undefined is the slowest and the safest, and the default value.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> copy is fastest, but may fail on some drivers,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2-6 are gradually slower but safer (6 is still faster than 0).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Usually, double buffer means 2, triple buffer means 3.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Useless with --glx-use-copysubbuffermesa.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Partially breaks --resize-damage.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Defaults to undefined.</span></span><br><span class="line">glx-swap-method = "undefined";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Shadows</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Enabled client-side shadows on windows.</span></span><br><span class="line">shadow = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Don<span class="string">'t draw shadows on DND windows.</span></span></span><br><span class="line">no-dnd-shadow = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Avoid drawing shadows on dock/panel windows.</span></span><br><span class="line">no-dock-shadow = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Zero the part of the shadow<span class="string">'s mask behind the window. Fix some weirdness with ARGB windows.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">clear-shadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The blur radius <span class="keyword">for</span> shadows. (default 12)</span></span><br><span class="line">shadow-radius = 5;</span><br><span class="line"><span class="meta">#</span><span class="bash"> The left offset <span class="keyword">for</span> shadows. (default -15)</span></span><br><span class="line">shadow-offset-x = -5;</span><br><span class="line"><span class="meta">#</span><span class="bash"> The top offset <span class="keyword">for</span> shadows. (default -15)</span></span><br><span class="line">shadow-offset-y = -5;</span><br><span class="line"><span class="meta">#</span><span class="bash"> The translucency <span class="keyword">for</span> shadows. (default .75)</span></span><br><span class="line">shadow-opacity = 0.5;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set <span class="keyword">if</span> you want different colour shadows</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shadow-red = 0.0;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shadow-green = 0.0;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shadow-blue = 0.0;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The shadow exclude options are helpful <span class="keyword">if</span> you have shadows enabled. </span></span><br><span class="line"><span class="meta">#</span><span class="bash">Due to the way compton draws its shadows, certain applications will have visual glitches</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> (most applications are fine, only apps that <span class="keyword">do</span> weird things with xshapes or argb are affected).</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This list includes all the affected apps I found <span class="keyword">in</span> my testing. </span></span><br><span class="line"><span class="meta">#</span><span class="bash">The <span class="string">"! name~=''"</span> part excludes shadows on any <span class="string">"Unknown"</span> windows, this prevents a visual glitch with the XFWM alt tab switcher.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">此处加入排除阴影的程序名字</span></span><br><span class="line">shadow-exclude = [</span><br><span class="line">    "! name~=''",</span><br><span class="line">    "name = 'Notification'",</span><br><span class="line">    "name = 'Plank'",</span><br><span class="line">    "name = 'Docky'",</span><br><span class="line">    "name = 'Kupfer'",</span><br><span class="line">    "name = 'xfce4-notifyd'",</span><br><span class="line">    "name *= 'VLC'",</span><br><span class="line">    "name *= 'compton'",</span><br><span class="line">    "name *= 'gedit'",</span><br><span class="line">    "name *= 'Archive Manager'",</span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">"name *= 'Chromium'"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">"name *= 'Chrome'"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">"name *= 'Firefox'"</span>,</span></span><br><span class="line">    "class_g = 'Conky'",</span><br><span class="line">    "class_g = 'Kupfer'",</span><br><span class="line">    "class_g = 'Synapse'",</span><br><span class="line">    "class_g ?= 'Notify-osd'",</span><br><span class="line">    "class_g ?= 'Cairo-dock'",</span><br><span class="line">    "class_g ?= 'Xfce4-notifyd'",</span><br><span class="line">    "class_g ?= 'Xfce4-power-manager'"</span><br><span class="line">];</span><br><span class="line"><span class="meta">#</span><span class="bash"> Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)</span></span><br><span class="line">shadow-ignore-shaped = false;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Opacity</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fading</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fade windows during opacity changes.</span></span><br><span class="line">fading = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> The time between steps <span class="keyword">in</span> a fade <span class="keyword">in</span> milliseconds. (default 10).</span></span><br><span class="line">fade-delta = 4;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Opacity change between steps <span class="keyword">while</span> fading <span class="keyword">in</span>. (default 0.028).</span></span><br><span class="line"><span class="meta">#</span><span class="bash">fade-in-step = 0.03;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Opacity change between steps <span class="keyword">while</span> fading out. (default 0.03).</span></span><br><span class="line"><span class="meta">#</span><span class="bash">fade-out-step = 0.03;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fade windows <span class="keyword">in</span>/out when opening/closing</span></span><br><span class="line"><span class="meta">#</span><span class="bash">no-fading-openclose = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Specify a list of conditions of windows that should not be faded.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">fade-exclude = [ ];</span></span><br><span class="line">fade-exclude = [ ];</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Other</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Try to detect WM windows and mark them as active.</span></span><br><span class="line">mark-wmwin-focused = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Mark all non-WM but override-redirect windows active (e.g. menus).</span></span><br><span class="line">mark-ovredir-focused = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use EWMH _NET_WM_ACTIVE_WINDOW to determine <span class="built_in">which</span> window is focused instead of using FocusIn/Out events.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Usually more reliable but depends on a EWMH-compliant WM.</span></span><br><span class="line">use-ewmh-active-win = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.</span></span><br><span class="line">detect-rounded-corners = true;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Detect _NET_WM_OPACITY on client windows, useful <span class="keyword">for</span> window managers not passing _NET_WM_OPACITY of client windows to frame windows.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This prevents opacity being ignored <span class="keyword">for</span> some apps.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For example without this enabled my xfce4-notifyd is 100% opacity no matter what.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">detect-client-opacity = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Specify refresh rate of the screen.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If not specified or 0, compton will try detecting this with X RandR extension.</span></span><br><span class="line">refresh-rate = 0;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set VSync method. VSync methods currently available:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> none: No VSync</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> opengl: Try to VSync with SGI_video_sync OpenGL extension. Only work on some drivers.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> opengl-oml: Try to VSync with OML_sync_control OpenGL extension. Only work on some drivers.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> opengl-swc: Try to VSync with SGI_swap_control OpenGL extension. Only work on some drivers. </span></span><br><span class="line"><span class="meta">#</span><span class="bash">Works only with GLX backend. Known to be most effective on many drivers. </span></span><br><span class="line"><span class="meta">#</span><span class="bash">Does not actually control paint timing, only buffer swap is affected, </span></span><br><span class="line"><span class="meta">#</span><span class="bash">so it doesn’t have the effect of --sw-opti unlike other methods. Experimental.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension. Basically the same as opengl-swc above, except the extension we use.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Note some VSync methods may not be enabled at compile time.)</span></span><br><span class="line">vsync = "opengl-swc";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Reported to have no effect, though.</span></span><br><span class="line">dbe = false;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Painting on X Composite overlay window. Recommended.</span></span><br><span class="line">paint-on-overlay = true;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti<span class="string">'s job already,</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> unless you wish to specify a lower refresh rate than the actual value.</span></span><br><span class="line">sw-opti = false;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Unredirect all windows <span class="keyword">if</span> a full-screen opaque window is detected, to maximize performance <span class="keyword">for</span> full-screen windows, like games.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Known to cause flickering when redirecting/unredirecting windows.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> paint-on-overlay may make the flickering less obvious.</span></span><br><span class="line">unredir-if-possible = false;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Specify a list of conditions of windows that should always be considered focused.</span></span><br><span class="line">focus-exclude = [ ];</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Use WM_TRANSIENT_FOR to group windows, and consider windows <span class="keyword">in</span> the same group focused at the same time.</span></span><br><span class="line">detect-transient = true;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use WM_CLIENT_LEADER to group windows, and consider windows <span class="keyword">in</span> the same group focused at the same time.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> WM_TRANSIENT_FOR has higher priority <span class="keyword">if</span> --detect-transient is enabled, too.</span></span><br><span class="line">detect-client-leader = true;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Window <span class="built_in">type</span> settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################</span></span></span><br><span class="line"></span><br><span class="line">wintypes:</span><br><span class="line">&#123;</span><br><span class="line">    tooltip =</span><br><span class="line">    &#123;</span><br><span class="line">        # fade: Fade the particular type of windows.</span><br><span class="line">        fade = true;</span><br><span class="line">        # shadow: Give those windows shadow</span><br><span class="line">        shadow = false;</span><br><span class="line">        # opacity: Default opacity for the type of windows.</span><br><span class="line">        opacity = 0.85;</span><br><span class="line">        # focus: Whether to always consider windows of this type focused.</span><br><span class="line">        focus = true;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="关闭xfce4自带的合成器"><a href="#关闭xfce4自带的合成器" class="headerlink" title="关闭xfce4自带的合成器"></a>关闭xfce4自带的合成器</h2><p><strong>设置管理器-&gt;窗口管理器微调-&gt;合成器</strong>  </p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/compton.png" alt=""></p><h2 id="启动compton"><a href="#启动compton" class="headerlink" title="启动compton"></a>启动compton</h2><h3 id="前台运行"><a href="#前台运行" class="headerlink" title="前台运行"></a>前台运行</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">compton</span></span><br></pre></td></tr></table></figure><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">compton -b</span></span><br></pre></td></tr></table></figure><h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><p>修改~/.xprofile文件<br>将<code>compton -b</code>直接加到新的一行就行了</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> xfce4 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux下intel&amp;AMD双显卡切换</title>
      <link href="/posts/3b8b96de/"/>
      <url>/posts/3b8b96de/</url>
      <content type="html"><![CDATA[<p>使用<strong>xrandr</strong>显示可支持的显卡</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrandr <span class="comment">--listproviders</span></span><br></pre></td></tr></table></figure><p>输出类似以下内容</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Providers:</span> <span class="string">number :</span> <span class="number">2</span></span><br><span class="line">Provider <span class="number">0</span>: <span class="string">id:</span> <span class="number">0x6b</span> <span class="string">cap:</span> <span class="number">0x9</span>, Source Output, Sink Offload <span class="string">crtcs:</span> <span class="number">3</span> <span class="string">outputs:</span> <span class="number">7</span> associated <span class="string">providers:</span> <span class="number">1</span> <span class="string">name:</span>modesetting</span><br><span class="line">Provider <span class="number">1</span>: <span class="string">id:</span> <span class="number">0x41</span> <span class="string">cap:</span> <span class="number">0x6</span>, Sink Output, Source Offload <span class="string">crtcs:</span> <span class="number">2</span> <span class="string">outputs:</span> <span class="number">0</span> associated <span class="string">providers:</span> <span class="number">1</span> <span class="string">name:</span>OLAND @ <span class="string">pci:</span><span class="number">0000</span>:<span class="number">01</span>:<span class="number">00.0</span></span><br></pre></td></tr></table></figure><p>To be able to render GPU-intensive applications by the more powerful discrete card use</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrandr --setprovideroffloadsink <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>或者<a id="more"></a></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrandr --setprovideroffloadsink <span class="number">0x41</span> <span class="number">0x6b</span></span><br></pre></td></tr></table></figure><p>使用DRI_PRIME为某个应用选择使用哪一张显卡,使用glxinfo可以查看正在使用的显卡</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DRI_PRIME</span>=<span class="number">0</span> glxinfo | grep <span class="string">"OpenGL renderer"</span></span><br><span class="line"><span class="attr">DRI_PRIME</span>=<span class="number">1</span> glxinfo | grep <span class="string">"OpenGL renderer"</span></span><br></pre></td></tr></table></figure><p>如为steam启用独显</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DRI_PRIME</span>=<span class="number">1</span> steam</span><br></pre></td></tr></table></figure><p>参考资料:</p><p>1.<a href="https://askubuntu.com/questions/1038271/intel-amd-hybrid-graphics-ubuntu-18-04" target="_blank" rel="noopener">Intel/AMD Hybrid graphics Ubuntu 18.04</a></p><p>2.<a href="https://wiki.archlinux.org/index.php/PRIME" target="_blank" rel="noopener">PRIME (简体中文)</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 双显卡 </tag>
            
            <tag> amd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python使用lxml分析网页</title>
      <link href="/posts/77d15527/"/>
      <url>/posts/77d15527/</url>
      <content type="html"><![CDATA[<p>首先得引入lxml</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#xpath为</span></span><br><span class="line"><span class="title">frome</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="meta">#cssselector为</span></span><br><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"><span class="meta">#cssselector使用起来简单但功能比xpath少</span></span><br></pre></td></tr></table></figure><p>cssselector<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tree = lxml<span class="selector-class">.html</span><span class="selector-class">.fromstring</span>(<span class="string">'你获取的网页源代码文件或变量'</span>)</span><br><span class="line">css = tree.cssselect(<span class="string">'要选择的内容'</span>)</span><br><span class="line"></span><br><span class="line">#例如tree.cssselect(<span class="string">'div.word-info &gt; div.pronounces &gt; span.word-audio'</span>)</span><br><span class="line">#选择器选择的结果为list</span><br><span class="line"></span><br><span class="line">css.text_content()</span><br><span class="line"></span><br><span class="line">#表示选择的内容</span><br><span class="line"></span><br><span class="line">css<span class="selector-class">.attrib</span>[<span class="string">'要表示的标签属性'</span>]</span><br><span class="line"></span><br><span class="line">#如css<span class="selector-class">.attrb</span>[<span class="string">'class'</span>]表示的就是所选择内容的class属性</span><br></pre></td></tr></table></figure></p><a id="more"></a><p><strong>如果选择的内容换行符太多可以使用split表示成list去除</strong></p><table><thead><tr><th>说明</th><th>例子</th></tr></thead><tbody><tr><td>选择所有标签</td><td>*</td></tr><tr><td>选择&lt;a>标签</td><td>a</td></tr><tr><td>选择所有class=”link”的标签</td><td>.link</td></tr><tr><td>选择class=”link”的&lt;a>标签</td><td>a.link</td></tr><tr><td>选择id=”home”的&lt;a>标签</td><td>a#home</td></tr><tr><td>选择父元素为&lt;a>标签的所有&lt;span>标签</td><td>a &gt; span</td></tr><tr><td>选择&lt;a>标签内部的所有&lt;span>标签</td><td>a span</td></tr><tr><td>选择title属性为”Home”的所有&lt;a>标签</td><td>a[title=Home]</td></tr></tbody></table><p>xpath<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">selector</span>=etree.HTML(<span class="string">'你获取的网页源代码文件或变量'</span>)</span><br><span class="line"><span class="attr">css</span> = selector.xpath(<span class="string">'要选择的内容'</span>)</span><br><span class="line"><span class="comment">#xpath可直接表示</span></span><br><span class="line"><span class="comment">#xpath可选择并表示属性</span></span><br></pre></td></tr></table></figure></p><p><em>xpath由于内容太多,可以直接参考官方文档</em></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python获取网页源码(爬虫?)</title>
      <link href="/posts/cee10602/"/>
      <url>/posts/cee10602/</url>
      <content type="html"><![CDATA[<p>利用requrst,使用首先要<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br></pre></td></tr></table></figure></p><p>使用方法<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = '要获取的网页地址'</span><br><span class="line">useragent = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'<span class="comment">#user-agent 可有可无,有些网页防爬虫就要模拟浏览器</span></span><br><span class="line"><span class="section">requests.get(url,headers=&#123;'User-Agent':useragent&#125;))</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>snap删除旧的core(snap删除其他版本的软件)</title>
      <link href="/posts/b6b8953/"/>
      <url>/posts/b6b8953/</url>
      <content type="html"><![CDATA[<p>偶尔发现snap会自动升级core且不删除旧版，在’/snap/core’<br>会发现好几个版本的文件夹。<br>使用</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap <span class="built_in">remove</span> core <span class="comment">--revision xxx</span></span><br></pre></td></tr></table></figure><p>删除某个版本的core，xxx是软件的rev，使用</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap <span class="built_in">list</span></span><br></pre></td></tr></table></figure><p>可以查看软件的rev，其他软件也能用这个方法删除旧的版本哦。</p><p>参考：<a href="https://askubuntu.com/questions/828859/how-to-unmount-and-possibly-delete-old-ubuntu-core-snap" target="_blank" rel="noopener">How to unmount and possibly delete old Ubuntu Core snap</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> snap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ubuntu终端下连接wifi</title>
      <link href="/posts/fb6d8628/"/>
      <url>/posts/fb6d8628/</url>
      <content type="html"><![CDATA[<h2 id="首先使用rfkill查看你的wifi设备是否被停用"><a href="#首先使用rfkill查看你的wifi设备是否被停用" class="headerlink" title="首先使用rfkill查看你的wifi设备是否被停用"></a>首先使用rfkill查看你的wifi设备是否被停用</h2><p>使用命令<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><p>获得设备列表，每个都包含与之关联的索引号，从 0 开始<br>查看设备是否被停用，要启用被停用的设备，请运行：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill unblock <span class="tag">&lt;<span class="name">索引号</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>要启用所有设备，请运行：<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill unblock <span class="keyword">all</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>您可以使用这个索引号让 rfkill 停使或者使用某个设备，例如：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">rfkill</span> <span class="keyword">block </span><span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>您还可以使用 rfkill 阻断某一类设备，或者所有启用了RFKill的设备。例如：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">rfkill</span> <span class="keyword">block </span>wifi</span><br></pre></td></tr></table></figure></p><p>停用系统中的所有Wi-Fi设备</p><h2 id="启用无线网卡"><a href="#启用无线网卡" class="headerlink" title="启用无线网卡"></a>启用无线网卡</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ifconfig</span> wlan0 up</span><br></pre></td></tr></table></figure><h2 id="使用iwconfig命令搜索无线网"><a href="#使用iwconfig命令搜索无线网" class="headerlink" title="使用iwconfig命令搜索无线网"></a>使用iwconfig命令搜索无线网</h2><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwlist wlan0 <span class="built_in">scan</span></span><br></pre></td></tr></table></figure><p>记下essid<br>连接无密码的无线网<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">iwconfig</span> wlan0 essid essidname</span><br></pre></td></tr></table></figure></p><p>其中essidname是搜索到的无线网essid<br>连接有密码的无线网<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwconfig wlan0 essid essidname key <span class="tag">&lt;<span class="name">密码</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>通过dhcp获取IP<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">dhclient</span> wlan0</span><br></pre></td></tr></table></figure></p><p>或<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dhcpcd wla<span class="symbol">n0</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>暗影精灵更改efi启动顺序</title>
      <link href="/posts/6683eff9/"/>
      <url>/posts/6683eff9/</url>
      <content type="html"><![CDATA[<p>暗影精灵安装完ubuntu之后只能开机按esc+f9进入ubuntu，否则会直接启动windows,虽然可以使用但及其不方便的说</p><p>首先从ubuntu进入/boot/efi/EFI<br><strong>备份windwos的启动文件</strong>（<strong>切记一定要备份，否则只能从pe重新建立windwos启动项</strong>）<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> -arf Microsoft win10</span><br></pre></td></tr></table></figure></p><p>将ubuntu的grubx64.efi替换掉EFI/Microsoft/Boot/bootmgfw.efi文件 <a id="more"></a><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -arf ubuntu/grubx64<span class="selector-class">.efi</span> Microsoft/Boot/bootmgfw.efi</span><br></pre></td></tr></table></figure></p><p>这样替换之后grub就接管了系统的启动</p><p>然后将/boot/grub/grub.cfg中关于windows的启动段复制到/etc/grub.d/40_custom中<br>将<strong>chainloader /EFI/Micorosoft/Boot/bootmgfw.efi</strong><br>改为<br><strong>chainloader /EFI/win10/Boot/bootmgfw.efi</strong><br>就是把中间那个改为你备份的文件夹，可以改一改前面的启动名称<br>最后执行update-grub来更新启动项</p><p>但是windwos有大更新的时候会把更改的覆盖掉，再来一遍就好了<br>参考文章<a href="https://blog.csdn.net/zyix_0712/article/details/69675748" target="_blank" rel="noopener">暗影精灵2pro安装win10+ubuntu16.10双系统</a></p>]]></content>
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EFI </tag>
            
            <tag> BIOS </tag>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>関西弁コレクション</title>
      <link href="/posts/a4241e7/"/>
      <url>/posts/a4241e7/</url>
      <content type="html"><![CDATA[<p>平常看到的関西弁（かんさいべん）会在这里记录<br>–<strong>2018年12月8日</strong>–</p><h2 id="せやからアカンてゆうたやろ"><a href="#せやからアカンてゆうたやろ" class="headerlink" title="せやからアカンてゆうたやろ"></a>せやからアカンてゆうたやろ</h2><p>せやから 別表記：そやから<br>「だから」の意味。主に関西地方で用いる。「そやから」ともいう。  </p><p>アカン(あかん)<br>関西弁で「ダメ」の意味。  </p><p>『ゆうて』は『～言って』  </p><p> ##方言で だから ダメって 言ったでしょ  </p><p>–<strong>2018年8月29日</strong>–</p><h2 id="ビビり"><a href="#ビビり" class="headerlink" title="ビビり"></a>ビビり</h2><p>【名词】<br>1.颤动，振纹（机械）<br>2.胆小，大阪方言。#関西弁<br><a id="more"></a></p><h2 id="女子-假名-おなご"><a href="#女子-假名-おなご" class="headerlink" title="女子|假名:おなご"></a>女子|假名:おなご</h2><p>【名词】<br>1.女孩，女孩子。<br>2.妇女，女子。<br>3.女仆，该说法多用于关西地区。<br>详细解释:<br>名词<br>女孩，女孩子。（女の子、女児）。<br>妇女，女子。（女の人、女性、婦人）。<br>女仆，该说法多用于关西地区。（召し使いの女、女中、はしため）。</p><p>–<strong>2018年8月7日更新</strong>–</p><h2 id="それアカンやつや"><a href="#それアカンやつや" class="headerlink" title="それアカンやつや"></a>それアカンやつや</h2><p>一字一句、分けてみましょう。「それ、アカン、やつ、や」になります。<br>「それ」はthatのことですよね。<br>「アカン」はNOのことです。その通り、関西弁です。<br>「やつ」は奴のことです。人を愚弄する言い方ですね。でも人以外に、ものに対しても指す場合があります。<br>「や」も関西弁です。<br>これを東京の人が話すと「それはいけない人だよね～」や「それはありえないよね～」という言い方になります。元ネタを想像すると、ここでは「やつ」はものを指していると思います。</p><h2 id="せ-や-な"><a href="#せ-や-な" class="headerlink" title="せ や な"></a>せ や な</h2><p>同意を表明する語。関西弁。「そうだね」、「そうだな」などに相当する。</p><h2 id="しんどい-【形容词-イ形容词】"><a href="#しんどい-【形容词-イ形容词】" class="headerlink" title="しんどい 【形容词/イ形容词】"></a>しんどい 【形容词/イ形容词】</h2><p>1.日本关西方言，费劲，吃力。累。疲劳。<br><strong><strong><em>**</em></strong></strong>详细解释/例句:<strong><strong>***</strong></strong><br>源自:《现代日汉双解词典》外教社<br>形容词/イ形容词<br>骨が折れる。難儀だ。<br>麻烦。费劲。<br>この仕事はしんどい。<br>这个工作费劲（麻烦）。<br>くたびれている。<br>疲乏。劳累。疲劳。<br>しんどくてもこの仕事をやってしまおう。<br>即使累，也要把这个工作干完。<br>おお，しんどい。<br>好累！</p><p><strong>–之前更新–</strong></p><h2 id="ほんま-【本真】（-名-・形動-）"><a href="#ほんま-【本真】（-名-・形動-）" class="headerlink" title="ほんま 【本真】（ 名 ・形動 ）"></a>ほんま 【本真】（ 名 ・形動 ）</h2><p>本当である・こと（さま）。真実。主に関西地方で用いる。 「 －の話やで」 「 －に驚いたわ」</p><h2 id="しゃあない"><a href="#しゃあない" class="headerlink" title="しゃあない"></a>しゃあない</h2><p>【方言】 ;大阪话。没办法、没辙了。（大阪弁で「しかたない」の意味である。）</p><h2 id="アカン"><a href="#アカン" class="headerlink" title="アカン"></a>アカン</h2><p>感叹词不行，不可以。（（「埒らち明かぬ」の略。多く関西で使う）うまくいかない。だめだ。不可である。）</p><h2 id="アホやん"><a href="#アホやん" class="headerlink" title="アホやん"></a>アホやん</h2><p>跟冒失娘（ドジっ娘）类似，关西方言</p><p>注:冒失娘（ドジっ娘），萌属性之一。此属性以女性为主，若是男性可用较中性的“ドジっ子”。<br>日文“どじ”或“どぢ”是指人或事的出错和失误。“ドジっ娘”就是指经常弄翻物件、行事笨拙、“大错不出，小错不断”，总是搞出呆呆笨笨事情的少女。<br>中文意译的“冒失”，是指做事有漏失，而不是为人鲁莽无礼的意思。<br>どじっ应该不写成汉字<br>参考自维基百科</p>]]></content>
      
      <categories>
          
          <category> 日语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
            <tag> 関西弁 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JavaScript对字符串操作</title>
      <link href="/posts/86cfa6a/"/>
      <url>/posts/86cfa6a/</url>
      <content type="html"><![CDATA[<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">name</span>=<span class="string">'aaaa'</span>;</span><br><span class="line"><span class="keyword">var</span> age=<span class="string">'bbbb'</span>;</span><br><span class="line"><span class="keyword">var</span> change=<span class="string">'Hello javascript'</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">message</span>=`hello,$<span class="comment">&#123;name&#125;</span>,$<span class="comment">&#123;age&#125;</span>,`+<span class="keyword">name</span>+age;<span class="comment">//将多个字符串写成一句话</span></span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> length=<span class="keyword">message</span>.length;<span class="comment">//获取字符串长度</span></span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> upper=<span class="keyword">message</span>.toUpperCase();<span class="comment">//把字符串全部变成大写</span></span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lower=<span class="keyword">message</span>.toLowerCase();<span class="comment">//把字符串全部变成小写</span></span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> search=<span class="keyword">message</span>.indexOf(<span class="string">'aaaa'</span>);<span class="comment">//搜索字符串位置</span></span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> substr=<span class="keyword">message</span>.substring(<span class="number">9</span>, <span class="number">15</span>);<span class="comment">//返回区间内字符串</span></span><br></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">x</span>=document.getElementById(<span class="string">"test"</span>)<span class="comment">;  //查找元素</span></span><br><span class="line">x.innerHTML=<span class="string">"Hello JavaScript"</span><span class="comment">;    //改变内容</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>让win10的UWP应用走代理</title>
      <link href="/posts/d22ffdb6/"/>
      <url>/posts/d22ffdb6/</url>
      <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为uwp应用的特殊性,即使使用proxifier和proxycap这种应用者无法让其走代理</p><h2 id="1-SSTAP"><a href="#1-SSTAP" class="headerlink" title="1.SSTAP"></a>1.SSTAP</h2><p>这个应用是创建虚拟网卡,让windows全局走代理.但其有弊端就是有一些国内的网站也会走代理,比如BILIBILI.虽然可以自己写规则但实在是麻烦无比.<a id="more"></a></p><h2 id="2-fiddler"><a href="#2-fiddler" class="headerlink" title="2.fiddler"></a>2.fiddler</h2><p>利用fiddler的winconfig实现uwp应用走代理<br><img src="http://blog-1254450445.cossgp.myqcloud.com/WK%290~%29WR%29N79$KZ4HZZTDQ2.png" alt=""><br>把要走代理的应用勾上<br><img src="http://blog-1254450445.cossgp.myqcloud.com/KT3%28H@%60C63P@2KH_X7C@QDI.png" alt=""><br>但这不是全局代理,只能让uwp应用走代理</p>]]></content>
      
      <categories>
          
          <category> 使用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c语言数组输出的另一种方法</title>
      <link href="/posts/854ed6ec/"/>
      <url>/posts/854ed6ec/</url>
      <content type="html"><![CDATA[<p>今天看到这样一种写法,原文链接:<a href="http://blog.accut.cn/archives/173" target="_blank" rel="noopener">一个有趣的C语言程序</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[x]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">output:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>int x[5],x实际上保存的是这个数组首元素的地址也就是&amp;x[0].<br>a[x]的等效写法是*(a+&amp;x).因为上面说了x实际上是x[0].<br>所以可以进一步写成*(a+&amp;x[0]),又因为a=1所以可以替换成*(&amp;x[0]+1),也就是x[1].<br>所以就是x[1]对应的值：2</p><p>由此我又想到了二位数组<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">2</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[a[x]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">output:</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><p>感觉好神奇,而且在之前不知道在哪看到<strong>c语言的数组其实就是指针的合集</strong>,而且最近要用链表,更觉得链表和数组差不多.</p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>利用结构体让函数返回多个值</title>
      <link href="/posts/c69434f1/"/>
      <url>/posts/c69434f1/</url>
      <content type="html"><![CDATA[<h2 id="c语言"><a href="#c语言" class="headerlink" title="c语言"></a>c语言</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">test</span> //建立结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">&#125;T;</span><br><span class="line"></span><br><span class="line"><span class="function">T <span class="title">testt</span><span class="params">(<span class="keyword">int</span> aa,<span class="keyword">int</span> bb,<span class="keyword">int</span> cc)</span> <span class="comment">//建立函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T aaa;</span><br><span class="line">aaa.a=aa*bb;</span><br><span class="line">aaa.b=aa*cc;</span><br><span class="line">aaa.c=bb*cc;</span><br><span class="line"><span class="keyword">return</span> aaa; <span class="comment">//返回结构</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T b=testt(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d %d \n"</span>,b.a,b.b,b.c);</span><br><span class="line">T *f=&amp;b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d %d"</span>,f-&gt;a,f-&gt;b,f-&gt;c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><a id="more"></a><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include "iostream"</span></span><br><span class="line">typedef struct sss <span class="comment">//建立结构体</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">&#125;S;</span><br><span class="line"></span><br><span class="line">S s(<span class="keyword">double</span> a,<span class="keyword">double</span> b,<span class="keyword">double</span> c) 建立函数</span><br><span class="line">&#123;</span><br><span class="line">S d;</span><br><span class="line">d.a=a*a;</span><br><span class="line">d.b=b*b;</span><br><span class="line">d.c=c*c;</span><br><span class="line"><span class="keyword">return</span> d;<span class="comment">//返回结构体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">S z=s(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">std::cout&lt;&lt;z.a</span><br><span class="line">         &lt;&lt;std::endl</span><br><span class="line">         &lt;&lt;z.b</span><br><span class="line">         &lt;&lt;std::endl</span><br><span class="line">         &lt;&lt;z.c</span><br><span class="line">         &lt;&lt;std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 编程 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c语言基本类型在内存中的存储方式</title>
      <link href="/posts/e404489/"/>
      <url>/posts/e404489/</url>
      <content type="html"><![CDATA[<h2 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h2><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><table><thead><tr><th style="text-align:center">符号位</th><th style="text-align:center">+</th><th style="text-align:center">指数位</th><th style="text-align:center">+</th><th style="text-align:center">尾数位</th></tr></thead><tbody><tr><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td></tr><tr><td style="text-align:center">第一位</td><td style="text-align:center"></td><td style="text-align:center">8位</td><td style="text-align:center"></td><td style="text-align:center">23位</td></tr></tbody></table><a id="more"></a><h3 id="double"><a href="#double" class="headerlink" title="double"></a>double</h3><table><thead><tr><th style="text-align:center">符号位</th><th style="text-align:center">+</th><th style="text-align:center">指数位</th><th style="text-align:center">+</th><th style="text-align:center">尾数位</th></tr></thead><tbody><tr><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td></tr><tr><td style="text-align:center">第一位</td><td style="text-align:center"></td><td style="text-align:center">11位</td><td style="text-align:center"></td><td style="text-align:center">52位</td></tr></tbody></table><h2 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h2><p>整数在内存中是以补码的形式存储</p><h3 id="正整数"><a href="#正整数" class="headerlink" title="正整数"></a>正整数</h3><p>原码=反码=补码</p><h3 id="负整数"><a href="#负整数" class="headerlink" title="负整数"></a>负整数</h3><p>原码即为原码<br>反码=原码符号为不变,其余取反(注:第一位为符号位)<br>补码=反码+1</p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>java和c++简单的递归调用</title>
      <link href="/posts/5eb800c7/"/>
      <url>/posts/5eb800c7/</url>
      <content type="html"><![CDATA[<p>题目是盗来的<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">猴子吃桃问题。猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。</span><br><span class="line">第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。</span><br><span class="line">到第n天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少桃子。</span><br><span class="line">例如：</span><br><span class="line">输入：<span class="number">3</span></span><br><span class="line">输出：<span class="number">10</span></span><br><span class="line">输入：<span class="number">10</span></span><br><span class="line">输出：<span class="number">1534</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>C++:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">d</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;d(a)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">d</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> e;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">e=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">e=(d(a<span class="number">-1</span>)+<span class="number">1</span>)*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>java:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">dgcs</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner <span class="keyword">in</span>=<span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</span><br><span class="line"><span class="keyword">int</span> a=<span class="keyword">in</span>.nextInt();</span><br><span class="line">System.<span class="keyword">out</span>.println(f(a));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">f</span>(<span class="params"><span class="keyword">int</span> a</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> e;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">e=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">e=(f(a<span class="number">-1</span>)+<span class="number">1</span>)*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> c++ </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c语言利用char指针变量将int按字节打印地址</title>
      <link href="/posts/43cb2931/"/>
      <url>/posts/43cb2931/</url>
      <content type="html"><![CDATA[<p>因为int变量的大小为四个字节,所以如果利用int指针变量+1输出地址的话,实际上是加了四个字节后的地址.<br>而char的大小刚好为一个字节,是我们想要的东西.<br>这样我们可以强制转换为char指针变量输出每个字节的地址然后+1,+2,+3来分别输出int的四个字节的地址,得到我们想要的内容.<br>代码如下<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a=<span class="number">-65</span>;</span><br><span class="line">char *b=(char *)&amp;a;</span><br><span class="line">printf(<span class="string">"%p<span class="subst">\n</span>%p<span class="subst">\n</span>%p<span class="subst">\n</span>%p<span class="subst">\n</span>"</span>,a,a+<span class="number">1</span>,a+<span class="number">2</span>,a+<span class="number">3</span>);</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>如果你想按字节输出内存中的内容可以这样写,这里我输出的是16进制整数.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">-65</span>;</span><br><span class="line"><span class="keyword">char</span> *b=(<span class="keyword">char</span> *)&amp;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%02x\n%02x\n%02x\n%02x\n"</span>,*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)a,*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(a+<span class="number">1</span>),*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(a+<span class="number">2</span>),*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(a+<span class="number">3</span>));</span><br></pre></td></tr></table></figure></p><p>两者结合一下<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">-65</span>;</span><br><span class="line"><span class="keyword">char</span> *b=(<span class="keyword">char</span> *)&amp;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%p %02x\n%p %02x\n%p %02x\n%p %02x\n"</span>,a,*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)a,a+<span class="number">1</span>,*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(a+<span class="number">1</span>),a+<span class="number">2</span>,*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(a+<span class="number">2</span>),a+<span class="number">3</span>,*(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(a+<span class="number">3</span>));</span><br></pre></td></tr></table></figure></p><p>输出内容如图<br><img src="http://blog-1254450445.cossgp.myqcloud.com/TIM%E6%88%AA%E5%9B%BE20171024224821.png" alt=""><br><strong>有任何错误请邮箱联系我指出我的错误,万分感谢</strong></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c语言中格式化字符的应用</title>
      <link href="/posts/b6b4601/"/>
      <url>/posts/b6b4601/</url>
      <content type="html"><![CDATA[<h2 id="格式化规定符"><a href="#格式化规定符" class="headerlink" title="格式化规定符"></a>格式化规定符</h2><p>符号 作用<br>%d 十进制有符号整数<br>%u 十进制无符号整数<br>%f 浮点数<br>%s 字符串<br>%c 单个字符<br>%p 指针的值<br>%e 指数形式的浮点数<br>%x, %X 无符号以十六进制表示的整数<a id="more"></a><br>%0 无符号以八进制表示的整数<br>%g 自动选择合适的表示法</p><p>说明:<br>(1). 可以在”%”和字母之间插进数字表示最大场宽。<br>例如: %3d 表示输出3位整型数, 不够3位右对齐。<br>%9.2f 表示输出场宽为9的浮点数, 其中小数位为2, 整数位为6,小数点占一位, 不够9位右对齐。<br>另外, 若想在输出值前加一些0, 就应在场宽项前加个0。<br>例如: %04d 表示在输出一个小于4位的数值时, 将在前面补0使其总宽度为4位。<br>如果用浮点数表示字符或整型量的输出格式, 小数点后的数字代表最大宽度,小数点前的数字代表最小宽度。<br>例如: %6.9s 表示显示一个长度不小于6且不大于9的字符串。若大于9, 则第9个字符以后的内容将被删除。<br>(2). 可以在”%”和字母之间加小写字母l, 表示输出的是长型数。<br>例如: %ld 表示输出long整数,%lf 表示输出double浮点数<br>(3). 可以控制输出左对齐或右对齐, 即在”%”和字母之间加入一个”-“ 号可说明输出为左对齐, 否则为右对齐。<br>例如: %-7d 表示输出7位整数左对齐,%-10s 表示输出10个字符左对齐.</p><h2 id="一些特殊规定字符"><a href="#一些特殊规定字符" class="headerlink" title="一些特殊规定字符"></a>一些特殊规定字符</h2><p>字符 作用<br>/n   换行<br>/f   清屏并换页<br>/r   回车<br>/t   Tab符<br>/xhh 表示一个ASCII码用16进表示,其中hh是1到2个16进制数</p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>常用等价无穷小的一般形式</title>
      <link href="/posts/10bb899d/"/>
      <url>/posts/10bb899d/</url>
      <content type="html"><![CDATA[<p>当$\lim_{φ(x)\to0}$时,<br>$\sin φ(x)$~$φ(x)$<br>$arc\sin φ(x)$~$φ(x)$<br>$\tanφ(x)$~$φ(x)$<br>$arc\tanφ(x)$~$φ(x)$<br>$\ln(1+φ(x))$~$φ(x)$<br>$e^{φ(x)}-1$~$φ(x)$<br>$a^{φ(x)}-1$~$φ(x)\ln a$<br>$\sqrt[n]{1+φ(x)}-1$~$\frac{1}{n}φ(x)$<br>$(1+φ(x))^{\mu-1}$~$\muφ(x)$<br>$1-\cosφ(x)$~$\frac{(φ(x))^2}{2}$</p>]]></content>
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>课程表[练习MD用]</title>
      <link href="/posts/af9757c5/"/>
      <url>/posts/af9757c5/</url>
      <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center"></th><th style="text-align:center">星期一</th><th style="text-align:center">星期二</th><th style="text-align:center">星期三</th><th style="text-align:center">星期四</th><th style="text-align:center">星期五</th></tr></thead><tbody><tr><td style="text-align:center">08:00-09:50</td><td style="text-align:center">高等数学 B402</td><td style="text-align:center">程序设计基础 B507</td><td style="text-align:center">高等数学 B429</td><td style="text-align:center"></td><td style="text-align:center">程序设计基础 B507</td></tr><tr><td style="text-align:center">10:10-12:00</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">体育</td><td style="text-align:center"></td><td style="text-align:center">大学英语 B509</td></tr><tr><td style="text-align:center">14:00-15:50</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">大学英语 听力楼-2-304</td><td style="text-align:center">高等数学 B402</td></tr><tr><td style="text-align:center">16:10-18:00</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">大学心理健康 B211</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">19:00——</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">中国近代史 B429</td><td style="text-align:center">形势与政策 B429</td><td style="text-align:center"></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> 学生 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>三蛋空间自建贴吧云签到</title>
      <link href="/posts/8a291f21/"/>
      <url>/posts/8a291f21/</url>
      <content type="html"><![CDATA[<h2 id="–"><a href="#–" class="headerlink" title="–"></a>–</h2><p>这是我自建的贴吧云签到:<del><a href="http://dmly.tk" target="_blank" rel="noopener">http://dmly.tk</a></del>(已失效)<br>之后为教程</p><h3 id="注册免费空间"><a href="#注册免费空间" class="headerlink" title="注册免费空间"></a>注册免费空间</h3><p>首先你得注册一个三蛋空间的账号,三蛋空间注册网址:<a href="https://www.000webhost.com/members/website/list" target="_blank" rel="noopener">三蛋空间</a><a id="more"></a></p><h3 id="创建网站"><a href="#创建网站" class="headerlink" title="创建网站"></a>创建网站</h3><p>注册完成之后点击这里 添加一个空模版,如图</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/%E6%B3%A8%E5%86%8C.png" alt=""></p><p>写上名字和密码,点击create</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/%E5%90%8D%E5%AD%97.png" alt=""></p><h3 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h3><p>下载SmartFTP Client或者其他你熟悉的ftp上传工具,这里百度就行了<br>进入三蛋空间的管理网站,点击这里,如图</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/detile.png" alt=""><br><img src="http://blog-1254450445.cossgp.myqcloud.com/%5D%60$%603%29%284TGPPR%5DZDA8@60W8.png" alt=""></p><p>把这里的信息填入SmartFTP Client中</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/NS0ID6B9@2EIS4%25%7D%7B%60KLQQ7.png" alt=""><br>然后点ok</p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p>贴吧云签到源码github地址:<a href="https://github.com/MoeNetwork/Tieba-Cloud-Sign" target="_blank" rel="noopener">Tieba-Cloud-Sign</a><br>点击这里下载zip并解压</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/GA%5D3BI8Q77U8J%7DTW2%25PD%5D4L.png" alt=""></p><p>将解压得到的所有文件拖入ftp上的public_html文件夹中</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/LR%7D$$65~BX37S2%29I%7DL%60Y309.png" alt=""></p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>然后进入三蛋空间创建数据库<br>三蛋空间会自动给你的数据库名字前加上数字,所以之后在贴吧安装中要注意</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/4%25JP1V7TEKX4IE0~1UUQN%5DU.png" alt=""></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>之后进入你的网站,然后安装就行了.</p><h3 id="创建cron-job"><a href="#创建cron-job" class="headerlink" title="创建cron job"></a>创建cron job</h3><p>安装完成后就要把do.php加入cron,否则是不会自动签到的,按图中的步骤进行<br><img src="http://blog-1254450445.cossgp.myqcloud.com/P5LC1%7B%7D%7BQ%7B1_QCZ0%5DE@L0WO.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
            <tag> 免费 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>更改绑定手机号</title>
      <link href="/posts/3fee5f2/"/>
      <url>/posts/3fee5f2/</url>
      <content type="html"><![CDATA[<p>绑定手机号：微信，网易云，淘宝原手机号及证件，支付宝，google<br>银行卡，贴吧，酷安，微博需要原手机号，bilibili（需要原手机号)<a id="more"></a><br>微软,欢喜云，京东（原手机号及银行卡，非我的实名认证）<br>天猫，银行卡，steam，小冰，yy(需要原手机号)<br><img src="http://blog-1254450445.cossgp.myqcloud.com/%E6%8D%95%E8%8E%B72.PNG" alt=""></p>]]></content>
      
      <categories>
          
          <category> 日常生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C输出字符串的ASCII码</title>
      <link href="/posts/undefined/"/>
      <url>/posts/undefined/</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char str[]=”This is a string!”;</span><br><span class="line">int i=0;</span><br><span class="line"><span class="keyword">while</span>(str[i]!=’\0′)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(“%c=%d\n”,str[i],str[i]);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(“%c=%d\n”,str[i],str[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
