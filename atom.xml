<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Asutorufaのブログ</title>
  <icon>https://github.com/asutorufa.png</icon>
  <subtitle>こんにちは</subtitle>
  <link href="https://asutorufa.github.io/atom.xml" rel="self"/>
  
  <link href="https://asutorufa.github.io/"/>
  <updated>2025-02-27T19:29:27.000Z</updated>
  <id>https://asutorufa.github.io/</id>
  
  <author>
    <name>Asutorufa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>terraformのモジュール</title>
    <link href="https://asutorufa.github.io/posts/3395bae7/"/>
    <id>https://asutorufa.github.io/posts/3395bae7/</id>
    <published>2025-02-27T19:29:27.000Z</published>
    <updated>2025-02-27T19:29:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WIP"><strong>WIP</strong></h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> +  <span class="token list punctuation">+</span> project1 -+  |           +- main.tf  |           +- variables.tf  |           +- pro.tfvars  |           +- debug.tfvars  |  +- modules -+              +- module1 -+              |            +- main.tf              |            +- variables.tf              |            +- outputs.tf              |              +- module2 -+                           +- main.tf                           +- variables.tf                           +- outputs.tf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><p><a href="http://root-variable.tf">root-variable.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">variable &quot;storageClass&quot; &#123;  type    &#x3D; string  default &#x3D; &quot;nfs-provisioner-sc&quot;&#125;variable &quot;imageDockerhubRegistryPrefix&quot; &#123;  type    &#x3D; string  default &#x3D; &quot;harborpro.secvision.local&#x2F;dockerhub&quot;&#125;variable &quot;imageQuayRegistryPrefix&quot; &#123;  type    &#x3D; string  default &#x3D; &quot;harborpro.secvision.local&#x2F;quay&quot;&#125;variable &quot;minioReplicas&quot; &#123;  type    &#x3D; number  default &#x3D; 3&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://redis.tf">redis.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">resource &quot;kubernetes_stateful_set&quot; &quot;redis&quot; &#123;  metadata &#123;    name      &#x3D; &quot;redis&quot;    namespace &#x3D; var.namespace    labels &#x3D; &#123;      app &#x3D; &quot;redis&quot;    &#125;  &#125;  spec &#123;    replicas &#x3D; 1    selector &#123;      match_labels &#x3D; &#123;        app &#x3D; &quot;redis&quot;      &#125;    &#125;    template &#123;      metadata &#123;        name &#x3D; &quot;redis&quot;        labels &#x3D; &#123;          app &#x3D; &quot;redis&quot;        &#125;      &#125;      spec &#123;        container &#123;          name  &#x3D; &quot;redis&quot;          image &#x3D; var.image          port &#123;            name           &#x3D; &quot;redis&quot;            container_port &#x3D; 6379          &#125;        &#125;      &#125;    &#125;    service_name &#x3D; &quot;redis&quot;  &#125;&#125;resource &quot;kubernetes_service&quot; &quot;redis&quot; &#123;  metadata &#123;    name      &#x3D; &quot;redis&quot;    namespace &#x3D; var.namespace  &#125;  spec &#123;    port &#123;      name        &#x3D; &quot;redis&quot;      port        &#x3D; 6379      target_port &#x3D; kubernetes_stateful_set.redis.spec.0.template.0.spec.0.container.0.port.0.container_port    &#125;    selector &#x3D; &#123;      app &#x3D; &quot;redis&quot;    &#125;    type &#x3D; &quot;ClusterIP&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://outputs.tf">outputs.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">output &quot;metricsAccessKey&quot; &#123;  value &#x3D; var.metricsAccessKey&#125;output &quot;metricsSecretKey&quot; &#123;  value &#x3D; var.metricsSecretKey&#125;output &quot;lokiBucket&quot; &#123;  value &#x3D; var.lokiBucket&#125;output &quot;tempoBucket&quot; &#123;  value &#x3D; var.tempoBucket&#125;output &quot;host&quot; &#123;  value &#x3D; &quot;minio.metrics.svc.cluster.local:9000&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://main.tf">main.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">provider &quot;kubernetes&quot; &#123;  config_path &#x3D; &quot;$&#123;path.module&#125;&#x2F;..&#x2F;config.yaml&quot;&#125;module &quot;redis&quot; &#123;  source &#x3D; &quot;..&#x2F;modules&#x2F;redis&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>apply</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">terraform initterraform apply --var-file<span class="token operator">=</span>debug.tfvars <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="再利用ダメ">再利用ダメ</h2><p><a href="http://module1.tf">module1.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">resource &quot;kubernetes_service&quot; &quot;module1&quot; &#123;  ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="http://modules2.tf">modules2.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">module &quot;module1&quot; &#123;  source &#x3D; &quot;..&#x2F;module1&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="http://modules3.tf">modules3.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">module &quot;module1&quot; &#123;  source &#x3D; &quot;..&#x2F;module1&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="http://root-main.tf">root-main.tf</a></p><pre class="line-numbers language-t" data-language="t"><code class="language-t">module &quot;module1&quot; &#123;  source &#x3D; &quot;..&#x2F;modules&#x2F;module1&quot;&#125;module &quot;module2&quot; &#123;  source &#x3D; &quot;..&#x2F;modules&#x2F;module2&quot;&#125;module &quot;module3&quot; &#123;  source &#x3D; &quot;..&#x2F;modules&#x2F;module3&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid"><span class="token keyword">graph</span> TD<span class="token punctuation">;</span>  module2 <span class="token arrow operator">--></span> module1<span class="token punctuation">;</span>  module3 <span class="token arrow operator">--></span> module1<span class="token punctuation">;</span>  root <span class="token arrow operator">--></span> module1<span class="token punctuation">;</span>  root <span class="token arrow operator">--></span> module2<span class="token punctuation">;</span>  root <span class="token arrow operator">--></span> module3<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;WIP&quot;&gt;&lt;strong&gt;WIP&lt;/strong&gt;&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; +
  &lt;span class=&quot;token list punctuation&quot;&gt;+&lt;/span&gt; project1 -+
  |           +- main.tf
  |           +- variables.tf
  |           +- pro.tfvars
  |           +- debug.tfvars
  |
  +- modules -+
              +- module1 -+
              |            +- main.tf
              |            +- variables.tf
              |            +- outputs.tf
              |
              +- module2 -+
                           +- main.tf
                           +- variables.tf
                           +- outputs.tf&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/tags/Kubernetes/"/>
    
    <category term="container" scheme="https://asutorufa.github.io/tags/container/"/>
    
    <category term="Terraform" scheme="https://asutorufa.github.io/tags/Terraform/"/>
    
    <category term="インフラ" scheme="https://asutorufa.github.io/tags/%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetesのコントローラーを作ろう</title>
    <link href="https://asutorufa.github.io/posts/70902a01/"/>
    <id>https://asutorufa.github.io/posts/70902a01/</id>
    <published>2025-02-23T22:30:31.000Z</published>
    <updated>2025-02-23T22:30:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kubernetesコントローラーとは">Kubernetesコントローラーとは</h2><p>コントローラーはKubernetesのリソース設定を監視して変更があったら自動的にリソースを調整するプログラムです。ちなみに、Deployment、Statefulset、DaemonSetなどはKubernetesの内蔵コントローラーです。</p><h2 id="コントローラーを実現">コントローラーを実現</h2><p>今回はGolangで簡単なLoadBalancerコントローラーを実現する。実際の機能はないですが、作成の流れはただしいと思います。</p><p>最初はTypeはLoadBalancerのServiceを作成</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.0.171.239  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>この時はIPアドレスを割り当てのコントローラーがないので、ServiceのステータスはPendingです。</p><p>新たなKubernetesクライアントを作成</p><span id="more"></span><pre class="line-numbers language-go" data-language="go"><code class="language-go">config<span class="token punctuation">,</span> err <span class="token operator">:=</span> rest<span class="token punctuation">.</span><span class="token function">InClusterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>cli<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Serviceの状態を監視して</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">wch<span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Services</span><span class="token punctuation">(</span>corev1<span class="token punctuation">.</span>NamespaceAll<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Watch</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span>Watch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">defer</span> wch<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>コントローラーを作成して、IPアドレスをServiceに割り当てる。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// ポートの範囲</span><span class="token keyword">var</span> portRange <span class="token operator">=</span> atomic<span class="token punctuation">.</span>Uint32<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> portRange<span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">select</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">case</span> <span class="token operator">&lt;-</span>signChannel<span class="token punctuation">:</span>   <span class="token keyword">return</span>  <span class="token keyword">case</span> obj<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>wch<span class="token punctuation">.</span><span class="token function">ResultChan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span>   <span class="token punctuation">&#125;</span>   svc<span class="token punctuation">,</span> ok <span class="token operator">:=</span> obj<span class="token punctuation">.</span>Object<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">)</span>   <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">&#123;</span>    <span class="token keyword">continue</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">switch</span> obj<span class="token punctuation">.</span>Type <span class="token punctuation">&#123;</span>   <span class="token keyword">case</span> watch<span class="token punctuation">.</span>Added<span class="token punctuation">:</span>   <span class="token comment">// ServiceのTypeはLoadBalancerかどうかを判断して</span>   <span class="token comment">// プロダクション環境にはAnnotationsも判断する必要があると思います</span>    <span class="token keyword">if</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Type <span class="token operator">!=</span> corev1<span class="token punctuation">.</span>ServiceTypeLoadBalancer <span class="token punctuation">&#123;</span>     <span class="token keyword">continue</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// ポートを生成して、転送ルールを設定して</span>    <span class="token comment">// ここは本当の転送ではなく出力するだけ</span>    sport <span class="token operator">:=</span> portRange<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token function">forward</span><span class="token punctuation">(</span>svc<span class="token punctuation">,</span> sport<span class="token punctuation">)</span>    <span class="token comment">// ServiceにIPアドレスを設定</span>    svc<span class="token punctuation">.</span>Status<span class="token punctuation">.</span>LoadBalancer<span class="token punctuation">.</span>Ingress <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>LoadBalancerIngress<span class="token punctuation">&#123;</span>     <span class="token punctuation">&#123;</span>      IP<span class="token punctuation">:</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span>      Ports<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>PortStatus<span class="token punctuation">&#123;</span>       <span class="token punctuation">&#123;</span>        Port<span class="token punctuation">:</span> <span class="token function">int32</span><span class="token punctuation">(</span>sport<span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Serviceを更新して</span>    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span>     <span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>     <span class="token function">Services</span><span class="token punctuation">(</span>svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>     <span class="token function">UpdateStatus</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> svc<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>     slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"service added"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIPs<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>   <span class="token keyword">case</span> watch<span class="token punctuation">.</span>Modified<span class="token punctuation">:</span>    slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"service modified"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIPs<span class="token punctuation">)</span>   <span class="token keyword">case</span> watch<span class="token punctuation">.</span>Deleted<span class="token punctuation">:</span>    slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"service deleted"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIPs<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// ...</span><span class="token comment">// ...</span><span class="token comment">// 転送ルールの作成をシミュレーション</span><span class="token keyword">func</span> <span class="token function">forward</span><span class="token punctuation">(</span>svc <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">,</span> sport <span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> ip<span class="token punctuation">,</span> err <span class="token operator">:=</span> netip<span class="token punctuation">.</span><span class="token function">ParseAddr</span><span class="token punctuation">(</span>svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ports <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> ipt <span class="token builtin">string</span>  <span class="token keyword">var</span> mask <span class="token builtin">string</span>  <span class="token keyword">if</span> ip<span class="token punctuation">.</span><span class="token function">Is4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   ipt <span class="token operator">=</span> <span class="token string">"iptables"</span>   mask <span class="token operator">=</span> <span class="token string">"32"</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   ipt <span class="token operator">=</span> <span class="token string">"ip6tables"</span>   mask <span class="token operator">=</span> <span class="token string">"128"</span>  <span class="token punctuation">&#125;</span>  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>   ipt<span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"filter"</span><span class="token punctuation">,</span> <span class="token string">"-A"</span><span class="token punctuation">,</span> <span class="token string">"FORWARD"</span><span class="token punctuation">,</span>   <span class="token string">"-d"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>mask<span class="token punctuation">,</span>   <span class="token string">"-p"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Protocol<span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"--dport"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"-j"</span><span class="token punctuation">,</span> <span class="token string">"DROP"</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>   ipt<span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"nat"</span><span class="token punctuation">,</span> <span class="token string">"-I"</span><span class="token punctuation">,</span> <span class="token string">"PRETROUTING"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token string">"-p"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Protocol<span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"--dport"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>sport<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"-j"</span><span class="token punctuation">,</span> <span class="token string">"DNAT"</span><span class="token punctuation">,</span>   <span class="token string">"--to"</span><span class="token punctuation">,</span> net<span class="token punctuation">.</span><span class="token function">JoinHostPort</span><span class="token punctuation">(</span>svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>   ipt<span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"nat"</span><span class="token punctuation">,</span> <span class="token string">"-I"</span><span class="token punctuation">,</span> <span class="token string">"POSTROUTING"</span><span class="token punctuation">,</span>   <span class="token string">"-d"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>mask<span class="token punctuation">,</span>   <span class="token string">"-p"</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span>Protocol<span class="token punctuation">,</span>   <span class="token string">"-j"</span><span class="token punctuation">,</span> <span class="token string">"MASQUERADE"</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>実行したらServiceのステータスはPendingではなくなった、IPアドレスも割り当てられた。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.0.171.239  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer<span class="token key atrule">status</span><span class="token punctuation">:</span>  <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>    <span class="token key atrule">ingress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 10.0.171.239<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>k3sの<a href="https://github.com/k3s-io/klipper-lb">klipper-lb</a>は簡単なLoadBalancerコントローラーの実現、コードほんの数行のスクリプト</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function-name function">start_proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">src_range</span> <span class="token keyword">in</span> <span class="token variable">$&#123;SRC_RANGES<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">,</span><span class="token operator">/</span> &#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>        <span class="token keyword">if</span> <span class="token builtin class-name">echo</span> <span class="token variable">$&#123;src_range&#125;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Eq</span> <span class="token string">":"</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            ip6tables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-I</span> FORWARD <span class="token parameter variable">-s</span> <span class="token variable">$&#123;src_range&#125;</span> <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> ACCEPT        <span class="token keyword">else</span>            iptables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-I</span> FORWARD <span class="token parameter variable">-s</span> <span class="token variable">$&#123;src_range&#125;</span> <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> ACCEPT        <span class="token keyword">fi</span>    <span class="token keyword">done</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">dest_ip</span> <span class="token keyword">in</span> <span class="token variable">$&#123;DEST_IPS<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">,</span><span class="token operator">/</span> &#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>        <span class="token keyword">if</span> <span class="token builtin class-name">echo</span> <span class="token variable">$&#123;dest_ip&#125;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Eq</span> <span class="token string">":"</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/sys/net/ipv6/conf/all/forwarding<span class="token variable">)</span></span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span>            ip6tables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-A</span> FORWARD <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/128 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> DROP            ip6tables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> PREROUTING <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;SRC_PORT&#125;</span> <span class="token parameter variable">-j</span> DNAT <span class="token parameter variable">--to</span> <span class="token punctuation">[</span><span class="token variable">$&#123;dest_ip&#125;</span><span class="token punctuation">]</span>:<span class="token variable">$&#123;DEST_PORT&#125;</span>            ip6tables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/128 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">-j</span> MASQUERADE        <span class="token keyword">else</span>            <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/sys/net/ipv4/ip_forward<span class="token variable">)</span></span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span>            iptables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-A</span> FORWARD <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/32 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> DROP            iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> PREROUTING <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;SRC_PORT&#125;</span> <span class="token parameter variable">-j</span> DNAT <span class="token parameter variable">--to</span> <span class="token variable">$&#123;dest_ip&#125;</span><span class="token builtin class-name">:</span><span class="token variable">$&#123;DEST_PORT&#125;</span>            iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/32 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">-j</span> MASQUERADE        <span class="token keyword">fi</span>    <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Kubernetesコントローラーとは&quot;&gt;Kubernetesコントローラーとは&lt;/h2&gt;
&lt;p&gt;コントローラーはKubernetesのリソース設定を監視して変更があったら自動的にリソースを調整するプログラムです。ちなみに、Deployment、Statefulset、DaemonSetなどはKubernetesの内蔵コントローラーです。&lt;/p&gt;
&lt;h2 id=&quot;コントローラーを実現&quot;&gt;コントローラーを実現&lt;/h2&gt;
&lt;p&gt;今回はGolangで簡単なLoadBalancerコントローラーを実現する。実際の機能はないですが、作成の流れはただしいと思います。&lt;/p&gt;
&lt;p&gt;最初はTypeはLoadBalancerのServiceを作成&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v1
&lt;span class=&quot;token key atrule&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Service
&lt;span class=&quot;token key atrule&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; my&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;service
&lt;span class=&quot;token key atrule&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;app.kubernetes.io/name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; MyApp
  &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; TCP
      &lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;targetPort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;clusterIP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10.0.171.239
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; LoadBalancer&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この時はIPアドレスを割り当てのコントローラーがないので、ServiceのステータスはPendingです。&lt;/p&gt;
&lt;p&gt;新たなKubernetesクライアントを作成&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/tags/Kubernetes/"/>
    
    <category term="CRI" scheme="https://asutorufa.github.io/tags/CRI/"/>
    
    <category term="container" scheme="https://asutorufa.github.io/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>UDPプロキシはFullcone NATを実現する</title>
    <link href="https://asutorufa.github.io/posts/4893f166/"/>
    <id>https://asutorufa.github.io/posts/4893f166/</id>
    <published>2024-11-18T19:49:40.000Z</published>
    <updated>2024-11-18T19:49:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NATの種類">NATの種類</h2><h3 id="Mappingの種類">Mappingの種類</h3><p>マッピングはNAT内部から外部にパケットを送信時にアドレス変換する行為です。</p><ul><li>Endpoint-Independent Mapping</li></ul><p>NAT内部のネットワークの同じIPアドレスとポートで外部のそれぞれのUDPサーバ（IPアドレスとポートが違う）にパケットを送信すると、各個UDPサーバも同じIPアドレスとポートのパケットを受信する。<br>例えば：</p><table><thead><tr><th style="text-align:center">送信元アドレス</th><th style="text-align:center">宛先アドレス</th><th style="text-align:center">NATマッピングアドレス</th></tr></thead><tbody><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:<strong>3001</strong></td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center"><strong>1.1.1.3</strong>:<strong>3002</strong></td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center"><strong>1.1.1.4</strong>:<strong>3004</strong></td><td style="text-align:center">43.124.222.234:4500</td></tr></tbody></table><!-- 宛先　あてさき　target各個　かっこ受信　じゅしん且つ　かつhttps://medium.com/google-cloud-jp/cloud-nat-endpoint-independent-mapping-39d7eab3e83chttps://tech.zms.co.jp/nat%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C/ --><ul><li>Address-Dependent Mapping</li></ul><p>UDPサーバのアドレスが同じ（ポートが違う）なら受信したパケットのIPアドレスとポートを変換しない、そうしないと、IPアドレスやポートを変換する。<br>例えば：</p><table><thead><tr><th style="text-align:center">送信元アドレス</th><th style="text-align:center">宛先アドレス</th><th style="text-align:center">NATマッピングアドレス</th></tr></thead><tbody><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:<strong>3001</strong></td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center"><strong>1.1.1.2</strong>:3000</td><td style="text-align:center">43.124.222.234:<strong>4501</strong></td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center"><strong>1.1.1.3</strong>:<strong>3003</strong></td><td style="text-align:center">43.124.222.234:<strong>4502</strong></td></tr></tbody></table><ul><li>Address and Port-Dependent Mapping</li></ul><p>UDPサーバのアドレスとポートが同じなら受信したパケットのIPアドレスとポートを変換しない、そうしないと、IPアドレスやポートを変換する。</p><span id="more"></span><p>例えば：</p><table><thead><tr><th style="text-align:center">送信元アドレス</th><th style="text-align:center">宛先アドレス</th><th style="text-align:center">NATマッピングアドレス</th></tr></thead><tbody><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">1.1.1.1:<strong>3001</strong></td><td style="text-align:center">43.124.222.234:<strong>4501</strong></td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center"><strong>1.1.1.2</strong>:3000</td><td style="text-align:center">43.124.222.234:<strong>4502</strong></td></tr><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center"><strong>1.1.1.3</strong>:<strong>3003</strong></td><td style="text-align:center">43.124.222.234:<strong>4503</strong></td></tr></tbody></table><h3 id="Filteringの種類">Filteringの種類</h3><p>フィルタリングはNAT外部から内部に送信するパケットをフィルタリングする行為です。</p><ul><li>Endpoint-Independent Filtering</li></ul><p>一旦内部アドレスを外部にマッピングすると、全ての外部サーバから内部に送信することが可能です。<br>例えば：</p><table><thead><tr><th style="text-align:center">内部アドレス</th><th style="text-align:center">マッピング</th></tr></thead><tbody><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td></tr></tbody></table><table><thead><tr><th style="text-align:center">送信元アドレス</th><th style="text-align:center">宛先アドレス</th><th style="text-align:center">受信する?</th></tr></thead><tbody><tr><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr><tr><td style="text-align:center">1.1.1.1:3001</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr><tr><td style="text-align:center">1.1.1.2:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr><tr><td style="text-align:center">1.1.1.3:3002</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr></tbody></table><ul><li>Address-Dependent Filtering</li></ul><p>内部から外部に送信したサーバ、且つアドレスも同じなら、サーバから内部に送信することが可能です。<br>例えば：</p><table><thead><tr><th style="text-align:center">内部アドレス</th><th style="text-align:center">マッピング</th><th style="text-align:center">送信歴史 宛先アドレス</th></tr></thead><tbody><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">1.1.1.1:3000</td></tr></tbody></table><table><thead><tr><th style="text-align:center">送信元アドレス</th><th style="text-align:center">宛先アドレス</th><th style="text-align:center">受信する?</th></tr></thead><tbody><tr><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr><tr><td style="text-align:center">1.1.1.1:3001</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr><tr><td style="text-align:center">1.1.1.2:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">ダメ ❌</td></tr><tr><td style="text-align:center">1.1.1.3:3002</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">ダメ ❌</td></tr></tbody></table><ul><li>Address and Port-Dependent Filtering</li></ul><p>内部から外部に送信したサーバ、且つアドレスとポートも同じなら、サーバから内部に送信することが可能です。</p><p>例えば：</p><table><thead><tr><th style="text-align:center">内部アドレス</th><th style="text-align:center">マッピング</th><th style="text-align:center">送信歴史 宛先アドレス</th></tr></thead><tbody><tr><td style="text-align:center">192.168.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">1.1.1.1:3000</td></tr></tbody></table><table><thead><tr><th style="text-align:center">送信元アドレス</th><th style="text-align:center">宛先アドレス</th><th style="text-align:center">受信する?</th></tr></thead><tbody><tr><td style="text-align:center">1.1.1.1:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">はい 🟢</td></tr><tr><td style="text-align:center">1.1.1.1:3001</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">ダメ ❌</td></tr><tr><td style="text-align:center">1.1.1.2:3000</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">ダメ ❌</td></tr><tr><td style="text-align:center">1.1.1.3:3002</td><td style="text-align:center">43.124.222.234:4500</td><td style="text-align:center">ダメ ❌</td></tr></tbody></table><h3 id="Fullcone-NAT">Fullcone NAT</h3><p>Fullcone NATはEndpoint-Independent FilteringとEndpoint-Independent Mappingです。</p><h2 id="goで実現する">goで実現する</h2><p>最も重要なのはNATテーブルの実現です。</p><!-- 値　ち重要　じゅうよう --><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// NATテーブル</span><span class="token comment">// キーはプロキシクライアントの送信元アドレス</span><span class="token comment">// 値はマッピングしたUDPサーバ</span><span class="token keyword">var</span> natTable <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>net<span class="token punctuation">.</span>PacketConn<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> getTargetAddress <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>net<span class="token punctuation">.</span>UDPAddr<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// TODO implement proxy protocol</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span> <span class="token punctuation">&#125;</span><span class="token keyword">var</span> packetResponse <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>net<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// TODO implement proxy protocol</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token comment">// mockのUDPプロキシサーバ</span>pc<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">ListenPacket</span><span class="token punctuation">(</span><span class="token string">"udp"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">defer</span> pc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// IPプロトコルによってパケット最大は65535です。</span>  buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">)</span>  n<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> err <span class="token operator">:=</span> pc<span class="token punctuation">.</span><span class="token function">ReadFrom</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>   <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// クライアントのアドレスでマッピングサーバを保存して</span>  conn<span class="token punctuation">,</span> ok <span class="token operator">:=</span> natTable<span class="token punctuation">[</span>addr<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">&#123;</span>   <span class="token comment">// マッピングサーバを作ります</span>   conn<span class="token punctuation">,</span> err <span class="token operator">=</span> net<span class="token punctuation">.</span><span class="token function">ListenPacket</span><span class="token punctuation">(</span><span class="token string">"udp"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>   <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">&#123;</span>     buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">)</span>     <span class="token comment">// リモートサーバ(target)の返信を受信する</span>     n<span class="token punctuation">,</span> src<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">ReadFrom</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>      <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span>     <span class="token comment">// レスポンスデータをクライアントに返信して</span>     <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> pc<span class="token punctuation">.</span><span class="token function">WriteTo</span><span class="token punctuation">(</span><span class="token function">packetResponse</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> addr<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>      <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// 初めてマッピングサーバをNATテーブルに保存して</span>   natTable<span class="token punctuation">[</span>addr<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> conn  <span class="token punctuation">&#125;</span>  target<span class="token punctuation">,</span> remain <span class="token operator">:=</span> <span class="token function">getTargetAddress</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// リモートサーバにデータを送信して</span>  <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">WriteTo</span><span class="token punctuation">(</span>remain<span class="token punctuation">,</span> target<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>   <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;NATの種類&quot;&gt;NATの種類&lt;/h2&gt;
&lt;h3 id=&quot;Mappingの種類&quot;&gt;Mappingの種類&lt;/h3&gt;
&lt;p&gt;マッピングはNAT内部から外部にパケットを送信時にアドレス変換する行為です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Endpoint-Independent Mapping&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NAT内部のネットワークの同じIPアドレスとポートで外部のそれぞれのUDPサーバ（IPアドレスとポートが違う）にパケットを送信すると、各個UDPサーバも同じIPアドレスとポートのパケットを受信する。&lt;br&gt;
例えば：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;送信元アドレス&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;宛先アドレス&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;NATマッピングアドレス&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.1.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:4500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.1.1.1:&lt;strong&gt;3001&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:4500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;1.1.1.3&lt;/strong&gt;:&lt;strong&gt;3002&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:4500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;1.1.1.4&lt;/strong&gt;:&lt;strong&gt;3004&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:4500&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- 
宛先　あてさき　target
各個　かっこ
受信　じゅしん
且つ　かつ

https://medium.com/google-cloud-jp/cloud-nat-endpoint-independent-mapping-39d7eab3e83c
https://tech.zms.co.jp/nat%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C/
 --&gt;
&lt;ul&gt;
&lt;li&gt;Address-Dependent Mapping&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UDPサーバのアドレスが同じ（ポートが違う）なら受信したパケットのIPアドレスとポートを変換しない、そうしないと、IPアドレスやポートを変換する。&lt;br&gt;
例えば：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;送信元アドレス&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;宛先アドレス&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;NATマッピングアドレス&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.1.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:4500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.1.1.1:&lt;strong&gt;3001&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:4500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;1.1.1.2&lt;/strong&gt;:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:&lt;strong&gt;4501&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.1.1:3000&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;1.1.1.3&lt;/strong&gt;:&lt;strong&gt;3003&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43.124.222.234:&lt;strong&gt;4502&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Address and Port-Dependent Mapping&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UDPサーバのアドレスとポートが同じなら受信したパケットのIPアドレスとポートを変換しない、そうしないと、IPアドレスやポートを変換する。&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="UDP" scheme="https://asutorufa.github.io/tags/UDP/"/>
    
    <category term="Network" scheme="https://asutorufa.github.io/tags/Network/"/>
    
    <category term="NAT" scheme="https://asutorufa.github.io/tags/NAT/"/>
    
    <category term="Golang" scheme="https://asutorufa.github.io/tags/Golang/"/>
    
    <category term="Proxy" scheme="https://asutorufa.github.io/tags/Proxy/"/>
    
    <category term="Go" scheme="https://asutorufa.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>golangとollamaでfunction calling</title>
    <link href="https://asutorufa.github.io/posts/23567986/"/>
    <id>https://asutorufa.github.io/posts/23567986/</id>
    <published>2024-11-11T19:11:06.000Z</published>
    <updated>2024-11-11T19:11:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>今回はollamaのオフィシャルクライアントでfuncation callingを使いたいです。　　<br>前回はlangchaingoで使っただけと、試してたらollamaの引数toolsは無効です、githubの実例<a href="https://github.com/tmc/langchaingo/blob/main/examples/ollama-functions-example/ollama_functions_example.go">ollama_functions_example</a>はsystem messageとtoolsのjsonを組み合わせて内容を生成する。例えば：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">systemMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span> bs<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>functions<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">`You have access to the following tools:%sTo use a tool, respond with a JSON object with the following structure: &#123; "tool": &lt;name of the called tool>, "tool_input": &lt;parameters for the tool matching the above JSON schema>&#125;`</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>bs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>これはちょっと優雅でない、<code>ollama/api</code>を使いたいと思います。</p><h2 id="function-callingとは">function callingとは</h2><span id="more"></span><p>llmのレスポンスが外部関数の呼び出しを検知し、関数の結果を組み合わせて内容を生成する機能です。　　<br>例えば：「東京の天気は？」はpromptをとして、「晴れです」と生成する。　　<br>大勢のllmはfunction callingをtoolと読んでいる、呼び出しどき引数として引き渡して内容を生成する。</p><!-- primjs can't support exclude languages,so we direct use hexo tag system --><pre><code class="mermaid">sequenceDiagramactor ユーザユーザ-&gt;&gt;サーバー: 東京の天気は？サーバー-&gt;&gt;llm: promptとtoolsllm--)サーバー: 関数を呼び出し&lt;br&#x2F;&gt;引数（東京）を返すサーバー-&gt;&gt;外部サービス: 東京の天気を取得外部サービス--)サーバー: 天気を返すサーバー-&gt;&gt;llm: 天気をpromptに追加llm--&gt;&gt;サーバー: 生成する内容を返すサーバー-&gt;&gt;ユーザ: 内容を返す</code></pre><!-- 取得：しゅとく --><h2 id="goで実現">goで実現</h2><p>関数と引数の説明(Description)は自然な言葉で良いです、一般的なプログラミングとはちょっと違うと思います。</p><p>toolsの定義</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token string">"github.com/ollama/ollama/api"</span>tools <span class="token operator">:=</span> api<span class="token punctuation">.</span>Tool<span class="token punctuation">&#123;</span>      Type<span class="token punctuation">:</span> <span class="token string">"function"</span><span class="token punctuation">,</span>      Function<span class="token punctuation">:</span> api<span class="token punctuation">.</span>ToolFunction<span class="token punctuation">&#123;</span>       Name<span class="token punctuation">:</span>        <span class="token string">"getCurrentWeather"</span><span class="token punctuation">,</span>       Description<span class="token punctuation">:</span> <span class="token string">"Get the current weather for a city"</span><span class="token punctuation">,</span>       Parameters<span class="token punctuation">:</span> <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>        Type       <span class="token builtin">string</span>   <span class="token string">"json:\"type\""</span>        Required   <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">"json:\"required\""</span>        Properties <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>         Type        <span class="token builtin">string</span>   <span class="token string">"json:\"type\""</span>         Description <span class="token builtin">string</span>   <span class="token string">"json:\"description\""</span>         Enum        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">"json:\"enum,omitempty\""</span>        <span class="token punctuation">&#125;</span> <span class="token string">"json:\"properties\""</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>        Type<span class="token punctuation">:</span>     <span class="token string">"object"</span><span class="token punctuation">,</span>        Required<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"city"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        Properties<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>         Type        <span class="token builtin">string</span>   <span class="token string">"json:\"type\""</span>         Description <span class="token builtin">string</span>   <span class="token string">"json:\"description\""</span>         Enum        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">"json:\"enum,omitempty\""</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>         <span class="token string">"city"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>          Type<span class="token punctuation">:</span>        <span class="token string">"string"</span><span class="token punctuation">,</span>          Description<span class="token punctuation">:</span> <span class="token string">"The city to get the weather for"</span><span class="token punctuation">,</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>外部サービスの呼び出しを実現</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">processToolCall <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cr api<span class="token punctuation">.</span>Chat<span class="token punctuation">.</span>Response<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> cr<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>ToolCalls <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> v<span class="token punctuation">.</span>Function<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">"getCurrentWeather"</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"the weather of %v is 64 and sunny"</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span>Function<span class="token punctuation">.</span>Arguments<span class="token punctuation">[</span><span class="token string">"city"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>      <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span>ErrUnsupported<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>chains を実現</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">uri<span class="token punctuation">,</span> err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">"http://localhost:11434"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>client <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Client<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>messages <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Message<span class="token punctuation">&#123;</span>  <span class="token punctuation">&#123;</span>   Role<span class="token punctuation">:</span>    <span class="token string">"user"</span><span class="token punctuation">,</span>   Content<span class="token punctuation">:</span> prompt<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> o<span class="token punctuation">.</span>llm<span class="token punctuation">.</span><span class="token function">Chat</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span>  <span class="token operator">&amp;</span>api<span class="token punctuation">.</span>ChatRequest<span class="token punctuation">&#123;</span>   Model<span class="token punctuation">:</span>    <span class="token string">"qwen2.5:32b-instruct"</span><span class="token punctuation">,</span>   Stream<span class="token punctuation">:</span>   lo<span class="token punctuation">.</span><span class="token function">ToPtr</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   Messages<span class="token punctuation">:</span> messages<span class="token punctuation">,</span>   Options<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>    <span class="token string">"temperature"</span><span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>   Tools<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Tool<span class="token punctuation">&#123;</span>tools<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token keyword">func</span><span class="token punctuation">(</span>cr api<span class="token punctuation">.</span>ChatResponse<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>      msg<span class="token punctuation">,</span>err <span class="token operator">:=</span> <span class="token function">processToolCall</span><span class="token punctuation">(</span>cr<span class="token punctuation">)</span>      <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> err      <span class="token punctuation">&#125;</span>     messages <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>messages<span class="token punctuation">,</span> api<span class="token punctuation">.</span>Message<span class="token punctuation">&#123;</span>      Role<span class="token punctuation">:</span>    <span class="token string">"tool"</span><span class="token punctuation">,</span>      Content<span class="token punctuation">:</span> msg<span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token keyword">return</span> <span class="token boolean">nil</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>err <span class="token operator">=</span> o<span class="token punctuation">.</span>llm<span class="token punctuation">.</span><span class="token function">Chat</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span>  <span class="token operator">&amp;</span>api<span class="token punctuation">.</span>ChatRequest<span class="token punctuation">&#123;</span>   Model<span class="token punctuation">:</span>    <span class="token string">"qwen2.5:32b-instruct"</span><span class="token punctuation">,</span>   Stream<span class="token punctuation">:</span>   lo<span class="token punctuation">.</span><span class="token function">ToPtr</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   Messages<span class="token punctuation">:</span> messages<span class="token punctuation">,</span>   Options<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>    <span class="token string">"temperature"</span><span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token keyword">func</span><span class="token punctuation">(</span>cr api<span class="token punctuation">.</span>ChatResponse<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span>   fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>cr<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>Content<span class="token punctuation">)</span>   <span class="token keyword">return</span> <span class="token boolean">nil</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="実行">実行</h2><p>prompt：<code>東京の天気は？</code><br>返事：　<code>東京の天気は晴れで、温度は約64°F（約18°C）です</code></p><h2 id="参考">参考</h2><p><a href="https://zenn.dev/kazuwombat/articles/1f39f003298028">https://zenn.dev/kazuwombat/articles/1f39f003298028</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今回はollamaのオフィシャルクライアントでfuncation callingを使いたいです。　　&lt;br&gt;
前回はlangchaingoで使っただけと、試してたらollamaの引数toolsは無効です、githubの実例&lt;a href=&quot;https://github.com/tmc/langchaingo/blob/main/examples/ollama-functions-example/ollama_functions_example.go&quot;&gt;ollama_functions_example&lt;/a&gt;はsystem messageとtoolsのjsonを組み合わせて内容を生成する。例えば：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-go&quot; data-language=&quot;go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;systemMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
 bs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Marshal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;functions&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
  log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Fatal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;

 &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`You have access to the following tools:

%s

To use a tool, respond with a JSON object with the following structure: 
&amp;#123;
 &quot;tool&quot;: &amp;lt;name of the called tool&gt;,
 &quot;tool_input&quot;: &amp;lt;parameters for the tool matching the above JSON schema&gt;
&amp;#125;
`&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;これはちょっと優雅でない、&lt;code&gt;ollama/api&lt;/code&gt;を使いたいと思います。&lt;/p&gt;
&lt;h2 id=&quot;function-callingとは&quot;&gt;function callingとは&lt;/h2&gt;</summary>
    
    
    
    <category term="llm" scheme="https://asutorufa.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://asutorufa.github.io/tags/llm/"/>
    
    <category term="function calling" scheme="https://asutorufa.github.io/tags/function-calling/"/>
    
    <category term="text embedding" scheme="https://asutorufa.github.io/tags/text-embedding/"/>
    
  </entry>
  
  <entry>
    <title>langchaingoでRAGを試しました</title>
    <link href="https://asutorufa.github.io/posts/95db8f9/"/>
    <id>https://asutorufa.github.io/posts/95db8f9/</id>
    <published>2024-11-06T10:37:12.000Z</published>
    <updated>2024-11-06T10:37:12.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>日本語はまだ勉強中ですから、変などころあったら、ぜひコメントしてください。</p></blockquote><h2 id="RAGとは">RAGとは</h2><p>RAGはRetrieval augmented generationの略です。<br>大規模言語モデル内容を生成する前に、promptによる外部のデーターベースに知識を検索、元のpromptと組み合わせて、アウトプットを改善するための技術です。</p><pre><code class="mermaid">sequenceDiagramactor ユーザユーザ-&gt;&gt;サーバー: prompt: 今日の注目&lt;br&#x2F;&gt;の新聞は何ですか？サーバー-&gt;&gt;ベクトルデータベース: promptをキーワードとして&lt;br&#x2F;&gt;知識を検索ベクトルデータベース--)サーバー: 知識を返すサーバー-&gt;&gt;llm: promptと知識を組み合わせてllm--&gt;&gt;サーバー: 生成する内容を返すサーバー-&gt;&gt;ユーザ: 内容を返す</code></pre><p>例えば：</p><p>ユーザ：今日の注目の新聞は何ですか？</p><p>gemini：</p><pre class="language-txt" data-language="txt"><code class="language-txt">今日の注目の新聞記事については、リアルタイムで変化するため、特定の新聞社名を挙げて「今日の注目の記事はこれです」と断言することは難しいです。</code></pre><p>chatgpt:</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">本日（2024年11月6日）の日本の注目ニュースは次のような内容が含まれている可能性があります：アメリカ大統領選挙の最新動向 - 特に若い世代の投票行動や政策への関心が注目されています。国内経済とインフレの動き - 日本の物価高騰が続き、家計への影響や政府の対応が議論されています。アジアの地政学的緊張 - 日本周辺地域の安全保障に関連する動向が続いています。以上の内容が注目ニュースとして考えられますが、詳細については直接ニュースソースで確認されるとよいでしょう。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>geminiはリアルタイムによっての内容は回答できません。<br>chatgptはRAGか、Function Callingか、どちらかを使っていると思います。<br>今回はgolang+langchaingo+ollama+qdrantでRAGを実験してみます。</p><h2 id="準備">準備</h2><span id="more"></span><h3 id="ollamaをインストール">ollamaをインストール</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://ollama.com/install.sh <span class="token operator">|</span> <span class="token function">sh</span></code></pre><h3 id="qdrantのコンテナを実行">qdrantのコンテナを実行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/.config/qdrant<span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">6333</span>:6333 <span class="token parameter variable">-p</span> <span class="token number">6334</span>:6334 <span class="token punctuation">\</span>    <span class="token parameter variable">-v</span> ~/.config/qdrant:/qdrant/storage:z <span class="token punctuation">\</span>    qdrant/qdrant<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="bge-large-en-v1-5をollamaで実行">bge-large-en-v1.5をollamaで実行</h3><p>知識をベクトルデータベースに保存するにはText Embedingモデルが必要です。今回はbge-large-en-v1.5を使うことになりました。</p><p>ollamaのモデルライブラリにはbge-large-en-v1.5がありませんので、bge-large-en-v1.5をGGUFに変換することが必要です。</p><p>git-lfsとcmakeをインストール</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> git-lfs cmake<span class="token function">git</span> lfs <span class="token function">install</span><span class="token function">git</span> clone https://huggingface.co/BAAI/bge-large-en-v1.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>llama.cppをクローン</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/ggerganov/llama.cpp.git<span class="token builtin class-name">cd</span> llama.cpp/<span class="token comment"># python仮想環境はおすすめです</span><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3.12-venvpython3 <span class="token parameter variable">-m</span> venv python-venv./python-venv/bin/pip3  <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GGUFに変換</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> ./llama.cpp/python-venv/bin/python3 ./llama.cpp/convert_hf_to_gguf.py ./bge-large-en-v1.5/<span class="token builtin class-name">cd</span> bge-large-en-v1.5/<span class="token builtin class-name">echo</span> <span class="token string">"FROM ./bge-large-en-v1.5-F16.gguf"</span> <span class="token operator">></span> Modelfileollama create bge-large-en-v1.5-F16 <span class="token parameter variable">-f</span> Modelfile<span class="token comment"># embedingモデルはollamaで直接実行はできませんです</span><span class="token comment"># Error: "bge-large-en-v1.5-F16" does not support generate</span><span class="token comment"># ここは試してみてだけです</span>ollama run bge-large-en-v1.5-F16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Qwen2-5をollamaで実行">Qwen2.5をollamaで実行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 32bは20GBのGPUメモリ(VRAM)が必要です</span><span class="token comment"># CPUもできるですが、非常に重いですから</span><span class="token comment"># 3bや7bや14bなどもぜひ使ってみてください</span>ollama run qwen2.5:32b-instruct<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="実現">実現</h2><h3 id="text-embedder">text embedder</h3><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token punctuation">(</span> <span class="token string">"github.com/tmc/langchaingo/embeddings"</span> <span class="token string">"github.com/tmc/langchaingo/llms/ollama"</span> <span class="token string">"github.com/tmc/langchaingo/vectorstores/qdrant"</span><span class="token punctuation">)</span> llm<span class="token punctuation">,</span> err <span class="token operator">:=</span> ollama<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>  ollama<span class="token punctuation">.</span><span class="token function">WithModel</span><span class="token punctuation">(</span><span class="token string">"bge-large-en-v1.5-F16"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  ollama<span class="token punctuation">.</span><span class="token function">WithServerURL</span><span class="token punctuation">(</span><span class="token string">"http://localhost:11434"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> embeder<span class="token punctuation">,</span> err <span class="token operator">:=</span> embeddings<span class="token punctuation">.</span><span class="token function">NewEmbedder</span><span class="token punctuation">(</span>llm<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>qu<span class="token punctuation">,</span>err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">"http://localhost:6333"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> qd<span class="token punctuation">,</span> err <span class="token operator">:=</span> qdrant<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>  qdrant<span class="token punctuation">.</span><span class="token function">WithURL</span><span class="token punctuation">(</span><span class="token operator">*</span>qu<span class="token punctuation">)</span><span class="token punctuation">,</span>  qdrant<span class="token punctuation">.</span><span class="token function">WithCollectionName</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  qdrant<span class="token punctuation">.</span><span class="token function">WithEmbedder</span><span class="token punctuation">(</span>embeder<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>テキストを導入</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// TextToChunks テキストを分割</span><span class="token keyword">func</span> <span class="token function">TextToChunks</span><span class="token punctuation">(</span>r io<span class="token punctuation">.</span>Reader<span class="token punctuation">,</span> chunkSize<span class="token punctuation">,</span> chunkOverlap <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Document<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 新たなドキュメンタリーローダーを作成</span> docLoaded <span class="token operator">:=</span> documentloaders<span class="token punctuation">.</span><span class="token function">NewText</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token comment">// テキストを再帰的に分割し方法</span> split <span class="token operator">:=</span> textsplitter<span class="token punctuation">.</span><span class="token function">NewRecursiveCharacter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 分割サイズを設定</span> split<span class="token punctuation">.</span>ChunkSize <span class="token operator">=</span> chunkSize <span class="token comment">// 重なるサイズを設定</span> split<span class="token punctuation">.</span>ChunkOverlap <span class="token operator">=</span> chunkOverlap <span class="token comment">// ロードして分割する</span> docs<span class="token punctuation">,</span> err <span class="token operator">:=</span> docLoaded<span class="token punctuation">.</span><span class="token function">LoadAndSplit</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> split<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> docs<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span>  docs<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">TextToChunks</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span><span class="token string">`テストテキスト`</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token comment">// ベクトルデーターベースに導入</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> qd<span class="token punctuation">.</span><span class="token function">AddDocuments</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> docs<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="RAG">RAG</h3><p>知識を検索</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">optionsVector <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>vectorstores<span class="token punctuation">.</span>Option<span class="token punctuation">&#123;</span> vectorstores<span class="token punctuation">.</span><span class="token function">WithScoreThreshold</span><span class="token punctuation">(</span><span class="token number">0.80</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>retriever <span class="token operator">:=</span> vectorstores<span class="token punctuation">.</span><span class="token function">ToRetriever</span><span class="token punctuation">(</span>qd<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> optionsVector<span class="token operator">...</span><span class="token punctuation">)</span>docRetrieved<span class="token punctuation">,</span> err <span class="token operator">:=</span> retriever<span class="token punctuation">.</span><span class="token function">GetRelevantDocuments</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>llmで予測する</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">llm<span class="token punctuation">,</span> err <span class="token operator">:=</span> ollama<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span> ollama<span class="token punctuation">.</span><span class="token function">WithModel</span><span class="token punctuation">(</span><span class="token string">"qwen2.5:32b-instruct"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ollama<span class="token punctuation">.</span><span class="token function">WithServerURL</span><span class="token punctuation">(</span><span class="token string">"http://localhost:11434"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> msgs <span class="token punctuation">[</span><span class="token punctuation">]</span>llms<span class="token punctuation">.</span>MessageContent<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> doc <span class="token operator">:=</span> <span class="token keyword">range</span> docRetrieved <span class="token punctuation">&#123;</span> msgs <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>msgs<span class="token punctuation">,</span> llms<span class="token punctuation">.</span><span class="token function">TextParts</span><span class="token punctuation">(</span>llms<span class="token punctuation">.</span>ChatMessageTypeAI<span class="token punctuation">,</span>  doc<span class="token punctuation">.</span>PageContent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>msgs <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>msgs<span class="token punctuation">,</span> llms<span class="token punctuation">.</span><span class="token function">TextParts</span><span class="token punctuation">(</span>llms<span class="token punctuation">.</span>ChatMessageTypeHuman<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> llm<span class="token punctuation">.</span><span class="token function">GenerateContent</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msgs<span class="token punctuation">,</span> llms<span class="token punctuation">.</span><span class="token function">WithTemperature</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> llms<span class="token punctuation">.</span><span class="token function">WithStreamingFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> chunk <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 結果をストリームで標準出力に出力して</span> fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- 標準出力：ひょうじゅんしゅつりょく --><h2 id="参考">参考</h2><ul><li><a href="https://tech.takuyakobayashi.jp/2024/06/14/526">https://tech.takuyakobayashi.jp/2024/06/14/526</a></li><li><a href="https://aws.amazon.com/jp/what-is/retrieval-augmented-generation/">https://aws.amazon.com/jp/what-is/retrieval-augmented-generation/</a></li><li><a href="https://wiki.eryajf.net/pages/6bd394/#%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87">https://wiki.eryajf.net/pages/6bd394/#前置准备</a></li><li><a href="https://forbesjapan.com/articles/detail/72042">https://forbesjapan.com/articles/detail/72042</a></li><li><a href="https://en.wikipedia.org/wiki/Retrieval-augmented_generation">https://en.wikipedia.org/wiki/Retrieval-augmented_generation</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;日本語はまだ勉強中ですから、変などころあったら、ぜひコメントしてください。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;RAGとは&quot;&gt;RAGとは&lt;/h2&gt;
&lt;p&gt;RAGはRetrieval augmented generationの略です。&lt;br&gt;
大規模言語モデル内容を生成する前に、promptによる外部のデーターベースに知識を検索、元のpromptと組み合わせて、アウトプットを改善するための技術です。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;mermaid&quot;&gt;
sequenceDiagram
actor ユーザ
ユーザ-&amp;gt;&amp;gt;サーバー: prompt: 今日の注目&amp;lt;br&amp;#x2F;&amp;gt;の新聞は何ですか？
サーバー-&amp;gt;&amp;gt;ベクトルデータベース: promptをキーワードとして&amp;lt;br&amp;#x2F;&amp;gt;知識を検索
ベクトルデータベース--)サーバー: 知識を返す
サーバー-&amp;gt;&amp;gt;llm: promptと知識を組み合わせて
llm--&amp;gt;&amp;gt;サーバー: 生成する内容を返す
サーバー-&amp;gt;&amp;gt;ユーザ: 内容を返す
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;例えば：&lt;/p&gt;
&lt;p&gt;ユーザ：今日の注目の新聞は何ですか？&lt;/p&gt;
&lt;p&gt;gemini：&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot; data-language=&quot;txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;今日の注目の新聞記事については、リアルタイムで変化するため、特定の新聞社名を挙げて「今日の注目の記事はこれです」と断言することは難しいです。&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;chatgpt:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-txt&quot; data-language=&quot;txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;本日（2024年11月6日）の日本の注目ニュースは次のような内容が含まれている可能性があります：

アメリカ大統領選挙の最新動向 - 特に若い世代の投票行動や政策への関心が注目されています。
国内経済とインフレの動き - 日本の物価高騰が続き、家計への影響や政府の対応が議論されています。
アジアの地政学的緊張 - 日本周辺地域の安全保障に関連する動向が続いています。
以上の内容が注目ニュースとして考えられますが、詳細については直接ニュースソースで確認されるとよいでしょう。&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;geminiはリアルタイムによっての内容は回答できません。&lt;br&gt;
chatgptはRAGか、Function Callingか、どちらかを使っていると思います。&lt;br&gt;
今回はgolang+langchaingo+ollama+qdrantでRAGを実験してみます。&lt;/p&gt;
&lt;h2 id=&quot;準備&quot;&gt;準備&lt;/h2&gt;</summary>
    
    
    
    <category term="llm" scheme="https://asutorufa.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://asutorufa.github.io/tags/llm/"/>
    
    <category term="text embedding" scheme="https://asutorufa.github.io/tags/text-embedding/"/>
    
    <category term="rag" scheme="https://asutorufa.github.io/tags/rag/"/>
    
  </entry>
  
  <entry>
    <title>感觉日语是一种很随意的语言</title>
    <link href="https://asutorufa.github.io/posts/190e8188/"/>
    <id>https://asutorufa.github.io/posts/190e8188/</id>
    <published>2024-07-29T21:09:46.000Z</published>
    <updated>2024-07-29T21:09:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先推荐一个视频 <a href="https://www.youtube.com/watch?v=fSnh-gz3ncc&amp;list=PLAdD6WfVVRIW-sB2MmPSUtLG6lY2_TrVy">【文法「文の成分」】【10分間の国文法講座：ラーニング・ラボWeb講座】</a>, 大概讲了日本中学（初中）考试的一些文法。</p><h2 id="动词活用">动词活用</h2><p>相信不少中国境内的人学习动词都是 一类动词， 二类动词，三类动词， 并且老师甚至还会告诉你不要记《标准日本语》上面带ます的动词，要记字典型。<br>然后大概会告诉一类动词的活用，类似下面：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">「う」段 →「い」段 + ます以「う」、「つ」、「る」结尾的词 → 去掉词尾 + って  ...  ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>相信不少人（至少我是）会以为这是类似英文那种动词变形，过去式等这类的。<br>然而后来我发现，这完全是误人子弟啊，日本中学（初中）根本就不用这种所谓的变形，也不是说不用，只是他们不会用这种规则去活用动词。</p><p>事实上的动词活用分类：</p><span id="more"></span><ul><li>五段活用</li><li>上一段活用</li><li>下一段活用</li><li>サ変</li><li>か変</li></ul><p>那么什么是五段活用呢：</p><blockquote><p>未然形（ア段）が意思・推量の語尾（あるいは助動詞）の「う」に接続する際にオ段となり、実質的に五つの段全部にわたって活用することとなったものである。<br>就是说，动词活用会使用全部五个段的音</p></blockquote><p>比如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">カ行五段活用「書く」の例    未然形-か、こ    連用形-き、い    終止形-く    連体形-く    仮定形-け    命令形-け动词活用时，子音的变化使用了 あ、い、う、え、お　五个段音。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没错，中学的教学视频都是要根据活用后的形式去反推是不是五段活用，而不是根据字典型的子音去反推是什么类型的动词。<br>而之前老师不让你记得“ます型”，其实是 <strong>连用形（指后面会接用言）</strong> ，恰巧这个连用形就可以用来判断是不是五段活用（当然其他活用后的形也可以进行反推），然后在根据是不是五段活用去变化其他形式。<br>而且连用型在句子中使用非常广泛，标准日本语默认是这种形式的动词不是没有道理的。<br>而  って 这种变形是音便，音便有自己的规则（有时也需要看是不是五段动词），和动词活用不一样。<br>也就是说，你不能只记一个字典型，还需要记至少一个活用后的形式，比如未然形的其中一种，会比较好记一点。<br>而是不是五段活用，可能是日本人觉得这个是五段活用，那他就五段活用吧，感觉很随意。（而一类，二类，三类，这种分类方式，更像是强行总结了一种方法方便外国人去学习日语。）</p><h2 id="连浊">连浊</h2><p>连浊这个我是真的一头雾水，也查了不少资料，大概的规则就是：</p><ul><li>和词（日本人自己创造的）或者很早就传到日本的外来语，日本人已经当作是自己的了，那么复合词就需要连浊。</li><li>汉语（中国语）和外来语的复合词是不需要连浊的。</li></ul><p>感觉这个也很随意呀，感觉也是我觉得这个要连浊，那就要连浊，我觉得不需要那就不需要。</p><h2 id="「は」-と-「が」">「は」　と　「が」</h2><p>は，が 这两个我也是分不清，到底什么时候用は，什么时候该用が。<br>能查到的规则基本都是：</p><ul><li>は 强调后面的</li><li>が 强调前面的</li></ul><p>看了不少相关的视频，发现日本的专门教日语的老师也说不清规则，但他们知道什么时候该用什么，如果用错了，他们会觉得哪里很奇怪，但是说不清规则。<br>感觉非常随意。。。。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;首先推荐一个视频 &lt;a href=&quot;https://www.youtube.com/watch?v=fSnh-gz3ncc&amp;amp;list=PLAdD6WfVVRIW-sB2MmPSUtLG6lY2_TrVy&quot;&gt;【文法「文の成分」】【10分間の国文法講座：ラーニング・ラボWeb講座】&lt;/a&gt;, 大概讲了日本中学（初中）考试的一些文法。&lt;/p&gt;
&lt;h2 id=&quot;动词活用&quot;&gt;动词活用&lt;/h2&gt;
&lt;p&gt;相信不少中国境内的人学习动词都是 一类动词， 二类动词，三类动词， 并且老师甚至还会告诉你不要记《标准日本语》上面带ます的动词，要记字典型。&lt;br&gt;
然后大概会告诉一类动词的活用，类似下面：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;「う」段 →「い」段 + ます
以「う」、「つ」、「る」结尾的词 → 去掉词尾 + って
  ...
  ...&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;相信不少人（至少我是）会以为这是类似英文那种动词变形，过去式等这类的。&lt;br&gt;
然而后来我发现，这完全是误人子弟啊，日本中学（初中）根本就不用这种所谓的变形，也不是说不用，只是他们不会用这种规则去活用动词。&lt;/p&gt;
&lt;p&gt;事实上的动词活用分类：&lt;/p&gt;</summary>
    
    
    
    <category term="日本語" scheme="https://asutorufa.github.io/categories/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    
    <category term="日本語" scheme="https://asutorufa.github.io/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>实现一个简单的Kubernetes controller</title>
    <link href="https://asutorufa.github.io/posts/edf1c330/"/>
    <id>https://asutorufa.github.io/posts/edf1c330/</id>
    <published>2024-03-30T15:09:58.000Z</published>
    <updated>2024-03-30T15:09:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="controller是什么">controller是什么</h2><p>简单来说，controller就是监听kubernetes的配置/状态变化，自动对资源进行调节。比如kubernetes内置的controller有Deployment、StatefulSet、DaemonSet。</p><h2 id="实现controller">实现controller</h2><p>这里我们实现一个简单的loadbalancer controller，使用kubernetes的client-go。</p><p>先创建一个新的Serivce,并且指定Type为LoadBalancer。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.0.171.239  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这时Service的状态还是pending,因为还没有controller为其分配IP地址。</p><p>创建新的client</p><span id="more"></span><pre class="line-numbers language-go" data-language="go"><code class="language-go">config<span class="token punctuation">,</span> err <span class="token operator">:=</span> rest<span class="token punctuation">.</span><span class="token function">InClusterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>cli<span class="token punctuation">,</span> err <span class="token operator">:=</span> kubernetes<span class="token punctuation">.</span><span class="token function">NewForConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建一个新的对Service状态变化的监听</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">wch<span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Services</span><span class="token punctuation">(</span>corev1<span class="token punctuation">.</span>NamespaceAll<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Watch</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>ListOptions<span class="token punctuation">&#123;</span>Watch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span> <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">defer</span> wch<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是新建的Serivce,并且Type为LoadBalancer，则自动为其分配一个IP地址。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 端口分配范围</span><span class="token keyword">var</span> portRange <span class="token operator">=</span> atomic<span class="token punctuation">.</span>Uint32<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> portRange<span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">select</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">case</span> <span class="token operator">&lt;-</span>signChannel<span class="token punctuation">:</span>   <span class="token keyword">return</span>  <span class="token keyword">case</span> obj<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>wch<span class="token punctuation">.</span><span class="token function">ResultChan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span>   <span class="token punctuation">&#125;</span>   svc<span class="token punctuation">,</span> ok <span class="token operator">:=</span> obj<span class="token punctuation">.</span>Object<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">)</span>   <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">&#123;</span>    <span class="token keyword">continue</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">switch</span> obj<span class="token punctuation">.</span>Type <span class="token punctuation">&#123;</span>   <span class="token keyword">case</span> watch<span class="token punctuation">.</span>Added<span class="token punctuation">:</span>                <span class="token comment">// 判断是否是LoadBalancer</span>                <span class="token comment">// 生成环境中还应结合Annotations进行判断，防止误更改错误的Service.</span>    <span class="token keyword">if</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Type <span class="token operator">!=</span> corev1<span class="token punctuation">.</span>ServiceTypeLoadBalancer <span class="token punctuation">&#123;</span>     <span class="token keyword">continue</span>    <span class="token punctuation">&#125;</span>                <span class="token comment">// 生成端口，并创建转发（只会打印，不会真正创建规则）</span>    sport <span class="token operator">:=</span> portRange<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token function">forward</span><span class="token punctuation">(</span>svc<span class="token punctuation">,</span> sport<span class="token punctuation">)</span>                <span class="token comment">// 为service分配IP地址</span>    svc<span class="token punctuation">.</span>Status<span class="token punctuation">.</span>LoadBalancer<span class="token punctuation">.</span>Ingress <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>LoadBalancerIngress<span class="token punctuation">&#123;</span>     <span class="token punctuation">&#123;</span>      IP<span class="token punctuation">:</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span>      Ports<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>corev1<span class="token punctuation">.</span>PortStatus<span class="token punctuation">&#123;</span>       <span class="token punctuation">&#123;</span>        Port<span class="token punctuation">:</span> <span class="token function">int32</span><span class="token punctuation">(</span>sport<span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>                <span class="token comment">// 更新service</span>    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span>     <span class="token function">CoreV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>     <span class="token function">Services</span><span class="token punctuation">(</span>svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">)</span><span class="token punctuation">.</span>     <span class="token function">UpdateStatus</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> svc<span class="token punctuation">,</span> metav1<span class="token punctuation">.</span>UpdateOptions<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>     slog<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"service added"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIPs<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>   <span class="token keyword">case</span> watch<span class="token punctuation">.</span>Modified<span class="token punctuation">:</span>    slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"service modified"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIPs<span class="token punctuation">)</span>   <span class="token keyword">case</span> watch<span class="token punctuation">.</span>Deleted<span class="token punctuation">:</span>    slog<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"service deleted"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIPs<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// ...</span><span class="token comment">// ...</span><span class="token comment">// 模拟实现iptables自动创建转发</span><span class="token keyword">func</span> <span class="token function">forward</span><span class="token punctuation">(</span>svc <span class="token operator">*</span>corev1<span class="token punctuation">.</span>Service<span class="token punctuation">,</span> sport <span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> ip<span class="token punctuation">,</span> err <span class="token operator">:=</span> netip<span class="token punctuation">.</span><span class="token function">ParseAddr</span><span class="token punctuation">(</span>svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>Ports <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> ipt <span class="token builtin">string</span>  <span class="token keyword">var</span> mask <span class="token builtin">string</span>  <span class="token keyword">if</span> ip<span class="token punctuation">.</span><span class="token function">Is4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   ipt <span class="token operator">=</span> <span class="token string">"iptables"</span>   mask <span class="token operator">=</span> <span class="token string">"32"</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   ipt <span class="token operator">=</span> <span class="token string">"ip6tables"</span>   mask <span class="token operator">=</span> <span class="token string">"128"</span>  <span class="token punctuation">&#125;</span>  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>   ipt<span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"filter"</span><span class="token punctuation">,</span> <span class="token string">"-A"</span><span class="token punctuation">,</span> <span class="token string">"FORWARD"</span><span class="token punctuation">,</span>   <span class="token string">"-d"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>mask<span class="token punctuation">,</span>   <span class="token string">"-p"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Protocol<span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"--dport"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"-j"</span><span class="token punctuation">,</span> <span class="token string">"DROP"</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>   ipt<span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"nat"</span><span class="token punctuation">,</span> <span class="token string">"-I"</span><span class="token punctuation">,</span> <span class="token string">"PRETROUTING"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token string">"-p"</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Protocol<span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"--dport"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>sport<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token string">"-j"</span><span class="token punctuation">,</span> <span class="token string">"DNAT"</span><span class="token punctuation">,</span>   <span class="token string">"--to"</span><span class="token punctuation">,</span> net<span class="token punctuation">.</span><span class="token function">JoinHostPort</span><span class="token punctuation">(</span>svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>Port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>   ipt<span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"nat"</span><span class="token punctuation">,</span> <span class="token string">"-I"</span><span class="token punctuation">,</span> <span class="token string">"POSTROUTING"</span><span class="token punctuation">,</span>   <span class="token string">"-d"</span><span class="token punctuation">,</span> svc<span class="token punctuation">.</span>Spec<span class="token punctuation">.</span>ClusterIP<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>mask<span class="token punctuation">,</span>   <span class="token string">"-p"</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span>Protocol<span class="token punctuation">,</span>   <span class="token string">"-j"</span><span class="token punctuation">,</span> <span class="token string">"MASQUERADE"</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行这个简单程序，再观察Serivce, 就会发现Serivice已经不再处于pending状态，并也为其分配了一个IP地址，虽然不能真正使用此地址进行访问，因为我们并没有创建真正的转发规则。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.0.171.239  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer<span class="token key atrule">status</span><span class="token punctuation">:</span>  <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>    <span class="token key atrule">ingress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 10.0.171.239<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>k3s的<a href="https://github.com/k3s-io/klipper-lb">klipper-lb</a>是一个很简单loadbalancer实现，代码只是几行脚本。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function-name function">start_proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">src_range</span> <span class="token keyword">in</span> <span class="token variable">$&#123;SRC_RANGES<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">,</span><span class="token operator">/</span> &#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>        <span class="token keyword">if</span> <span class="token builtin class-name">echo</span> <span class="token variable">$&#123;src_range&#125;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Eq</span> <span class="token string">":"</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            ip6tables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-I</span> FORWARD <span class="token parameter variable">-s</span> <span class="token variable">$&#123;src_range&#125;</span> <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> ACCEPT        <span class="token keyword">else</span>            iptables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-I</span> FORWARD <span class="token parameter variable">-s</span> <span class="token variable">$&#123;src_range&#125;</span> <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> ACCEPT        <span class="token keyword">fi</span>    <span class="token keyword">done</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">dest_ip</span> <span class="token keyword">in</span> <span class="token variable">$&#123;DEST_IPS<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">,</span><span class="token operator">/</span> &#125;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>        <span class="token keyword">if</span> <span class="token builtin class-name">echo</span> <span class="token variable">$&#123;dest_ip&#125;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Eq</span> <span class="token string">":"</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/sys/net/ipv6/conf/all/forwarding<span class="token variable">)</span></span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span>            ip6tables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-A</span> FORWARD <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/128 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> DROP            ip6tables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> PREROUTING <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;SRC_PORT&#125;</span> <span class="token parameter variable">-j</span> DNAT <span class="token parameter variable">--to</span> <span class="token punctuation">[</span><span class="token variable">$&#123;dest_ip&#125;</span><span class="token punctuation">]</span>:<span class="token variable">$&#123;DEST_PORT&#125;</span>            ip6tables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/128 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">-j</span> MASQUERADE        <span class="token keyword">else</span>            <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/sys/net/ipv4/ip_forward<span class="token variable">)</span></span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span>            iptables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-A</span> FORWARD <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/32 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;DEST_PORT&#125;</span> <span class="token parameter variable">-j</span> DROP            iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> PREROUTING <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">--dport</span> <span class="token variable">$&#123;SRC_PORT&#125;</span> <span class="token parameter variable">-j</span> DNAT <span class="token parameter variable">--to</span> <span class="token variable">$&#123;dest_ip&#125;</span><span class="token builtin class-name">:</span><span class="token variable">$&#123;DEST_PORT&#125;</span>            iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-I</span> POSTROUTING <span class="token parameter variable">-d</span> <span class="token variable">$&#123;dest_ip&#125;</span>/32 <span class="token parameter variable">-p</span> <span class="token variable">$&#123;DEST_PROTO&#125;</span> <span class="token parameter variable">-j</span> MASQUERADE        <span class="token keyword">fi</span>    <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;controller是什么&quot;&gt;controller是什么&lt;/h2&gt;
&lt;p&gt;简单来说，controller就是监听kubernetes的配置/状态变化，自动对资源进行调节。比如kubernetes内置的controller有Deployment、StatefulSet、DaemonSet。&lt;/p&gt;
&lt;h2 id=&quot;实现controller&quot;&gt;实现controller&lt;/h2&gt;
&lt;p&gt;这里我们实现一个简单的loadbalancer controller，使用kubernetes的client-go。&lt;/p&gt;
&lt;p&gt;先创建一个新的Serivce,并且指定Type为LoadBalancer。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; v1
&lt;span class=&quot;token key atrule&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Service
&lt;span class=&quot;token key atrule&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; my&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;service
&lt;span class=&quot;token key atrule&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;app.kubernetes.io/name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; MyApp
  &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; TCP
      &lt;span class=&quot;token key atrule&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;targetPort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;clusterIP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10.0.171.239
  &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; LoadBalancer&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时Service的状态还是pending,因为还没有controller为其分配IP地址。&lt;/p&gt;
&lt;p&gt;创建新的client&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/tags/Kubernetes/"/>
    
    <category term="CRI" scheme="https://asutorufa.github.io/tags/CRI/"/>
    
    <category term="container" scheme="https://asutorufa.github.io/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>动漫影评</title>
    <link href="https://asutorufa.github.io/posts/665020d8/"/>
    <id>https://asutorufa.github.io/posts/665020d8/</id>
    <published>2023-09-23T23:21:15.000Z</published>
    <updated>2023-09-23T23:21:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前我只会记录最近看了个，有些看的比较早的就不记录了，记忆也比较模糊。</p><h2 id="自定义神剧（个人主观决定）">自定义神剧（个人主观决定）</h2><ul><li>CLANNAD</li><li>Kanon</li><li>リトルバスターズ!</li><li>Air</li><li>Angel Beats! -1st beat-</li><li>かぎなど</li><li>true tears</li><li>花咲くいろは</li><li>TARI TARI</li></ul><span id="more"></span><h2 id="Key">Key</h2><p>key社的动漫作品我几乎全看了，大部分都很好看，推荐：</p><ul><li>CLANNAD</li><li>Kanon</li><li>リトルバスターズ!</li><li>Air</li><li>Angel Beats! -1st beat-</li></ul><h3 id="リトルバスターズ">リトルバスターズ!</h3><p>主讲友情，第一季主要根据不同角色为引进行剧情引导，剧情引导也很自然。<br>第二季类似揭秘篇，来揭秘第一季剧情的真实面目及背景，当然也是key社的特点，真实中带有一点奇幻。<br>还有几集ova讲隐藏角色和后续剧情之类的。</p><p>动画制作是 J.C. Staff, 对我来说很好，崛江由衣配的男主角我也很喜欢，很符合角色的形象。</p><p>对我来说，与Kanon，CLANNAD略逊一筹，但也很好看，非常推荐，我是一天就看完了第一季20多集，第二天把剩下都看完了。</p><h4 id="クドわふたー">クドわふたー</h4><p>算是不同世界线的一个剧场版，女主角变成了クド，剧情也比较短，没有TV动画好看，但也能看，不影响主剧剧情。</p><h3 id="Angel-Beats-1st-beat">Angel Beats! -1st beat-</h3><p>与P.A. Works合作的第一部原创TV动画，剧情背景是死后世界，主讲男主一行人对女主的误解，及最后知道真相后对主角一行人的救赎。<br>剧情还是比较好看的，也没有硬伤，相信每个人看完之后都对人的一生的意义有不同看法，相信也能让不少人决定自己今后应该如何活下去。</p><p>比不上Key社自己的作品，但也比另外两部原创动画好看且有意义，值得一看。</p><h3 id="Kanon">Kanon</h3><p>这部算是主讲男主对几位女主的救赎（除水瀬名雪），なゆき的剧情实在是太短了，也没有其他几位女主角的好看，至少TV动画是这样的。<br>让我印象最深刻的是沢渡真琴，尤其是飯塚雅弓的配音实在是太完美了，可能因为我家里也有养猫，所以会有同感，喜欢猫，但每次猫撒娇，不知道是因为他生病了，还是单纯的撒娇，很让人担心。<br>因为这部算是按照GAL的模式改编的，有些地方可能比较生硬，但我还是非常喜欢这部作品，比上面的リトルバスターズ和Angel Beats都要喜欢。</p><h3 id="Air">Air</h3><p>这部前期和Kanon比较像，也是讲对几位女主的救赎，但整个剧情的设定完全变了。<br>主题曲是很好听，也很出名，但后面的剧情，说实话，我有点难以接受。<br>且这部算是唯一一部Key社的TV动画中以悲剧结尾的动画，其他几部虽然也很感动，但都是喜剧结尾。<br>当然这部也值得一看，比大部分动画还是好看的。</p><h3 id="神様になった日">神様になった日</h3><p>与P.A. Works合作的第三部原创TV动画。<br>这部前期很正常，可以当作普通的日常动画，后期直接崩掉了，建议直接忽略后面几集，没有看的必要。<br>前面几集可以看，后面几集不推荐看。</p><h3 id="かぎなど">かぎなど</h3><p>Key社自己的泡面番。<br>主讲各种地狱笑话，声优梗，剧情梗什么的，相当推荐看，前提是是把Key自己作品的TV动画全部看完加上Angel Beats。</p><h2 id="P-A-Works">P.A. Works</h2><p>P.A. Works的几乎所有原创动画都很推荐：</p><ul><li>true tears</li><li>花咲くいろは</li><li>TARI TARI</li><li>グラスリップ</li><li>色づく世界の明日から</li><li>サクラクエスト</li><li>白い砂のアクアトープ</li><li>凪のあすから</li></ul><h3 id="true-tears">true tears</h3><p>true tears是PA的第一部原创动画，也是我目前看过的所有的PA的作品中最喜欢的一部。<br>剧情大概就是三女主都喜欢男主，最后某个人的胜利，而且结局对我来说是非常正常的一个走向，整个动画的制作都很精致，包括人物的动作细节，配音等我都很喜欢。<br>非常推荐的一部作品。</p><h3 id="花咲くいろは">花咲くいろは</h3><p>PA打工系列的第一部，主讲仲居这个职业，除了前面几集，后面是真的体现这个职业的魅力之处，也有youtube的评论说自己看完这部TV动画后决定成为仲居、并且最后真的实现了。<br>其中有几集关于女主的爱情比较硬，算是这部的硬伤，不过整部看起来是真的好看，我用了一整天就看完了，完全停不下来。<br>非常推荐。</p><h3 id="TARI-TARI">TARI TARI</h3><p>主讲友情，讲了主角一行人，面对自己未来何去何从的纠结，有人比较顺利，有人困难重重最后也没有放弃，但是比较短，只有13集，剧情无硬伤。</p><h3 id="グラスリップ">グラスリップ</h3><p>这部比较意识流，主讲爱情，比较看人，我是比较喜欢的。</p><h3 id="色づく世界の明日から">色づく世界の明日から</h3><p>这部有友情，有爱情，讲了女主被奶奶传送回奶奶高中时代之后，经历种种之后有所收获，且被男主拯救，虽然最后不得不回到自己所处的时代。<br>女主的人设也很可爱，这部我也非常喜欢。</p><h3 id="白い砂のアクアトープ">白い砂のアクアトープ</h3><p>打工系列的其中一部，是近几年的作品，也是那时一集一集追着看的。<br>主角一行人面对不得不作出的决定，最后走上自己道路，相信大家在人生中会遇到很多这种时候，尤其是工作后，相信不少人感受更深。<br>也是一部很有意义的TV动画，推荐看。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目前我只会记录最近看了个，有些看的比较早的就不记录了，记忆也比较模糊。&lt;/p&gt;
&lt;h2 id=&quot;自定义神剧（个人主观决定）&quot;&gt;自定义神剧（个人主观决定）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CLANNAD&lt;/li&gt;
&lt;li&gt;Kanon&lt;/li&gt;
&lt;li&gt;リトルバスターズ!&lt;/li&gt;
&lt;li&gt;Air&lt;/li&gt;
&lt;li&gt;Angel Beats! -1st beat-&lt;/li&gt;
&lt;li&gt;かぎなど&lt;/li&gt;
&lt;li&gt;true tears&lt;/li&gt;
&lt;li&gt;花咲くいろは&lt;/li&gt;
&lt;li&gt;TARI TARI&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="影评" scheme="https://asutorufa.github.io/categories/%E5%BD%B1%E8%AF%84/"/>
    
    
    <category term="アニメ" scheme="https://asutorufa.github.io/tags/%E3%82%A2%E3%83%8B%E3%83%A1/"/>
    
    <category term="动漫" scheme="https://asutorufa.github.io/tags/%E5%8A%A8%E6%BC%AB/"/>
    
    <category term="影评" scheme="https://asutorufa.github.io/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>CRI 容器运行时接口</title>
    <link href="https://asutorufa.github.io/posts/8144a111/"/>
    <id>https://asutorufa.github.io/posts/8144a111/</id>
    <published>2023-03-01T14:55:45.000Z</published>
    <updated>2023-03-01T14:55:45.000Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+----------------+       +-----------------+|  kubelet       |       |   CRI shim      || +-----------+  |       |  +-----------+  |      +-----------+| |grpc client|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>-|-------|-</span><span class="token punctuation">></span></span>|grpc server|  |<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>----</span><span class="token punctuation">></span></span>| container || +-----------+  |       |  +-----------+  |      |  runtime  |+----------------+       +-----------------+      +-----------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CRI-shim">CRI shim</h2><ul><li>cri-o</li><li>cri-containerd</li><li>rkt</li><li>frakti</li><li>docker (cri-dockerd)</li></ul><h2 id="container-runtime">container runtime</h2><ul><li>gvisor</li><li>kata containers</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;+----------------+      </summary>
        
      
    
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://asutorufa.github.io/tags/Kubernetes/"/>
    
    <category term="CRI" scheme="https://asutorufa.github.io/tags/CRI/"/>
    
    <category term="container" scheme="https://asutorufa.github.io/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>NAT类型</title>
    <link href="https://asutorufa.github.io/posts/14e0ef9e/"/>
    <id>https://asutorufa.github.io/posts/14e0ef9e/</id>
    <published>2023-02-14T10:48:24.000Z</published>
    <updated>2023-02-14T10:48:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NAT-Mapping">NAT Mapping</h2><p>描述NAT在映射网络内主机地址的行为</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">computer(192.168.100.2:30086) -> NAT -> 1.1.1.1:2345</code></pre><p>Endpoint-Independent Mapping</p><p>网络内主机在通过同一监听udp地址向不同地址和不同端口发包时, NAT使用同一映射地址向外发包</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">如 网络内一主机监听了一udp地址 192.168.100.2:30086此时主机向 1.0.0.1:53 发送udp包,             NAT使用 1.1.1.1:2345 向 1.0.0.1:53 发包主机又向   1.0.0.1:63 发送udp包,             NAT也使用 1.1.1.1:2345 向 1.0.0.1:63 发包主机又向   8.8.8.8:53 发送udp包,             NAT也使用 1.1.1.1:2345 向 8.8.8.8:53 发包这种无论目标地址和端口是什么都使用同一地址进行发包的NAT行为就是 Endpoint-Independent Mapping,跟没有NAT一样<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Address-Dependent Mapping</p><p>网络内主机在通过同一监听udp地址向同一地址和不同端口发包时, NAT使用同一映射地址向外发包</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">如 网络内一主机监听了一udp地址 192.168.100.2:30086此时主机向 1.0.0.1:53 发送udp包,             NAT使用 1.1.1.1:2345 向 1.0.0.1:53 发包主机又向   1.0.0.1:63 发送udp包,             NAT也将使用 1.1.1.1:2345 向 1.0.0.1:63 发包主机又向   8.8.8.8:53 发送udp包,             此时NAT将使用一新映射地址 1.1.1.1:5678 向 8.8.8.8:53 发包这种依赖目标地址但不依赖端口的NAT映射行为就是 Address-Dependent Mapping<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><p>Address and Port-Dependent Mapping</p><p>网络内主机在通过同一监听udp地址向同一地址和同一端口发包时, NAT使用同一映射地址向外发包</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">如 网络内一主机监听了一udp地址 192.168.100.2:30086此时主机向 1.0.0.1:53 发送udp包,             NAT使用 1.1.1.1:2345 向 1.0.0.1:53 发包主机又向   1.0.0.1:63 发送udp包,            NAT将使用一新映射地址 1.1.1.1:3789 向 1.0.0.1:63 发包主机又向   8.8.8.8:53 发送udp包,           此时NAT将使用一新映射地址 1.1.1.1:5678 向 8.8.8.8:53 发包主机又向 1.0.0.1:53 发送udp包,            NAT使用相同地址 1.1.1.1:2345 向 1.0.0.1:53 发包这种同时依赖目标地址和端口的NAT映射行为就是 Address and Port-Dependent Mapping,这种NAT类型是没有办法进行NAT穿透的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="NAT-Filtering">NAT Filtering</h2><p>描述当NAT为网络内主机映射一地址后，互联网内主机向映射地址发送数据时，将允许哪些地址通过的行为</p><p>Endpoint-Independent Filtering</p><p>A NAT device employing the combination of “Endpoint-Independent<br>Mapping” and “Endpoint-Independent Filtering” will accept incoming<br>traffic to a mapped public port from ANY external endpoint on the<br>public network.</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">如 网络内一主机监听了一udp地址 192.168.100.2:30086, NAT将其映射到 1.1.1.1:2345无论外部任何地址和端口的主机向1.1.1.1:2345发包, NAT都将会将其转发到 192.168.100.2:30086<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Address-Dependent Filtering<br>for receiving packets from a specific external endpoint, it is necessary for the internal endpoint to<br>send packets first to that specific external endpoint’s IP address.</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">如 网络内一主机监听了一udp地址 192.168.100.2:30086, NAT将其映射到 1.1.1.1:2345如果需要NAT将外部数据包转发到主机上,必须先由主机向某一地址发包, NAT都会将收到的同一地址(所有端口)的数据包转发到主机上<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Address and Port-Dependent Filtering</p><p>for receiving  packets from a specific external endpoint, it is necessary for<br>the internal endpoint to send packets first to that external endpoint’s IP address and port.</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">如 网络内一主机监听了一udp地址 192.168.100.2:30086, NAT将其映射到 1.1.1.1:2345如果需要NAT将外部数据包转发到主机上必须先由主机向某一地址和某一端口发包NAT都会将收到的同一地址和同一端口的数据包转发到主机上这种NAT类型是没发进行NAT穿透的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="NAT穿透">NAT穿透</h2><p>是否可以进行NAT穿透, 同时依赖NAT Mapping和NAT Filtering</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Mapping和Filtering都为Endpoint-Independent Mapping,         这种是百分之百可以进行穿透Mapping为Endpoint-Independent Mapping, Filtering为Address and Port-Dependent Filtering,         这种也是可以进行穿透的但如果Mapping和Filtering都为Address and Port-Dependent Filtering,         这种是必不可能穿透<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;NAT-Mapping&quot;&gt;NAT Mapping&lt;/h2&gt;
&lt;p&gt;描述NAT在映射网络内主机地址的行为&lt;/p&gt;
&lt;pre class=&quot;language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;computer(192.168.100.2:30086) -&gt; NAT -&gt; 1.1.1.1:2345&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Endpoint-Independent Mapping&lt;/p&gt;
&lt;p&gt;网络内主机在通过同一监听udp地址向不同地址和不同端口发包时, NAT使用同一映射地址向外发包&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;如 网络内一主机监听了一udp地址 192.168.100.2:30086

此时主机向 1.0.0.1:53 发送udp包,
             NAT使用 1.1.1.1:2345 向 1.0.0.1:53 发包
主机又向   1.0.0.1:63 发送udp包,
             NAT也使用 1.1.1.1:2345 向 1.0.0.1:63 发包
主机又向   8.8.8.8:53 发送udp包,
             NAT也使用 1.1.1.1:2345 向 8.8.8.8:53 发包

这种无论目标地址和端口是什么都使用同一地址进行发包的NAT行为就是 Endpoint-Independent Mapping,
跟没有NAT一样&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Address-Dependent Mapping&lt;/p&gt;
&lt;p&gt;网络内主机在通过同一监听udp地址向同一地址和不同端口发包时, NAT使用同一映射地址向外发包&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;如 网络内一主机监听了一udp地址 192.168.100.2:30086

此时主机向 1.0.0.1:53 发送udp包,
             NAT使用 1.1.1.1:2345 向 1.0.0.1:53 发包
主机又向   1.0.0.1:63 发送udp包,
             NAT也将使用 1.1.1.1:2345 向 1.0.0.1:63 发包
主机又向   8.8.8.8:53 发送udp包,
             此时NAT将使用一新映射地址 1.1.1.1:5678 向 8.8.8.8:53 发包

这种依赖目标地址但不依赖端口的NAT映射行为就是 Address-Dependent Mapping&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="UDP" scheme="https://asutorufa.github.io/tags/UDP/"/>
    
    <category term="NAT" scheme="https://asutorufa.github.io/tags/NAT/"/>
    
  </entry>
  
  <entry>
    <title>TUF GAMING B550M-PLUS WIFI II lm_sensors</title>
    <link href="https://asutorufa.github.io/posts/fe953398/"/>
    <id>https://asutorufa.github.io/posts/fe953398/</id>
    <published>2022-11-11T10:17:44.000Z</published>
    <updated>2022-11-11T10:17:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>the sensors not show fan and voltage<br>it’s a kernel bug now <a href="https://bugzilla.kernel.org/show_bug.cgi?id=204807">Hardware monitoring sensor nct6798d doesn’t work unless acpi_enforce_resources=lax is enabled</a><br>need wait add the motherboard name to linux kernel code list <a href="https://github.com/torvalds/linux/blob/4bbf3422df78029f03161640dcb1e9d1ed64d1ea/drivers/hwmon/nct6775-platform.c#L1044">linux/drivers/hwmon/nct6775-platform.c</a></p><h2 id="temporary-measure">temporary measure</h2><p>add</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">acpi_enforce_resources=lax</code></pre><p>to linux boot parameter</p><p>load nct6775 kernel module</p><pre class="language-bash" data-language="bash"><code class="language-bash">modprobe <span class="token parameter variable">-v</span> nct6775</code></pre><p>run <code>sensors-detect --auto</code>.</p><p>finally, you will see nct6798-isa-* in sensors.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;the sensors not show fan and voltage&lt;br&gt;
it’s a kernel bug now &lt;a href=&quot;https://bugzilla.kernel.org/show_bug.cgi?id=204807&quot;&gt;Hardware</summary>
        
      
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>秘密共享</title>
    <link href="https://asutorufa.github.io/posts/ce6c7d90/"/>
    <id>https://asutorufa.github.io/posts/ce6c7d90/</id>
    <published>2022-10-10T11:05:22.000Z</published>
    <updated>2022-10-10T11:05:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="拉格朗日插值法">拉格朗日插值法</h2><p>对某个多项式函数，已知有给定的k + 1个取值点：<code>(x0,y0)...(xk,yk)</code><br>假设任意两个不同的xj都互不相同，那么应用拉格朗日插值公式所得到的拉格朗日插值多项式为：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">l0 = (((x-x1)(x-x2)...(x-xk))/((x0-x1)(x0-x2)...(x0-xk)))*y0    ...lk = ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>f(x) = l0+l1...+lk</code>即可求出多项式</p><h3 id="example">example</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">已知3个点(4,10)(5,5.25)(6,1)l0 = (((x-5)(x-6))/((4-5)(4-6))) <span class="token italic"><span class="token punctuation">*</span><span class="token content"> 10l1 = (((x-4)(x-6))/((5-4)(5-6))) </span><span class="token punctuation">*</span></span> 5.25l2 = (((x-4)(x-5))/((6-4)(6-5))) * 1f(x) = l0+l1+l2 = 1/4(x^2-28x+136)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Shamir-秘密共享">Shamir 秘密共享</h2><p>生成</p><span id="more"></span><ul><li>设需要生成w个密钥，至少需要t个密钥才能算出真实密钥</li><li>选择一个数P，之后所有数都需要进行模运算</li><li>设置真实密钥K</li><li>随机选择t-1个不大于P的数 <code>a0,a1...at-1</code></li><li>得到多项式 <code>f(x)=K+a0x+a1x^2...+at-1x^t</code></li><li>将<code>x=1.x=2...x=w</code>带入多项式即可获得多个密钥<code>(1,k1)(2,k2)...(w,kw)</code></li></ul><p>解密</p><ul><li>利用拉格朗日插值法即可算出多项式</li><li>需要带上模计算多项式，如果计算多项式时有除法需要进行计算模乘逆元</li><li>因为只需要K所以计算的时候可以直接x=0</li></ul><h3 id="eg1">eg1</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">w=4,t=3,K=2,p=23，选择随机数 a0=3, a1=2加密得到多项式 f(x) = (2 + 3x + 2x^2) mod 23f(1) = 2, f(2) = 16, f(3) = 6, f(4) = 0获得4个密钥(1,2)(2,16)(3,6)(4,0)解密选择其中三个进行解密，(1,7)(3,6)(4,0)l0 = (((x-3)(x-4))/((1-3)(1-4)))*7l1 = (((x-1)(x-4))/((3-1)(3-4)))*6l2 = (((x-1)(x-3))/((4-1)(4-3)))*0将x=0带入可得l0 = 14l1 = -12l2 = 0可得k = (l0+l1+l2) mod 23     = 2 mod 23     = 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="eg2">eg2</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">w=5,t=3,k=13,p=17,选择随机数a0=10,a1=2加密得到多项式 f(x) = (13 + 10x + 2x^2) mod 17f(1) = 8, f(2) = 7, f(3) = 10, f(4) = 0, f(5) = 11获得5个密钥(1,8)(2,7)(3,10)(4,0)(5,11)解密选择其中三个进行解密，(1,8)(2,7)(5,11)l0 = 11 * ( ((x-1)(x-2)) / ((5-1)(5-2)) )l1 = 7  * ( ((x-1)(x-5)) / ((2-1)(2-5)) )l2 = 8  * ( ((x-2)(x-5)) / ((1-2)(1-5)) )将 x=0 带入l0 = 22/12l1 = -140/12l2 = 240/12K = (l0+l1+l2) mod 17  = (61/6) mod 17  = (61 * 6^-1) mod 17 // 6^-1为6关于17的模乘逆元为3  = (61 * 3) mod 17   = 13<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中国剩余定理">中国剩余定理</h2><p>example</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">w=5,t=3,K=117选择w个d,要求单调递增并两两互素,t个最小的d相乘大于K,K大于t-1个最大d相乘d1=4,d2=5,d3=7,d4=9,d5=11计算 ki=Key mod di // = -> \equalk1 = 117 mod 4 = 1k2 = 117 mod 5 = 2k3 = 117 mod 7 = 5k4 = 117 mod 9 = 0k5 = 117 mod 11 = 7即五个密钥(1,4),(2,5),(3,7),(0,9),(7,11)解密选其中三个密钥(1,4)(2,5)(3,7)可得k mod 4 = 1k mod 5 = 2k mod 11 = 7分解为k1 mod 4 = 1, k1 mod 5 = 0, k1 mod 11 = 0  -> 5 * 11 * x1 mod 4 = 1  -> x1 = 3  -> k1 = 55 * 3 = 165k2 mod 4 = 0, k2 mod 5 = 2, k2 mod 11 = 0  -> 4 * 11 * x2 mod 5 = 2  -> 44 * x2 * 2^-1 mod 5 = 1 // 2^-1 为2关于5的模乘逆元  -> 44 * x2 * 3 mod 5 = 1  -> 132 * x2 mod 5 = 1 // 相当于算132关于5的模乘逆元  -> x2 = 3  -> k2 = 44 * 3 = 132k3 mod 4 = 0, k3 mod 5 = 0, k3 mod 11 = 7  -> 4 * 5 * x3 mod 11 = 7  -> 20 * x3 * 7^-1 mod 11 = 1 // 7^-1 为7关于11的模乘逆元  -> 20 * x3 * 8 mod 11 = 1  -> 160 * x3 mod 11 = 1 // 相当于算160关于11的模乘逆元  -> x3 = 2  -> k3 = 40K = (k1 + k2 + k3) mod 4*5*11  = (165+132+40) mod 220  = 337 mod 220  = 117另一种：k1 mod 4 = 1, k1 mod 5 = 0, k1 mod 11 = 0  -> 1 * (k1 mod 4 = 1, k1 mod 5 = 0, k1 mod 11 = 0)   -> 5 * 11 * x1 mod 4 = 1  -> x1 = 3  -> k1 = 1 * 55 * 3 = 165k2 mod 4 = 0, k2 mod 5 = 2, k2 mod 11 = 0  -> 2 * (k2 mod 4 = 0, k2 mod 5 = 1, k2 mod 11 = 0)  -> 4 * 11 * x2 mod 5 = 1  -> x2 = 4  -> k2 2 * 44 * 4 = 352k3 mod 4 = 0, k3 mod 5 = 0, k3 mod 11 = 7  -> 7 * (k3 mod 4 = 0, k3 mod 5 = 0, k3 mod 11 = 1)  -> 4 * 5 * x3 mod 11 = 1  -> x3 = 5  -> k3 = 7 * 20 * 5 = 700K = (k1 + k2 + k3) mod (4*5*11)  = (165 + 352 + 700) mod 220  = 1217 mod 220  = 117<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><a href="https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing">Shamir’s Secret Sharing - Wikipedia</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC%E6%B3%95">拉格朗日插值法 - Wikipedia</a></li><li><a href="https://zhuanlan.zhihu.com/p/95362628">趣说密码学（五）秘密共享方案——shamir,中国剩余定理,Brickell和Blakley</a></li><li><a href="https://www.cnblogs.com/pyrie/p/sss_py.html">Shamir秘密共享方案 (Python)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;拉格朗日插值法&quot;&gt;拉格朗日插值法&lt;/h2&gt;
&lt;p&gt;对某个多项式函数，已知有给定的k + 1个取值点：&lt;code&gt;(x0,y0)...(xk,yk)&lt;/code&gt;&lt;br&gt;
假设任意两个不同的xj都互不相同，那么应用拉格朗日插值公式所得到的拉格朗日插值多项式为：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;l0 = (((x-x1)(x-x2)...(x-xk))/((x0-x1)(x0-x2)...(x0-xk)))*y0
    ...
lk = ...&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;f(x) = l0+l1...+lk&lt;/code&gt;即可求出多项式&lt;/p&gt;
&lt;h3 id=&quot;example&quot;&gt;example&lt;/h3&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;已知3个点(4,10)(5,5.25)(6,1)

l0 = (((x-5)(x-6))/((4-5)(4-6))) &lt;span class=&quot;token italic&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt; 10
l1 = (((x-4)(x-6))/((5-4)(5-6))) &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;*&lt;/span&gt;&lt;/span&gt; 5.25
l2 = (((x-4)(x-5))/((6-4)(6-5))) * 1

f(x) = l0+l1+l2 = 1/4(x^2-28x+136)&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;Shamir-秘密共享&quot;&gt;Shamir 秘密共享&lt;/h2&gt;
&lt;p&gt;生成&lt;/p&gt;</summary>
    
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/categories/Crypto/"/>
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/tags/Crypto/"/>
    
    <category term="Shamir" scheme="https://asutorufa.github.io/tags/Shamir/"/>
    
  </entry>
  
  <entry>
    <title>离散对数问题</title>
    <link href="https://asutorufa.github.io/posts/1f299eb2/"/>
    <id>https://asutorufa.github.io/posts/1f299eb2/</id>
    <published>2022-08-15T10:03:28.000Z</published>
    <updated>2022-08-15T10:03:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>前置知识 欧拉, 欧拉定理, 模反元素(模逆元) 可参见: <a href="/posts/f1a158c9/">RSA加密</a></p><h2 id="阶">阶</h2><p>由欧拉定理可知，若n,a为正整数，且n,a互素（即gcd(a,n)=1），则 a^phi(n) = 1 (mod n)。<br>因此满足同余式 a^m = 1 (mod n)的<strong>最小正整数m</strong>存在，这个m称作a模n的阶，记作delta(n,a)。</p><h2 id="原根">原根</h2><p>若n,a为正整数，且n,a互质，如果 gcd(a,n)=1 且 delta(n,a) = phi(n), 则称a为模n的原根.<br>简单来说，使该式成立的d可能有很多个值，又由欧拉定理可知delta(n,a) = phi(n)一定是满足的，如果此时所有delta(n,a)的可能取值中phi(n)是最小的，那么就称a为模n的原根。</p><p>eg:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">a=3, n=7可知 3,7互质, 所以phi(n) = 7 - 1 = 6可得 3^6 = 1 (mod 7)计算3^1, 3^2, 3^3, 3^4, 3^5 (mod 7) 都不等于1, 所以 6为满足 a^x = 1 (mod n)的最小正整数delta(7,3) = 6 = phi(7), 可得 3为模7的原根<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="性质">性质</h3><span id="more"></span><ul><li>delta(n,a)一定能整除phi(n)</li><li>若一个数m有原根, 则它的原根个数为phi(phi(m))</li></ul><h2 id="离散对数">离散对数</h2><p>如果对于一个整数b和质数p的一个原根a，可以找到一个唯一的指数i，使得：<br><strong>b= a^i (mod p), 其中 0 &lt;= i &lt;= p-1</strong><br>成立，那么指数i称为b的以a为基数的模p的离散对数。</p><p>离散对数难题是指：<br>当已知一个大质数p和它的一个原根a，如果给定一个b，要计算i的值是相当困难的。<br>常将i作为私钥, b作为公钥，即使知道b和a也无法求出i。</p><h2 id="应用">应用</h2><ul><li>DH密钥交换</li></ul><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">取一质数 7, 计算出其原根 3, 同时质数7和其原根3是公开的Alice:  <span class="token list punctuation">-</span> 取一个随机数 3 作为自己的私钥  <span class="token list punctuation">-</span> 计算 3^3 (mod 7) = 6  <span class="token list punctuation">-</span> 将6作为公钥发送给BobBob:    <span class="token list punctuation">-</span> 取一个随机数 1 作为自己的私钥    <span class="token list punctuation">-</span> 计算 3^1 (mod 7) = 3    <span class="token list punctuation">-</span> 将3作为公钥发送给AliceAlice 使用 3 计算出共享密钥 3^3 (mod 7) = 6Bob 使用 6 计算出共享密钥 6^1 (mod 7) = 6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Elgamal加密</li></ul><p>接上面DH密钥交换</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">获取到公共密钥6之后，Alice和Bob都可以使用公共密钥6来加密信息palintext: 6加密: 6<span class="token italic"><span class="token punctuation">*</span><span class="token content">6 (mod 7) = 1, 密文为 1解密: 1</span><span class="token punctuation">*</span></span>6^-1 (mod 7) = 6 &lt;- 6^-1 是指6关于模7的逆元<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的写的感觉不太对,完整过程</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Alice 取一质数 7, 计算出其原根 3, 选一数 3 作为自己的私钥, 3^3 (mod 7) = 6将 &#123;7,3,6&#125; 作为公钥公开Bob想传递信息 6 给 AliceBob选一数 5 作为自己的私钥 <span class="token list punctuation">-</span> 加密密钥: 3^5 (mod 7) = 5 <span class="token list punctuation">-</span> 公钥: 3^5 (mod 7) = 5 <span class="token list punctuation">-</span> 密文: 6*(6^5) (mod 7) = 1 <span class="token list punctuation">-</span> 将 (5,1) 作为密文发送给AliceAlice解密 <span class="token list punctuation">-</span> 计算解密密钥: 5^3 (mod 7) = 6 <span class="token list punctuation">-</span> 解密: 1 * 6^-1 (mod 7) = 6 &lt;- 此处6^-1是指6关于模7的逆元(模反元素) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;前置知识 欧拉, 欧拉定理, 模反元素(模逆元) 可参见: &lt;a href=&quot;/posts/f1a158c9/&quot;&gt;RSA加密&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;阶&quot;&gt;阶&lt;/h2&gt;
&lt;p&gt;由欧拉定理可知，若n,a为正整数，且n,a互素（即gcd(a,n)=1），则 a^phi(n) = 1 (mod n)。&lt;br&gt;
因此满足同余式 a^m = 1 (mod n)的&lt;strong&gt;最小正整数m&lt;/strong&gt;存在，这个m称作a模n的阶，记作delta(n,a)。&lt;/p&gt;
&lt;h2 id=&quot;原根&quot;&gt;原根&lt;/h2&gt;
&lt;p&gt;若n,a为正整数，且n,a互质，如果 gcd(a,n)=1 且 delta(n,a) = phi(n), 则称a为模n的原根.&lt;br&gt;
简单来说，使该式成立的d可能有很多个值，又由欧拉定理可知delta(n,a) = phi(n)一定是满足的，如果此时所有delta(n,a)的可能取值中phi(n)是最小的，那么就称a为模n的原根。&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;a=3, n=7
可知 3,7互质, 所以phi(n) = 7 - 1 = 6
可得 3^6 = 1 (mod 7)

计算3^1, 3^2, 3^3, 3^4, 3^5 (mod 7) 都不等于1, 所以 6为满足 a^x = 1 (mod n)的最小正整数

delta(7,3) = 6 = phi(7), 可得 3为模7的原根&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;性质&quot;&gt;性质&lt;/h3&gt;</summary>
    
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/categories/Crypto/"/>
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/tags/Crypto/"/>
    
    <category term="离散对数" scheme="https://asutorufa.github.io/tags/%E7%A6%BB%E6%95%A3%E5%AF%B9%E6%95%B0/"/>
    
    <category term="DH密钥交换" scheme="https://asutorufa.github.io/tags/DH%E5%AF%86%E9%92%A5%E4%BA%A4%E6%8D%A2/"/>
    
    <category term="Elgamal" scheme="https://asutorufa.github.io/tags/Elgamal/"/>
    
  </entry>
  
  <entry>
    <title>加密模式</title>
    <link href="https://asutorufa.github.io/posts/903c04f7/"/>
    <id>https://asutorufa.github.io/posts/903c04f7/</id>
    <published>2022-08-14T22:09:15.000Z</published>
    <updated>2022-08-14T22:09:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="流密码">流密码</h2><p>密码学中，流密码（英語：Stream cipher），又譯為串流加密、資料流加密，是一种对称加密算法，加密和解密双方使用相同伪随机加密数据流（pseudo-random stream）作为密钥，明文数据每次与密钥数据流顺次对应加密，得到密文数据流。实践中数据通常是一个位（bit）并用异或（xor）操作加密。</p><p><a href="https://zh.wikipedia.org/wiki/%E6%B5%81%E5%AF%86%E7%A0%81">https://zh.wikipedia.org/wiki/流密码</a></p><ul><li>chacha20/salsa20</li><li>rc4</li></ul><h2 id="块密码-分组密码">块密码/分组密码</h2><p>块密码只能对确定长度的数据块进行处理, 如aes每个块的大小必须为16, 如果不满16就需要进行padding</p><h3 id="加密模式">加密模式</h3><h4 id="ECB">ECB</h4><p>最简单的加密模式即为电子密码本（Electronic codebook，ECB）模式。需要加密的消息按照块密码的块大小被分为数个块，并对每个块进行独立加密。</p><h4 id="CBC">CBC</h4><p>在CBC模式中，每个明文块先与前一个密文块进行异或后，再进行加密。在这种方法中，每个密文块都依赖于它前面的所有明文块。同时，为了保证每条消息的唯一性，在第一个块中需要使用初始化向量。</p><h4 id="PCBC">PCBC</h4><p>填充密码块链接（PCBC，Propagating cipher-block chaining）或称为明文密码块链接（Plaintext cipher-block chaining），是一种可以使密文中的微小更改在解密时导致明文大部分错误的模式，并在加密的时候也具有同样的特性。</p><span id="more"></span><h4 id="块密码-流密码">块密码 -&gt; 流密码</h4><ul><li>CFB<br>密文反馈（CFB，Cipher feedback）模式类似于CBC，可以将块密码变为自同步的流密码；工作过程亦非常相似，CFB的解密过程几乎就是颠倒的CBC的加密过程.<br>由于CFB加密没有使用异或, 所以即使CFB是流密码, 但加密解密操作不同.</li><li>OFB<br>输出反馈模式（Output feedback, OFB）可以将块密码变成同步的流密码。它产生密钥流的块，然后将其与明文块进行异或，得到密文。与其它流密码一样，密文中一个位的翻转会使明文中同样位置的位也产生翻转。这种特性使得许多错误校正码，例如奇偶校验位，即使在加密前计算，而在加密后进行校验也可以得出正确结果。</li><li>CTR<br>与OFB相似，CTR将块密码变为流密码。它通过递增一个加密计数器以产生连续的密钥流，其中，计数器可以是任意保证长时间不产生重复输出的函数，但使用一个普通的计数器是最简单和最常见的做法。使用简单的、定义好的输入函数是有争议的：批评者认为它“有意的将密码系统暴露在已知的、系统的输入会造成不必要的风险”。目前，CTR已经被广泛的使用了，由输入函数造成的问题被认为是使用的块密码的缺陷，而非CTR模式本身的弱点。无论如何，有一些特别的攻击方法，例如基于使用简单计数器作为输入的硬件差错攻击。</li></ul><h2 id="认证加密-AE">认证加密(AE)</h2><p>A typical programming interface for an AE implementation provides the following functions:</p><ul><li>Encryption<br>Input: plaintext, key, and optionally a header in plaintext that will not be encrypted, but will be covered by authenticity protection.<br>Output: ciphertext and authentication tag (message authentication code or MAC).</li><li>Decryption<br>Input: ciphertext, key, authentication tag, and optionally a header (if used during the encryption).<br>Output: plaintext, or an error if the authentication tag does not match the supplied ciphertext or header.</li></ul><p>The header part is intended to provide authenticity and integrity protection for networking or storage metadata for which confidentiality is unnecessary, but authenticity is desired.</p><p><a href="https://en.wikipedia.org/wiki/Authenticated_encryption#Authenticated_encryption_with_associated_data_(AEAD)">https://en.wikipedia.org/wiki/Authenticated_encryption#Authenticated_encryption_with_associated_data_(AEAD)</a></p><h3 id="传统认证加密">传统认证加密</h3><ul><li><p>Encrypt-then-MAC (EtM)<br>首先对明文进行加密，然后根据得到的密文生成訊息鑑別碼（MAC）。密文和它的MAC一起发送。</p>  <pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+---------+|plaintext|+---------+    |    v+----------+|Encryption|&lt;------key1+----------+     |     |--------------+     |              |     |              v     |        +-------------+     |        |hash function|&lt;-------key2     |        +-------------+     |              |     v              v+----------------+------+|    Ciphertext  | MAC  |+----------------+------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Encrypt-and-MAC (E&amp;M)<br>基于明文生成MAC，并且明文在没有MAC的情况下被加密。明文的MAC和密文一起发送。</p>  <pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+---------+|plaintext|+---------+    |    |--------------------------------+    |                                |    v                                v+----------+                 +-------------+|Encryption|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>------key1----</span><span class="token punctuation">></span></span> |hash function|+----------+                 +-------------+     |                               |     v                               v+------------------------------+--------+|        Ciphertext            |   MAC  |+------------------------------+--------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>MAC-then-Encrypt (MtE)<br>基于明文生成MAC，然后将明文和MAC一起加密以基于两者生成密文。密文（包含加密的MAC）被发送。MtE方法本身并未被证明是“强不可伪造”的。</p>  <pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+---------+|plaintext|                           key+---------+                            |    |                                  |    |------------------+               |    |                  |               |    |                  v               |    |           +-------------+        |    |           |hash function|&lt;-------|    |           +-------------+        |    |                  |               |    v                  v               |+------------------+------+            ||     plaintext    | MAC  |            |+------------------+------+            |             |                         |             v                         |      +----------------+               |      | Encryption     |&lt;--------------+      +----------------+             |             v       +-------------+       | Ciphertext  |       +-------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="AEAD-带有关联数据的认证加密">AEAD(带有关联数据的认证加密)</h3><h4 id="chacha20-poly1305">chacha20-poly1305</h4><p>chacha20-poly1305是将流密码chahca20和消息验证码(MAC)poly1305组合而成的AEAD.</p><p>chacha20-poly1305加密过程<br><img src="/images/903c04f7/chacha20poly1305-enc.png" alt="chacha20-enc" loading="lazy"></p><p>chacha20-poly1305解密<br><img src="/images/903c04f7/chacha20poly1305-dec.png" alt="chacha20-dec" loading="lazy"></p><hr><ul><li><a href="https://tex2e.github.io/blog/crypto/chacha20poly1305">ChaCha20-Poly1305の解説と実装</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;流密码&quot;&gt;流密码&lt;/h2&gt;
&lt;p&gt;密码学中，流密码（英語：Stream cipher），又譯為串流加密、資料流加密，是一种对称加密算法，加密和解密双方使用相同伪随机加密数据流（pseudo-random stream）作为密钥，明文数据每次与密钥数据流顺次对应加密，得到密文数据流。实践中数据通常是一个位（bit）并用异或（xor）操作加密。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%B5%81%E5%AF%86%E7%A0%81&quot;&gt;https://zh.wikipedia.org/wiki/流密码&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chacha20/salsa20&lt;/li&gt;
&lt;li&gt;rc4&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;块密码-分组密码&quot;&gt;块密码/分组密码&lt;/h2&gt;
&lt;p&gt;块密码只能对确定长度的数据块进行处理, 如aes每个块的大小必须为16, 如果不满16就需要进行padding&lt;/p&gt;
&lt;h3 id=&quot;加密模式&quot;&gt;加密模式&lt;/h3&gt;
&lt;h4 id=&quot;ECB&quot;&gt;ECB&lt;/h4&gt;
&lt;p&gt;最简单的加密模式即为电子密码本（Electronic codebook，ECB）模式。需要加密的消息按照块密码的块大小被分为数个块，并对每个块进行独立加密。&lt;/p&gt;
&lt;h4 id=&quot;CBC&quot;&gt;CBC&lt;/h4&gt;
&lt;p&gt;在CBC模式中，每个明文块先与前一个密文块进行异或后，再进行加密。在这种方法中，每个密文块都依赖于它前面的所有明文块。同时，为了保证每条消息的唯一性，在第一个块中需要使用初始化向量。&lt;/p&gt;
&lt;h4 id=&quot;PCBC&quot;&gt;PCBC&lt;/h4&gt;
&lt;p&gt;填充密码块链接（PCBC，Propagating cipher-block chaining）或称为明文密码块链接（Plaintext cipher-block chaining），是一种可以使密文中的微小更改在解密时导致明文大部分错误的模式，并在加密的时候也具有同样的特性。&lt;/p&gt;</summary>
    
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/categories/Crypto/"/>
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/tags/Crypto/"/>
    
    <category term="AEAD" scheme="https://asutorufa.github.io/tags/AEAD/"/>
    
    <category term="流密码" scheme="https://asutorufa.github.io/tags/%E6%B5%81%E5%AF%86%E7%A0%81/"/>
    
    <category term="块密码" scheme="https://asutorufa.github.io/tags/%E5%9D%97%E5%AF%86%E7%A0%81/"/>
    
    <category term="chacha20-poly1305" scheme="https://asutorufa.github.io/tags/chacha20-poly1305/"/>
    
  </entry>
  
  <entry>
    <title>TUN网卡</title>
    <link href="https://asutorufa.github.io/posts/a67af13f/"/>
    <id>https://asutorufa.github.io/posts/a67af13f/</id>
    <published>2022-08-14T21:46:33.000Z</published>
    <updated>2022-08-14T21:46:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Golang-Tun-gVisor">Golang Tun (gVisor)</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token string">"gvisor.dev/gvisor/pkg/tcpip/stack"</span> <span class="token comment">// gvisor</span>s <span class="token operator">:=</span> stack<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>Options<span class="token punctuation">&#123;</span>  NetworkProtocols<span class="token punctuation">:</span>   <span class="token punctuation">[</span><span class="token punctuation">]</span>stack<span class="token punctuation">.</span>NetworkProtocolFactory<span class="token punctuation">&#123;</span>ipv4<span class="token punctuation">.</span>NewProtocol<span class="token punctuation">,</span> ipv6<span class="token punctuation">.</span>NewProtocol<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  TransportProtocols<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>stack<span class="token punctuation">.</span>TransportProtocolFactory<span class="token punctuation">&#123;</span>tcp<span class="token punctuation">.</span>NewProtocol<span class="token punctuation">,</span> udp<span class="token punctuation">.</span>NewProtocol<span class="token punctuation">,</span> icmp<span class="token punctuation">.</span>NewProtocol4<span class="token punctuation">,</span> icmp<span class="token punctuation">.</span>NewProtocol6<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>ep <span class="token operator">:=</span> fdbased<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>fdbased<span class="token punctuation">.</span>Options<span class="token punctuation">&#123;</span>   FDs<span class="token punctuation">:</span>            <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span>fd<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// fd: linux文件标识符, 如android中最后会获取到一个文件标识符</span>   MTU<span class="token punctuation">:</span>            <span class="token function">uint32</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  nicID <span class="token operator">:=</span> tcpip<span class="token punctuation">.</span><span class="token function">NICID</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">UniqueID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> er <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">CreateNIC</span><span class="token punctuation">(</span>nicID<span class="token punctuation">,</span> ep<span class="token punctuation">)</span><span class="token punctuation">;</span> er <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  ep<span class="token punctuation">.</span><span class="token function">Attach</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">isdns</span><span class="token punctuation">(</span>opt <span class="token operator">*</span>TunOpt<span class="token punctuation">,</span> id stack<span class="token punctuation">.</span>TransportEndpointID<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span> <span class="token keyword">if</span> id<span class="token punctuation">.</span>LocalPort <span class="token operator">==</span> <span class="token number">53</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>opt<span class="token punctuation">.</span>DNSHijacking <span class="token operator">||</span> id<span class="token punctuation">.</span>LocalAddress<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> opt<span class="token punctuation">.</span>Gateway<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token comment">// TCP</span> s<span class="token punctuation">.</span><span class="token function">SetTransportProtocolHandler</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span>ProtocolNumber<span class="token punctuation">,</span> tcp<span class="token punctuation">.</span><span class="token function">NewForwarder</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> defaultWndSize<span class="token punctuation">,</span> maxConnAttempts<span class="token punctuation">,</span>  <span class="token keyword">func</span><span class="token punctuation">(</span>r <span class="token operator">*</span>tcp<span class="token punctuation">.</span>ForwarderRequest<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  wq <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>waiter<span class="token punctuation">.</span>Queue<span class="token punctuation">)</span>  id <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  ep<span class="token punctuation">,</span> err <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">CreateEndpoint</span><span class="token punctuation">(</span>wq<span class="token punctuation">)</span>  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>   r<span class="token punctuation">.</span><span class="token function">Complete</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>   <span class="token keyword">return</span>  <span class="token punctuation">&#125;</span>  r<span class="token punctuation">.</span><span class="token function">Complete</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>local net<span class="token punctuation">.</span>Conn<span class="token punctuation">,</span> id stack<span class="token punctuation">.</span>TransportEndpointID<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">defer</span> local<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">if</span> <span class="token function">isdns</span><span class="token punctuation">(</span>opt<span class="token punctuation">,</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 劫持一下dns</span>    <span class="token comment">/*    * Handle DNS    */</span>    <span class="token keyword">return</span>   <span class="token punctuation">&#125;</span>   target <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">JoinHostPort</span><span class="token punctuation">(</span>id<span class="token punctuation">.</span>LocalAddress<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span>LocalPort<span class="token punctuation">)</span> <span class="token comment">// 远程目标地址</span>   nconn<span class="token punctuation">,</span> er <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>   <span class="token keyword">if</span> er <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   utils<span class="token punctuation">.</span><span class="token function">Relay</span><span class="token punctuation">(</span>local<span class="token punctuation">,</span> conn<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">(</span>gonet<span class="token punctuation">.</span><span class="token function">NewTCPConn</span><span class="token punctuation">(</span>wq<span class="token punctuation">,</span> ep<span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>HandlePacket<span class="token punctuation">)</span><span class="token comment">// UDP</span> s<span class="token punctuation">.</span><span class="token function">SetTransportProtocolHandler</span><span class="token punctuation">(</span>udp<span class="token punctuation">.</span>ProtocolNumber<span class="token punctuation">,</span> udp<span class="token punctuation">.</span><span class="token function">NewForwarder</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fr <span class="token operator">*</span>udp<span class="token punctuation">.</span>ForwarderRequest<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// handle udp, 和tcp差不多</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>HandlePacket<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整代码: <a href="https://github.com/Asutorufa/yuhaiin/tree/main/pkg/net/proxy/tun">tun</a></p><h2 id="Android-VPN-Service">Android VPN Service</h2><p>Android 的VPN Service只能处理Tun接口</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">class</span> MyVpnService <span class="token operator">:</span> <span class="token function">VpnService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onStartCommand</span><span class="token punctuation">(</span>intent<span class="token operator">:</span> Intent<span class="token operator">?</span><span class="token punctuation">,</span> flags<span class="token operator">:</span> Int<span class="token punctuation">,</span> startId<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">&#123;</span>        <span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">&#123;</span>            <span class="token function">setMtu</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span>            <span class="token function">setSession</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"my vpn"</span></span><span class="token punctuation">)</span>            <span class="token function">addAddress</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"172.19.0.1"</span></span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"172.19.0.2"</span></span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span>            <span class="token function">addAddress</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"fdfe:dcba:9876::1"</span></span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"2000::"</span></span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// https://issuetracker.google.com/issues/149636790</span>                <span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"fdfe:dcba:9876::2"</span></span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>            <span class="token function">addDnsServer</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"172.19.0.2"</span></span><span class="token punctuation">)</span> <span class="token comment">// 记得在Tun中劫持172.19.0.2:53处理所有的DNS请求</span>            <span class="token function">addDisallowedApplication</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"com.example"</span></span><span class="token punctuation">)</span> <span class="token comment">// Disallowed和Allowed不能同时调用</span>            <span class="token comment">// addAllowedApplication("com.example")</span>            <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token function">establish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">/*    fd 为 linux文件标识符    如果是通过tun2socks这种命令行工具处理    需要使用Linux socket将fd发送给子进程               如果是调用so动态库则不需要        通过unix文件socket发送sd      private fun sendFd(path: String) &#123;            LocalSocket().use &#123; localSocket ->                localSocket.connect(                    LocalSocketAddress(                        path,                        LocalSocketAddress.Namespace.FILESYSTEM                    )                )                localSocket.setFileDescriptorsForSend(arrayOf(fd)) // &lt;------                localSocket.outputStream.write(42)            &#125;    &#125;*/</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> START_STICKY       <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整代码: <a href="https://github.com/Asutorufa/yuhaiin-android/tree/main/app/src/main/kotlin/io/github/asutorufa/yuhaiin/service">VpnService</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Golang-Tun-gVisor&quot;&gt;Golang Tun (gVisor)&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-go&quot; data-language=&quot;go&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="Golang" scheme="https://asutorufa.github.io/tags/Golang/"/>
    
    <category term="Tun" scheme="https://asutorufa.github.io/tags/Tun/"/>
    
    <category term="Kotlin" scheme="https://asutorufa.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>RSA加密</title>
    <link href="https://asutorufa.github.io/posts/f1a158c9/"/>
    <id>https://asutorufa.github.io/posts/f1a158c9/</id>
    <published>2022-08-14T21:46:24.000Z</published>
    <updated>2022-08-14T21:46:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="质数">质数</h2><p>质数（Prime number），又称素数，指在大于1的自然数中，除了1和该数自身外，无法被其他自然数整除的数（也可定义为只有1与该数本身两个正因数的数）。</p><p>来自 <a href="https://zh.wikipedia.org/wiki/%E8%B4%A8%E6%95%B0">https://zh.wikipedia.org/wiki/质数</a></p><h3 id="互质">互质</h3><p>互质是公约数只有1的两个整数，也可记gcd(a,b)=1, 叫做互质整数。</p><h2 id="欧拉">欧拉</h2><p>在数论中，对正整数n，欧拉函数phi(n)是小于等于n的正整数中与n互质的数的数目。此函数以其首名研究者欧拉命名，它又称为φ函数（由高斯所命名）或是欧拉总计函数（totient function，由西尔维斯特所命名）。</p><p>来自 <a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0">https://zh.wikipedia.org/wiki/欧拉函数</a></p><span id="more"></span><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">例如 11 的欧拉:比11小且与11互质的正整数有: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10所以phi(11) = 10 = 11-1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由上例子同时可知, 质数的欧拉是他本身减1: phi(N) = N - 1<br>同时 歐拉函數是積性函數，即是说若m,n互質，則 phi(mn) = phi(m)phi(n)</p><h2 id="欧几里得算法">欧几里得算法</h2><p>也叫辗转相除法，用来找出两个数的最大公约数<code>gcd(a,b)</code><br>商记作<code>qi</code>, 余数记作<code>ri</code>, 欧几里得算法可写为 <code>ri-1 = qi * ri + ri+1</code></p><p>eg1: 寻找160, 11 的最大公约数</p><table><thead><tr><th style="text-align:center"><code>ri-1 = qi * ri + ri+1</code></th><th style="text-align:center">商<code>qi</code></th><th style="text-align:center">余数<code>ri</code></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">160</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">11</td></tr><tr><td style="text-align:center">160 = 14 * 11 + 6</td><td style="text-align:center">14</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">11 = 1 * 6 + 5</td><td style="text-align:center">1</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">6 = 1 * 5 + 1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">5 = 5 * 1 + 0</td><td style="text-align:center">5</td><td style="text-align:center">0</td></tr></tbody></table><p>可得最大公约数为1, 同时因为<code>gcd(160,11) = 1</code>, 所以 160, 11 互质</p><p>eg2: 寻找 160, 122 的最大公约数</p><table><thead><tr><th style="text-align:center"><code>ri-1 = qi * ri + ri+1</code></th><th style="text-align:center">商<code>qi</code></th><th style="text-align:center">余数<code>ri</code></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">160</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">122</td></tr><tr><td style="text-align:center">160 = 1 * 122 + 38</td><td style="text-align:center">1</td><td style="text-align:center">38</td></tr><tr><td style="text-align:center">122 = 3 * 38 +8</td><td style="text-align:center">3</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">38 = 4 * 8 + 6</td><td style="text-align:center">4</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">8 = 1 * 6 + 2</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">6 = 3 * 2 + 0</td><td style="text-align:center">3</td><td style="text-align:center">0</td></tr></tbody></table><p>所以最大公约数为2</p><h2 id="模反元素">模反元素</h2><p>模逆元也称为模倒数，或者模逆元。&lt;- 模反元素<br>如果两个正整数a和n互质，那么一定可以找到整数b，使得 ab-1 被n整除，或者说ab被n除的余数是1。这时，b就叫做a的“模反元素”。</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">如3关于20的模反元素是7，(3*7)%20=1  </code></pre><p><a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%8F%8D%E5%85%83%E7%B4%A0">https://zh.wikipedia.org/wiki/模反元素</a></p><h3 id="拓展欧几里得算法">拓展欧几里得算法</h3><p>计算欧几里得同时多计算<code>si-1 = qi *si + si+1</code>和<code>si-1 = qi *si + si+1</code>, 初始分别为<code>s0 = 1</code>,<code>s1 = 0</code>和<code>t0 = 0</code>, <code>t1 = 1</code>，<br>寻找出满足 <code>ax + by = gcd(x,y)</code>的<code>a</code>,<code>b</code>, 同时还可用来求模乘逆元</p><p>eg1: 寻找160, 11 的最大公约数</p><table><thead><tr><th style="text-align:center"><code>ri-1 = qi * ri + ri+1</code></th><th style="text-align:center">商<code>qi</code></th><th style="text-align:center">余数<code>ri</code></th><th style="text-align:center"><code>si-1 = qi * si + si+1</code></th><th style="text-align:center"><code>si</code></th><th style="text-align:center"><code>ti-1 = qi * si + ti+1</code></th><th style="text-align:center"><code>ti</code></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">160</td><td style="text-align:center"></td><td style="text-align:center">1</td><td style="text-align:center"></td><td style="text-align:center">0</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">11</td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center"></td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">160 = 14 * 11 + 6</td><td style="text-align:center">14</td><td style="text-align:center">6</td><td style="text-align:center">1 = 14 * 0 + 1</td><td style="text-align:center">1</td><td style="text-align:center">0 = 14 * 1 - 14</td><td style="text-align:center">-14</td></tr><tr><td style="text-align:center">11 = 1 * 6 + 5</td><td style="text-align:center">1</td><td style="text-align:center">5</td><td style="text-align:center">0 = 1 * 1 - 1</td><td style="text-align:center">-1</td><td style="text-align:center">1 = 1 * (-14) + 15</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">6 = 1 * 5 + 1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1 = 1 * (-1) + 2</td><td style="text-align:center">2</td><td style="text-align:center">-14= 1 * 15 - 29</td><td style="text-align:center">-29</td></tr><tr><td style="text-align:center">5 = 5 * 1 + 0</td><td style="text-align:center">5</td><td style="text-align:center">0</td><td style="text-align:center">-1 = 5 * 2 - 11</td><td style="text-align:center">11</td><td style="text-align:center">15 = 5 * (-29) + 130</td><td style="text-align:center">130</td></tr></tbody></table><p>可得 <code>gcd(160,11) = 1 = 2 * 160 + (-29) * 11 = 320 - 319</code>,<br>所以<br>2是160关于11的模乘逆元<br>131 = -29 + 160是11关于160的模乘逆元, 因为-29为负数需要加上模变成正数</p><h3 id="欧拉定理">欧拉定理</h3><p>在数论中，欧拉定理（也称费马-欧拉定理或欧拉phi函数定理）是一个关于同余的性质。欧拉定理表明，若n,a为正整数，且n,a互素（即gcd(a,n)=1），则<br><em><strong>a^phi(n) = 1 (mod n)</strong></em><br>即 a^phi(n)与1在模n下同余。欧拉定理得名于瑞士数学家莱昂哈德·欧拉。</p><blockquote><p>gcd: greatest common divisor(最大公约数)</p></blockquote><h2 id="RSA">RSA</h2><ol><li>隨意選擇兩個大的質數 p和q,p不等于q,计算N=pq.</li><li>求N的欧拉，r = phi(N) = phi(q) x phi(p) = (p-1)(q-1)</li><li>选择一个小于r的整数e，使e与r互质。並求得e关于r的模反元素，命名为d。</li><li>(N,e)是公钥，(N,d)是私钥。</li><li>加密原文m, 得到密文 x = (m^e)%N</li><li>解密公式为 m = (x^d)%N<br><strong>只能加密比N小的数字，比N大的数字无法加密。</strong></li></ol><p>eg：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">选择两个质数3,11。计算得到N=3<span class="token italic"><span class="token punctuation">*</span><span class="token content">11=33计算N的欧拉，r=phi(N)=phi(3)</span><span class="token punctuation">*</span></span>phi(11)=(3-1)(11-1)=20选择一个小于的r且与r互质的整数3，求得3关于20的模反元素7得到公钥(33,3),私钥(33,7)加密：加密数字24，(24^3)%33 = 30, 获得加密后的密文 30解密：对密文30解密，(30^7)%33 = 24, 获得解密后的明文24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;质数&quot;&gt;质数&lt;/h2&gt;
&lt;p&gt;质数（Prime number），又称素数，指在大于1的自然数中，除了1和该数自身外，无法被其他自然数整除的数（也可定义为只有1与该数本身两个正因数的数）。&lt;/p&gt;
&lt;p&gt;来自 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B4%A8%E6%95%B0&quot;&gt;https://zh.wikipedia.org/wiki/质数&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;互质&quot;&gt;互质&lt;/h3&gt;
&lt;p&gt;互质是公约数只有1的两个整数，也可记gcd(a,b)=1, 叫做互质整数。&lt;/p&gt;
&lt;h2 id=&quot;欧拉&quot;&gt;欧拉&lt;/h2&gt;
&lt;p&gt;在数论中，对正整数n，欧拉函数phi(n)是小于等于n的正整数中与n互质的数的数目。此函数以其首名研究者欧拉命名，它又称为φ函数（由高斯所命名）或是欧拉总计函数（totient function，由西尔维斯特所命名）。&lt;/p&gt;
&lt;p&gt;来自 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0&quot;&gt;https://zh.wikipedia.org/wiki/欧拉函数&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/categories/Crypto/"/>
    
    
    <category term="Crypto" scheme="https://asutorufa.github.io/tags/Crypto/"/>
    
    <category term="RSA" scheme="https://asutorufa.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>为广告而生,从使用到干掉大陆版MIUI</title>
    <link href="https://asutorufa.github.io/posts/6c3a98b5/"/>
    <id>https://asutorufa.github.io/posts/6c3a98b5/</id>
    <published>2021-09-25T11:40:35.000Z</published>
    <updated>2021-09-25T11:40:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用四年多的锤子手机越来越不堪重负，我决定换一款新的手机，在精心挑选后，选定了今年年初发布的一款Red MI手机，其极高的性价比打动了我。</p><h2 id="使用">使用</h2><p>在收货当天就迫不及待下班回家开始把玩，有一个词可以形容我当时的体验：軽い。<br>换手机的契机也是如此，国产app越来越毒瘤，旧手机越来越卡，开启健康码和支付宝都要至少等待2秒。由于四年的落差，即使是一款性价比手机也让我觉得好流畅，还有120hz屏幕，令我爱不释手。</p><h2 id="忍受">忍受</h2><p>我知道MIUI是有广告的，但根据各种网上的说法，是有开关是可以关闭的。<br>所以我一入手就根据网上流传的各种方法将隐藏在系统不同角落的广告关闭了。<br>确实有效，APP和系统设置中的一些广告确实没有了，天真的我以为真的干掉了广告。<br>但是不定时广告推送，小米商城推送各种促销，系统自带浏览器也开始充当新闻客户端，各种推送傻逼新闻，而这一切的前提都是在我进入软件关闭各种推送的条件下，在了解后得知可以使用ADB冻结几个系统软件解决，我冻结了以下系统软件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell pm disable-user com.xiaomi.abadb shell pm disable-user com.miui.systemAdSolutionadb shell pm disable-user com.miui.analyticsadb shell pm disable-user com.sohu.inputmethod.sogou.xiaomi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>确实有效，而且连某些app的开屏广告都没了。</p><h2 id="愤怒">愤怒</h2><span id="more"></span><p>虽然我不重度依赖谷歌，但我重度使用Twitter,Youtube,Reddit，在使用一段时间后，我发现推特的推送不灵了，每次开屏才会一堆一堆的推送，而在息屏的情况下根本收不到推送。<br>最初我一度认为是自己的设置有问题，毕竟连我的旧手机锤子都可以及时收到各种推送。<br>在对Google Play Service各种设置后，包括但不限于，取消应用黑名单，后台锁住app，但没有任何改变。<br>在了解后得知，大陆版MIUI会在息屏后断开FCM的连接，且强制设置在FCM断开后不再允许其重连，这一切我都可以理解，由于国内的环境，不断重试确实会导致耗电增加，在网友提醒下我通过ADB冻结了以下两个应用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell pm disable-user com.miui.powerkeeperadb shell pm disable-user com.xiaomi.powerchecker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>别说，还真有用，基本上能正常收到推送了，我以为我解决问题了。<br><strong>但是</strong><br>我发现息屏情况下播放音乐，音乐会自动暂停，在上网搜索后，我发现不只我有这个问题，在各方打听后得知是冻结<code>com.miui.powerkeeper</code>导致的。<br>加上KDE connect会时不时的断开，我真的很愤怒，我能理解MIUI的做法，但我无法忍受不给用户任何开关一刀切的做法，所以我决定干掉自带的陆版MIUI。</p><h2 id="成为“欧洲人”">成为“欧洲人”</h2><p>在经过7天的忍受之后，备份好手机内的各种资料后，成功解锁了手机。<br>我决定刷入<code>XIAOMI.EU</code>，一个被小米官方和欧洲ABC经销商认可的官改系统。<br>在<a href="https://xiaomi.eu">xiaomi.eu</a>上提前下载适用于手机的twrp和ROM。</p><ul><li><p>临时刷入TWRP并进入TWRP</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fastboot flash recovery twrp.imgfastboot boot twrp.img<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>在TWRP内格式化DATA分区，<strong>注意不要清除System和Persist分区</strong>。</p></li><li><p>在TWRP内开启sideload。</p></li><li><p>通过sideload刷入rom</p>  <pre class="language-bash" data-language="bash"><code class="language-bash">adb sideload xxxxx.ZIP</code></pre></li></ul><p>在百分之47的时候会结束，貌似是个bug，不过这个时候其实已经成功刷入了，直接重启进入系统即可。</p><h2 id="享受">享受</h2><p>没有了小米的各种广告推送，自带谷歌play商店，而不是小米应用商店，手动安装应用时不再要求你多次确认，正常的FCM推送，不再断开的KDE Connect，虽然缺失了一部分特有的功能，但此时此刻我感受到了成为“欧洲人”的优越感。</p><h2 id="总结">总结</h2><p>如果你喜欢折腾且会刷机，那么小米手机依旧可以在你的购机候选名单中，否贼就将其永久拉黑。<br>我不认同广告漫天飞的系统会符合用户习惯，包括所谓“符合中国用户习惯”。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用四年多的锤子手机越来越不堪重负，我决定换一款新的手机，在精心挑选后，选定了今年年初发布的一款Red MI手机，其极高的性价比打动了我。&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;
&lt;p&gt;在收货当天就迫不及待下班回家开始把玩，有一个词可以形容我当时的体验：軽い。&lt;br&gt;
换手机的契机也是如此，国产app越来越毒瘤，旧手机越来越卡，开启健康码和支付宝都要至少等待2秒。由于四年的落差，即使是一款性价比手机也让我觉得好流畅，还有120hz屏幕，令我爱不释手。&lt;/p&gt;
&lt;h2 id=&quot;忍受&quot;&gt;忍受&lt;/h2&gt;
&lt;p&gt;我知道MIUI是有广告的，但根据各种网上的说法，是有开关是可以关闭的。&lt;br&gt;
所以我一入手就根据网上流传的各种方法将隐藏在系统不同角落的广告关闭了。&lt;br&gt;
确实有效，APP和系统设置中的一些广告确实没有了，天真的我以为真的干掉了广告。&lt;br&gt;
但是不定时广告推送，小米商城推送各种促销，系统自带浏览器也开始充当新闻客户端，各种推送傻逼新闻，而这一切的前提都是在我进入软件关闭各种推送的条件下，在了解后得知可以使用ADB冻结几个系统软件解决，我冻结了以下系统软件：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;adb shell pm disable-user com.xiaomi.ab
adb shell pm disable-user com.miui.systemAdSolution
adb shell pm disable-user com.miui.analytics
adb shell pm disable-user com.sohu.inputmethod.sogou.xiaomi&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;确实有效，而且连某些app的开屏广告都没了。&lt;/p&gt;
&lt;h2 id=&quot;愤怒&quot;&gt;愤怒&lt;/h2&gt;</summary>
    
    
    
    <category term="Personally" scheme="https://asutorufa.github.io/categories/Personally/"/>
    
    
  </entry>
  
  <entry>
    <title>iptables</title>
    <link href="https://asutorufa.github.io/posts/736b1750/"/>
    <id>https://asutorufa.github.io/posts/736b1750/</id>
    <published>2021-07-14T21:31:27.000Z</published>
    <updated>2021-07-14T21:31:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>iptables chain</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">    +---------------------------------------------------------+    |                   Network Card                          |    +---------------------------------------------------------+      |                                                    ^      |                                                    |      v                                                    | +----------+          is?      no    +-------+        +-----------+ |prerouting| ----> localhost ------> |forward| ---->  |postrouting| +----------+          |              +-------+        +-----------+                        | yes                                 ^                       |                                     |                       v                                     |                    +---------+                        +-----------+                    |  input  |                        |   output  |                    +---------+                        +-----------+                         |                                   ^                         |                                   |                         |                                   |                         v                                   |    +----------------------------------------------------------+    |                        user                              |    +----------------------------------------------------------+out -> localhost: prerouting -> inputforward:          prerouting -> forward    -> postroutinglocalhost -> out: output     -> postrouting<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>iptables table:</p><ul><li>filter:</li><li>nat:</li><li>magle:</li><li>raw:</li></ul><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">table <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>-</span><span class="token punctuation">></span></span> chain  raw: PREROUTING, OUTPUT  mangle: PREROUTING, INPUT, FORWARD, OUTPUT, POSTROUTING  nat: PREROUTING, OUTPUT, POSTROUTING, INPUT  filter: INPUT, FORWARD, OUTPUTraw –> mangle –> nat –> filter  chain <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>-</span><span class="token punctuation">></span></span> tablePREROUTING: raw, mangle, natINPUT: mangle, filter, natFORWARD: mangle, filterOUTPUT: raw, mangle, nat, filterPOSTROUTING: mangle, nat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>query</p><pre class="language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>table<span class="token operator">></span> <span class="token parameter variable">-nvL</span> <span class="token operator">&lt;</span>chain<span class="token operator">></span></code></pre><hr><p><a href="https://www.zsythink.net/archives/tag/iptables/page/2">iptables</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;iptables chain&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;   </summary>
        
      
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
    <category term="iptables" scheme="https://asutorufa.github.io/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS相关</title>
    <link href="https://asutorufa.github.io/posts/11b2b8df/"/>
    <id>https://asutorufa.github.io/posts/11b2b8df/</id>
    <published>2021-04-18T18:16:58.000Z</published>
    <updated>2021-04-18T18:16:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近遇到了一件事, 让我又多熟悉了下HTTPS的相关内容, 先看看HTTPS的结构</p><p>通常的HTTP网络结构如下</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+------+| HTTP |+------+| TCP  |+------+|  IP  |+------+  ...  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HTTP的的相关内容是通过TCP明文传输的, 如果有中间监听者, 可以直接看结相关内容.</p><p>HTTPS的结构</p><span id="more"></span><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+------+| HTTP |+------+| TLS  |+------+| TCP  |+------+|  IP  |+------+  ...  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>TCP和HTTP之前多了一次处理, 会将HTTP的内容加密后再通过TCP传输.<br>TLS握手过程中, 会协商使用的TLS版本, 加密方式及密钥, 会通过证书确认身份, 生成的密钥也会加密, 不想被看见握手过程的话, 目前还可以采用ESNI.<br>这里并不能完全匿名, 因为还是能通过网络层知道你的目的地址, 但是具体请求的内容就不会被看见了.</p><hr><p><strong>以下案例纯虚假编造的, 如有雷同, 纯属巧合.</strong><br>客户需求大概是这样, 希望在前后端传输过程中密码等敏感内容不要明文暴露, 不被中间劫持获取.<br>x公司x高级架构师采用的是这样的方案:</p><ul><li>前后端使用HTTP通信</li><li>前端对相关敏感内容对称加密后传给后端, 后端解密获取内容</li></ul><p>不采用TLS的理由如下:</p><ul><li>可以通过浏览器漏洞获取</li><li>HTTPS可以被暴力破解</li></ul><p>先说下采用的方案和不合理, 目前产品是传统的BS模式, 也就是说网页会从后端获取.<br>因为网页是从后端获取的, 而且是HTTP, 也就是说中间劫持者也可以获取网页内容, 通过分析js就能获取具体的加密方式, 即使对js进行混淆也最多是花的时间稍微长那么一点, 所以说这个方案完全无用, 当然欺骗一下不懂技术的客户还是可以的, 但是从技术角度是完全不可行的.<br>这里我们可以改一下产品的模式还是可行的, 使用electron等类似的技术将网页包装成一个客户端, 不通过后端获取网页还是可行的, 可能在使用上麻烦了一点, 但是这才能真正让前端的加密具有意义.</p><p>再分析下不采用TLS的理由:</p><ul><li><p>可以通过浏览器漏洞获取<br>这句话是废话, 浏览器真有漏洞不管是HTTP还是HTTPS都无用的.</p></li><li><p>HTTPS可以被暴力破解</p></li></ul><p>这里我们先分析下, 目前HTTPS可能被破解的几种方式.</p><ol><li>第一种, 在握手阶段使用虚假的证书进行握手, 这里需要在浏览器或者是客户端的系统上导入虚假的证书, 不过我认为一个安全意识很高的公司是不会随意导入不认识的证书的.</li><li>第二种, 暴力破解TLS的加密, 不计时间情况下当然能被破解, 但是现代密码学, 即使使用超级计算机暴力破解都要花费很长很长时间.</li></ol><p>总上所述, 这句话也是废话.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近遇到了一件事, 让我又多熟悉了下HTTPS的相关内容, 先看看HTTPS的结构&lt;/p&gt;
&lt;p&gt;通常的HTTP网络结构如下&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;+------+
| HTTP |
+------+
| TCP  |
+------+
|  IP  |
+------+
  ...  &lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;HTTP的的相关内容是通过TCP明文传输的, 如果有中间监听者, 可以直接看结相关内容.&lt;/p&gt;
&lt;p&gt;HTTPS的结构&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="HTTPS" scheme="https://asutorufa.github.io/tags/HTTPS/"/>
    
    <category term="HTTP" scheme="https://asutorufa.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>2021-03-20 01:25AM</title>
    <link href="https://asutorufa.github.io/posts/d67c4794/"/>
    <id>https://asutorufa.github.io/posts/d67c4794/</id>
    <published>2021-03-20T01:32:57.000Z</published>
    <updated>2021-03-20T01:32:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>2021-03-20 01:25AM<span id="more"></span><br>第一次出来实习, 住的房子是同事转租给我的, 本来说是去出差, 但是没过几天就辞职了, 走的时候帮我出了500块房租, 还留了不少东西, 我还白住了半个多月没出钱, 我可以说是相当幸运, 第一次出来找工作就有不少人照顾我.<br>刚过来的时候刚好有个学长在这边, 挺照顾我的, 帮了我不少, 还给了我一些东西.<br>因为一直在学校食堂吃饭, 没怎么关注过学校食堂以外的饭馆的价格, 看到外面饭店里菜的价格, 真的是难以接受, 都是15块起步, 吃饱至少得20多, 跟学校里不到10块就能吃饱相比真的是差的很多, 而且自己还要交房租, 一开始我真的很担心实习的工资可能会导致我连饭都吃不起.<br>所以刚开始我都是能省一点就省一点, 除了中午饭, 都是自己在做, 10块钱买的菜可以吃很久, 不过过了一段时间之后就没那么担心了, 可能是因为渐渐对周围熟悉起来了, 也不太担心钱不够花的问题了, 因为在大学就想着省钱, 平时也不买水果啥的, 到了大三,大四得了一些生活习惯病, 飞蚊症,鼻炎,耳鸣… 都是些没法治的病, 刚开始还去医院花了不少钱, 到最后还没治好, 所以现在都是尽量吃的健康, 水果再贵我也要买一些吃.<br>因为大学的时候有了耳鸣, 虽然耳鸣的声音不是很大, 但是我对声音真的很敏感, 一有点声音就会醒的那种, 之前还敢睡觉的时候戴戴耳机, 自从得了耳鸣之后耳机也不敢多戴了, 一直想买一个sony的XM3, 但是好不容易攒的钱, 总是会因为各种原因花掉, 比如因为考试要回学校买机票了(因为现在机票比高铁便宜很多,所以还是买机票了), 而且学校本来给找工作同学发的助学金也发给考研的人了, 可能这就是国情吧, 贫苦生永远拿不到助学金, 拿到助学金的人全去买一双两三千的鞋了, 这正常吗?<br>刚来的时候, 我对面最大那个房间住着一家三口, 小孩还很小, 有时候会哭, 不过一般不到5分钟就不哭了, 感觉还好没那么吵. 现在对面换成一对情侣了, 真的很吵, 一直说话, 半夜12点1点不睡覺还在大笑, 还好签的合同就剩两个月了, 自己也买了新的隔音耳塞, 只能先坚持坚持了, 合同到期我一定要换一个好一点的房子, 贵点也行, 只要隔音比较好.<br>楼上还有一个敲架子鼓的, 这是我没想到的, 居民楼里敲架子鼓, 小区周围的环境也很差, 每天都有装修的, 要不是初来乍到, 我一定不会选择这里的.<br>来到这边基本哪里都没去过, 一部分原因是没钱, 还有一部分原因是自己想干的事太多, 又想学日语, 又想维护自己写的开源项目, 还想看看关注的youtuber新出的视频, 周末对我来说完全不够用, 最近上班摸鱼都有在搞自己的开源项目, 虽然可能一个用的人都没有, 但是我还是想弄好一点, 至少自己用的舒服点.<br>公司的话还好, 虽然没有想象中那么好, 但是还能接受. 主要是管理比较乱, 没有代码规范, 有些代码也写的很有问题, 如果不再改改的, 我相信只会越来越影响效率, 不少地方代码写的很有问题, 整个项目的架构也不太对, 至少从我这个大学还没毕业的来看问题还是不少的. 我不太会说话, 有时候会惹人不高兴或是事后觉得自己说的不对, 对于技术相关的问题有时我真的很想反驳, 但现在都尽量忍住了, 不想让别人觉得我这个后辈很无礼. 有时确实没有共同话题, 比如我现在真的很讨厌bilibili, 对于我来说变味太严重, 但是反而是因为出圈太严重了, 用的人越来越多, 周围同事总是会说昨天我在bilibili上看了什么, 我也不好说什么, 因为我现在已经基本不用它了.<br>自己的话, 除了多了工作和做饭, 习惯基本没什么变化, 平时瞎搞搞电脑, 看看youtube,twitter, 在笔记本上记录一下最近新知道的日语单词, 写写代码.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;2021-03-20 01:25AM</summary>
    
    
    
    <category term="日常" scheme="https://asutorufa.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>Hyperledger Fabric组织更换证书</title>
    <link href="https://asutorufa.github.io/posts/afc6d6dd/"/>
    <id>https://asutorufa.github.io/posts/afc6d6dd/</id>
    <published>2021-01-24T17:34:58.000Z</published>
    <updated>2021-01-24T17:34:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>最近一直在研究关于如何给一个fabric的组织更换一个新的证书, 包括所有加入的通道, 所有peer和orderer.<br>用了很多看似完美的方法却多次测试失败, 最后总算找到一种方法.</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"channel_group"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"groups"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"Application"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"groups"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token property">"Org1MSP"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token property">"groups"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"mod_policy"</span><span class="token operator">:</span> <span class="token string">"Admins"</span><span class="token punctuation">,</span>                         <span class="token property">"values"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token property">"MSP"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0"</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                     <span class="token property">"Org2MSP"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token property">"groups"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"mod_policy"</span><span class="token operator">:</span> <span class="token string">"Admins"</span><span class="token punctuation">,</span>                         <span class="token property">"values"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token property">"MSP"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0"</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                 <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>             <span class="token property">"Orderer"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"groups"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token property">"OrdererOrg"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token property">"groups"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"values"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token property">"MSP"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0"</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                 <span class="token property">"values"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token property">"ConsensusType"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token property">"mod_policy"</span><span class="token operator">:</span> <span class="token string">"Admins"</span><span class="token punctuation">,</span>                         <span class="token property">"value"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token property">"metadata"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                <span class="token property">"consenters"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                                    <span class="token punctuation">&#123;</span>                                        <span class="token property">"client_tls_cert"</span><span class="token operator">:</span> <span class="token string">"=="</span><span class="token punctuation">,</span>                                         <span class="token property">"host"</span><span class="token operator">:</span> <span class="token string">"orderer.example.com"</span><span class="token punctuation">,</span>                                         <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">7050</span><span class="token punctuation">,</span>                                         <span class="token property">"server_tls_cert"</span><span class="token operator">:</span> <span class="token string">"=="</span>                                    <span class="token punctuation">&#125;</span>                                <span class="token punctuation">]</span><span class="token punctuation">,</span>                                 <span class="token property">"options"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                    <span class="token property">"election_tick"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>                                     <span class="token property">"heartbeat_tick"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                                     <span class="token property">"max_inflight_blocks"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>                                     <span class="token property">"snapshot_interval_size"</span><span class="token operator">:</span> <span class="token number">16777216</span><span class="token punctuation">,</span>                                     <span class="token property">"tick_interval"</span><span class="token operator">:</span> <span class="token string">"500ms"</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                             <span class="token property">"state"</span><span class="token operator">:</span> <span class="token string">"STATE_NORMAL"</span><span class="token punctuation">,</span>                             <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"etcdraft"</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0"</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                 <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>         <span class="token property">"sequence"</span><span class="token operator">:</span> <span class="token string">"2"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个通道配置块类似上面这种,为了看的清楚有些内容我删了, 更换证书我们需要保证application及orderer的MSP是相同的, 否则更新配置块是不会成功的, 且我们得保证当前组织的raft节点的证书也要全部更换掉.</p><h2 id="失败过程">失败过程</h2><span id="more"></span><h3 id="1">1</h3><p>第一次就是非常简单的想法, 先更换所有通道的通道配置块的ca证书, 然后重启所有peer和orderer节点.<br>但是这里因为raft的问题, 通道配置块内的<strong>raft的tls证书一次只能更换一个</strong>, 如果我要更换证书的组织拥有多个orderer且都作为raft节点, 这是如果直接更新可能会直接导致raft共识直接失效, 很多情况想想都不行.</p><h3 id="2">2</h3><p>先移除多余的raft节点, 更换后再加进来, 测试后发现自己想的太简单了,  因为即使后面重新加进来后, 之前被移除的节点也无法拉取到新的配置块, 因为他们的通道配置块内还是旧的证书, 当然连不上了, 这里必须要更新它们的创世区块才行, 操作过于繁琐, 且在区块链创建初期很容易导致整个联盟的raft共识崩溃掉.</p><h3 id="3">3</h3><p>查看官方文档, 发现orderer和raft的端口可以分开, 也就是说orderer和raft grpc服务可以分开了, 后来测试才发现是自己想错了, 且官方文档的误导性太强了, raft和组织的证书仍旧是绑定在一起的, 如果一个组织只有一个ca证书且拥有多个raft节点依旧无法更换.<br>如果使用不同的证书, 查看orderer的报错, 可以发现是在orderer连接其他orderer的raft节点时会出问题, 会报证书验证不通过, 这里我才发现下面的解决方法.</p><h2 id="方法">方法</h2><p>最后才发现fabric一个组织的msp目录下的证书都是可以放多个ca证书的, 创建创世区块时, 配置块内的证书数组就会有两个证书, 这样即使orderer和raft使用不同的ca证书签发下来的tls证书, 只要在组织的ca列表内就不会有问题.</p><p>这样就有了更换证书的方法, 过程大概是这样的:</p><ul><li>先将新的tlsca证书添加到所有到通道配置块内, 注意这里是添加, 不是替换.</li><li>替换通道配置块内一个raft节点的证书为新证书, 替换本地orderer节点的证书文件, 重启节点.</li><li>重复以上步骤直到替换了所有raft节点的证书.</li><li>然后再替换其他的ca证书, admin证书之类的.</li><li>最后将通道配置块内的旧证书删除掉.</li></ul><p>这样就完成替换了, 大概过程就是如此, 实际操作时可能会有所出入.<br>当然如果觉得没有删除旧证书的必要也可以不删除.</p><h2 id="附加">附加</h2><p>关于fabric ca</p><p>fabric ca在签发证书时, ca就是fabric ca server下的ca, 不会重新签发新的ca.</p><p>关于msp目录</p><p>keystore &lt;- 节点/用户证书的密钥<br>signcerts &lt;- 节点/用户证书</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近一直在研究关于如何给一个fabric的组织更换一个新的证书, 包括所有加入的通道, 所有peer和orderer.&lt;br&gt;
用了很多看似完美的方法却多次测试失败, 最后总算找到一种方法.&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-json&quot; data-language=&quot;json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;channel_group&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;Application&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                    &lt;span class=&quot;token property&quot;&gt;&quot;Org1MSP&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                        &lt;span class=&quot;token property&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;mod_policy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Admins&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;values&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token property&quot;&gt;&quot;MSP&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                    &lt;span class=&quot;token property&quot;&gt;&quot;Org2MSP&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                        &lt;span class=&quot;token property&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;mod_policy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Admins&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;values&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token property&quot;&gt;&quot;MSP&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1&quot;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;token property&quot;&gt;&quot;Orderer&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                &lt;span class=&quot;token property&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                    &lt;span class=&quot;token property&quot;&gt;&quot;OrdererOrg&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                        &lt;span class=&quot;token property&quot;&gt;&quot;groups&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;values&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token property&quot;&gt;&quot;MSP&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;token property&quot;&gt;&quot;values&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                    &lt;span class=&quot;token property&quot;&gt;&quot;ConsensusType&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                        &lt;span class=&quot;token property&quot;&gt;&quot;mod_policy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Admins&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                            &lt;span class=&quot;token property&quot;&gt;&quot;metadata&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                                &lt;span class=&quot;token property&quot;&gt;&quot;consenters&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
                                    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                                        &lt;span class=&quot;token property&quot;&gt;&quot;client_tls_cert&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;==&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                        &lt;span class=&quot;token property&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;orderer.example.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                        &lt;span class=&quot;token property&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7050&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                        &lt;span class=&quot;token property&quot;&gt;&quot;server_tls_cert&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;==&quot;&lt;/span&gt;
                                    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                                &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                &lt;span class=&quot;token property&quot;&gt;&quot;options&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
                                    &lt;span class=&quot;token property&quot;&gt;&quot;election_tick&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                    &lt;span class=&quot;token property&quot;&gt;&quot;heartbeat_tick&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                    &lt;span class=&quot;token property&quot;&gt;&quot;max_inflight_blocks&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                    &lt;span class=&quot;token property&quot;&gt;&quot;snapshot_interval_size&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16777216&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                                    &lt;span class=&quot;token property&quot;&gt;&quot;tick_interval&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;500ms&quot;&lt;/span&gt;
                                &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                            &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;token property&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;STATE_NORMAL&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;etcdraft&quot;&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;token property&quot;&gt;&quot;sequence&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一个通道配置块类似上面这种,为了看的清楚有些内容我删了, 更换证书我们需要保证application及orderer的MSP是相同的, 否则更新配置块是不会成功的, 且我们得保证当前组织的raft节点的证书也要全部更换掉.&lt;/p&gt;
&lt;h2 id=&quot;失败过程&quot;&gt;失败过程&lt;/h2&gt;</summary>
    
    
    
    <category term="Hyperledger fabric" scheme="https://asutorufa.github.io/categories/Hyperledger-fabric/"/>
    
    
    <category term="blockchain" scheme="https://asutorufa.github.io/tags/blockchain/"/>
    
    <category term="Hyperledger Fabric" scheme="https://asutorufa.github.io/tags/Hyperledger-Fabric/"/>
    
  </entry>
  
  <entry>
    <title>使用GVT-g显卡虚拟化</title>
    <link href="https://asutorufa.github.io/posts/3a1d136/"/>
    <id>https://asutorufa.github.io/posts/3a1d136/</id>
    <published>2021-01-17T20:53:29.000Z</published>
    <updated>2021-01-17T20:53:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为内核添加参数">为内核添加参数</h2><p>比如<code>grub</code>在<code>/etc/default/grub</code>的<code>GRUB_CMDLINE_LINUX_DEFAULT=</code>中添加</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token key attr-name">intel_iommu</span><span class="token punctuation">=</span><span class="token value attr-value">on i915.enable_gvt=1 i915.enable_guc=0</span></code></pre><h2 id="启用modules">启用modules</h2><p>在<code>/etc/mkinitcpio.conf</code>的MODULES=()`中添加:</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token comment"># linux 5.14后，arch的linux内核模块已经不会勾选vfio-mdev，自测不影响gvt-g</span>kvmgt vfio vfio-iommu-type1s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后运行,我用的zen内核所以是linux-zen,默认内核是linux</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mkinitcpio <span class="token parameter variable">-p</span> linux-zen</code></pre><p>重启计算机</p><p>查看<code>/sys/devices/pci0000:00/0000:00:02.0/mdev_supported_types</code>可以看见类似如下的目录</p><span id="more"></span><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ls /sys/devices/pci$&#123;GVT_DOM&#125;/$GVT_PCI/mdev_supported_types</span>i915-GVTg_V5_1  <span class="token comment"># Video memory: &lt;512MB, 2048MB>, resolution: up to 1920x1200</span>i915-GVTg_V5_2  <span class="token comment"># Video memory: &lt;256MB, 1024MB>, resolution: up to 1920x1200</span>i915-GVTg_V5_4  <span class="token comment"># Video memory: &lt;128MB, 512MB>, resolution: up to 1920x1200</span>i915-GVTg_V5_8  <span class="token comment"># Video memory: &lt;64MB, 384MB>, resolution: up to 1024x768</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>向create文件中写入uuid(自己生成)就会创建相应的虚拟显卡</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$GVT_GUID</span>"</span> <span class="token operator">></span> <span class="token string">"/sys/devices/pci<span class="token variable">$&#123;GVT_DOM&#125;</span>/<span class="token variable">$GVT_PCI</span>/mdev_supported_types/<span class="token variable">$GVT_TYPE</span>/create"</span></code></pre><p>移除</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">></span> /sys/bus/pci/devices/<span class="token variable">$GVT_PCI</span>/<span class="token variable">$GVT_GUID</span>/remove</code></pre><h2 id="qemu添加钩子-启动虚拟机时自动创建虚拟显卡">qemu添加钩子, 启动虚拟机时自动创建虚拟显卡</h2><p><code>/etc/libvirt/hooks/qemu</code>中, 沒有则自己创建</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">GVT_PCI</span><span class="token operator">=</span><span class="token operator">&lt;</span>GVT_PCI<span class="token operator">></span> <span class="token comment"># 这里为显卡的地址, 比如 0000:00:02.0</span><span class="token assign-left variable">GVT_GUID</span><span class="token operator">=</span><span class="token operator">&lt;</span>GVT_GUID<span class="token operator">></span> <span class="token comment"># 这里为自己生成的uuid</span><span class="token assign-left variable">MDEV_TYPE</span><span class="token operator">=</span><span class="token operator">&lt;</span>GVT_TYPE<span class="token operator">></span> <span class="token comment"># 这里为要使用的虚拟的类型, 比如 i915-GVTg_V5_8</span><span class="token assign-left variable">DOMAIN</span><span class="token operator">=</span><span class="token operator">&lt;</span>DOMAIN name<span class="token operator">></span> <span class="token comment"># qemu虚拟机的名字</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-ge</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">=</span> <span class="token string">"<span class="token variable">$DOMAIN</span>"</span> <span class="token parameter variable">-a</span> <span class="token variable">$2</span> <span class="token operator">=</span> <span class="token string">"prepare"</span> <span class="token parameter variable">-a</span> <span class="token variable">$3</span> <span class="token operator">=</span> <span class="token string">"begin"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$GVT_GUID</span>"</span> <span class="token operator">></span> <span class="token string">"/sys/bus/pci/devices/<span class="token variable">$GVT_PCI</span>/mdev_supported_types/<span class="token variable">$MDEV_TYPE</span>/create"</span>    <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">=</span> <span class="token string">"<span class="token variable">$DOMAIN</span>"</span> <span class="token parameter variable">-a</span> <span class="token variable">$2</span> <span class="token operator">=</span> <span class="token string">"release"</span> <span class="token parameter variable">-a</span> <span class="token variable">$3</span> <span class="token operator">=</span> <span class="token string">"end"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">></span> /sys/bus/pci/devices/<span class="token variable">$GVT_PCI</span>/<span class="token variable">$GVT_GUID</span>/remove    <span class="token keyword">fi</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样启动虚拟机时会自动创建, 停止后会自动删除</p><h2 id="生成虚拟机配置">生成虚拟机配置</h2><p>可以使用<code>virt-manager</code>先生成一个虚拟机, 再修改相应的配置, 默认配置文件在<code>/etc/libvirt/qemu/</code><br>需要添加/修改的配置:</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>commandline</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>-set<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>device.hostdev0.x-igd-opregion=on<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>-set<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>device.hostdev0.ramfb=on<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>-set<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>device.hostdev0.driver=vfio-pci-nohotplug<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">qemu:</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>MESA_LOADER_DRIVER_OVERRIDE<span class="token punctuation">'</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>i965<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!--intel启用OpenGL可能会花屏, 不会就不要加这一条--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">qemu:</span>commandline</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>hostdev配置可以在添加硬件(PCI HOST Devices)的界面直接修改xml, 更方便一点</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hostdev</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>subsystem<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>mdev<span class="token punctuation">'</span></span> <span class="token attr-name">managed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>no<span class="token punctuation">'</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>vfio-pci<span class="token punctuation">'</span></span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>on<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span> <span class="token attr-name">uuid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>93397e71-15bf-4889-98b7-aa2d735e6260<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>pci<span class="token punctuation">'</span></span> <span class="token attr-name">domain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>0x0000<span class="token punctuation">'</span></span> <span class="token attr-name">bus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>0x00<span class="token punctuation">'</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>0x09<span class="token punctuation">'</span></span> <span class="token attr-name">function</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>0x0<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hostdev</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>none<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>graphics</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>spice<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listen</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>none<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">compression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>off<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jpeg</span> <span class="token attr-name">compression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>never<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zlib</span> <span class="token attr-name">compression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>never<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>playback</span> <span class="token attr-name">compression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>off<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>streaming</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>off<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gl</span> <span class="token attr-name">enable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>yes<span class="token punctuation">'</span></span> <span class="token attr-name">rendernode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/dev/dri/by-path/pci-0000:00:02.0-render<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>graphics</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vcpu</span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>static<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vcpu</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cputune</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vcpupin</span> <span class="token attr-name">vcpu</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>0<span class="token punctuation">'</span></span> <span class="token attr-name">cpuset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>1<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vcpupin</span> <span class="token attr-name">vcpu</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>1<span class="token punctuation">'</span></span> <span class="token attr-name">cpuset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>2<span class="token punctuation">'</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cputune</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结尾">结尾</h2><p>启动虚拟机后, 进入虚拟机安装相应的显卡驱动就行了.<br>这样就快很多了, 比软件渲染快多了, 这样用linux也能愉快的使用其他系统了.</p><hr><p><a href="https://wiki.archlinux.org/index.php/Intel_GVT-g">Intel_GVT-g</a><br><a href="https://medium.com/@langleyhouge/%E8%AE%A9-kvm-%E4%B8%8A%E7%9A%84-windows-%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%8F%92%E4%B8%8Agvt-g-%E7%9A%84%E7%BF%85%E8%86%80-ac0ac28b73b8">让 KVM 上的 Windows 虚拟机插上GVT-g 的翅膀</a><br><a href="https://www.libvirt.org/hooks.html">libvirt hooks</a><br><a href="https://blog.bepbep.co/posts/gvt/">Intel Gvt</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;为内核添加参数&quot;&gt;为内核添加参数&lt;/h2&gt;
&lt;p&gt;比如&lt;code&gt;grub&lt;/code&gt;在&lt;code&gt;/etc/default/grub&lt;/code&gt;的&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&lt;/code&gt;中添加&lt;/p&gt;
&lt;pre class=&quot;language-ini&quot; data-language=&quot;ini&quot;&gt;&lt;code class=&quot;language-ini&quot;&gt;&lt;span class=&quot;token key attr-name&quot;&gt;intel_iommu&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token value attr-value&quot;&gt;on i915.enable_gvt=1 i915.enable_guc=0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;启用modules&quot;&gt;启用modules&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt;的MODULES=()`中添加:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-ini&quot; data-language=&quot;ini&quot;&gt;&lt;code class=&quot;language-ini&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# linux 5.14后，arch的linux内核模块已经不会勾选vfio-mdev，自测不影响gvt-g&lt;/span&gt;
kvmgt vfio vfio-iommu-type1s&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后运行,我用的zen内核所以是linux-zen,默认内核是linux&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; mkinitcpio &lt;span class=&quot;token parameter variable&quot;&gt;-p&lt;/span&gt; linux-zen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启计算机&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;/sys/devices/pci0000:00/0000:00:02.0/mdev_supported_types&lt;/code&gt;可以看见类似如下的目录&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://asutorufa.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://asutorufa.github.io/tags/Linux/"/>
    
    <category term="qemu" scheme="https://asutorufa.github.io/tags/qemu/"/>
    
    <category term="GVT-g" scheme="https://asutorufa.github.io/tags/GVT-g/"/>
    
    <category term="intel" scheme="https://asutorufa.github.io/tags/intel/"/>
    
  </entry>
  
  <entry>
    <title>gpg使用</title>
    <link href="https://asutorufa.github.io/posts/7d547224/"/>
    <id>https://asutorufa.github.io/posts/7d547224/</id>
    <published>2020-10-02T14:00:01.000Z</published>
    <updated>2020-10-02T14:00:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>生成一个密钥</p><pre class="language-bash" data-language="bash"><code class="language-bash">gpg --full-gen-key</code></pre><p>之后会选择加密方式, 有效期, 用户名及邮箱, 密码, 按自己需求填就行了.</p><p>创建一个子密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --edit-key <span class="token punctuation">[</span>key hash<span class="token punctuation">]</span>gpg<span class="token operator">></span> addkey<span class="token comment">#只有与前面是相同的, 按需求选择.</span>gpg<span class="token operator">></span> save<span class="token comment"># 保存</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>导出密钥</p><pre class="language-bash" data-language="bash"><code class="language-bash">gpg <span class="token parameter variable">-o</span> /path/gpg_key --export-secret-keys <span class="token punctuation">[</span>key hash<span class="token punctuation">]</span></code></pre><p>导出子密钥</p><pre class="language-bash" data-language="bash"><code class="language-bash">gpg <span class="token parameter variable">-o</span> /path/gpg_key.sub --export-secret-subkeys <span class="token punctuation">[</span>key hash<span class="token punctuation">]</span></code></pre><p>导出吊销证书</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --generate-revocation <span class="token punctuation">[</span>key hash<span class="token punctuation">]</span><span class="token comment"># 输出是文本内容, 复制保存下来就行了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><span id="more"></span><p>删除密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --delete-secret-keys <span class="token punctuation">[</span>key hash<span class="token punctuation">]</span>gpg --delete-keys <span class="token punctuation">[</span>key hash<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>导入子密钥</p><pre class="language-bash" data-language="bash"><code class="language-bash">gpg <span class="token parameter variable">--import</span> /path/gpg_key.sub</code></pre><p>查看密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg <span class="token parameter variable">-k</span>gpg <span class="token parameter variable">-K</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>加密文件</p><pre class="language-bash" data-language="bash"><code class="language-bash">gpg <span class="token parameter variable">-r</span> <span class="token punctuation">[</span>user name<span class="token punctuation">]</span> <span class="token parameter variable">-o</span> <span class="token punctuation">[</span>output file<span class="token punctuation">]</span> <span class="token parameter variable">-e</span> <span class="token punctuation">[</span>filename<span class="token punctuation">]</span></code></pre><p>解密</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg <span class="token parameter variable">-o</span> <span class="token punctuation">[</span>output file<span class="token punctuation">]</span> <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>filename<span class="token punctuation">]</span> <span class="token comment"># 输出到文件</span>gpg <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>filename<span class="token punctuation">]</span> <span class="token comment"># 直接输出到终端</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p><a href="https://gist.github.com/jhjguxin/6037564">GPG 加密解密简明教程</a><br><a href="https://mogeko.me/2019/068/">GPG 的正确使用姿势</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;生成一个密钥&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg --full-gen-key&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;之后会选择加密方式, 有效期, 用户名及邮箱, 密码, 按自己需求填就行了.&lt;/p&gt;
&lt;p&gt;创建一个子密钥&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg --edit-key &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key hash&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

gpg&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; addkey
&lt;span class=&quot;token comment&quot;&gt;#只有与前面是相同的, 按需求选择.&lt;/span&gt;

gpg&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; save
&lt;span class=&quot;token comment&quot;&gt;# 保存&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;导出密钥&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg &lt;span class=&quot;token parameter variable&quot;&gt;-o&lt;/span&gt; /path/gpg_key --export-secret-keys &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key hash&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;导出子密钥&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg &lt;span class=&quot;token parameter variable&quot;&gt;-o&lt;/span&gt; /path/gpg_key.sub --export-secret-subkeys &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key hash&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;导出吊销证书&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg --generate-revocation &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key hash&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# 输出是文本内容, 复制保存下来就行了&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
    <category term="encrypt" scheme="https://asutorufa.github.io/tags/encrypt/"/>
    
  </entry>
  
  <entry>
    <title>GeoIP mmdb format</title>
    <link href="https://asutorufa.github.io/posts/931c13a4/"/>
    <id>https://asutorufa.github.io/posts/931c13a4/</id>
    <published>2020-07-27T22:15:17.000Z</published>
    <updated>2020-07-27T22:15:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>complete document <a href="https://maxmind.github.io/MaxMind-DB/">MaxMind DB File Format SpecificationDescription</a></p><p>here is only how convert trie tree to array</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">0100, 1011 -> trie<span class="token code keyword">              root               |         +-----+------+        /              \       0                1     /   \             /  \</span>   null   1           0   null         / \        /   \        0 null     null   1       / \               / \       0 null         null  1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>trie -&gt; array<br>left is 0, right is 1<br>value is index of array<span id="more"></span></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"> left | right  byte/index2     |   4    0-1null  |   6    2-38     |  null  4-510    |  null  6-7null  |  12    8-914    |  null  10-11null  |  16    11-12end   |  null  12-13null  |  end   13-14array: [2,4,null,6,8,null,10,null,null,12,14,null,null,16,end,null,null,end]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>for example:</p><p>index 1:<br>next left index 2 is null, so 00* is not exist<br>next right index 2+1 = 3 is not null, continue search until end or null</p><p>this is one byte as one child, but one byte max is 255, if node more than 255, we can use multiple byte as one child</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;complete document &lt;a href=&quot;https://maxmind.github.io/MaxMind-DB/&quot;&gt;MaxMind DB File Format SpecificationDescription&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;here is only how convert trie tree to array&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;0100, 1011 -&gt; trie

&lt;span class=&quot;token code keyword&quot;&gt;              root
               |
         +-----+------+
        /              &#92;
       0                1
     /   &#92;             /  &#92;&lt;/span&gt;
   null   1           0   null
         / &#92;        /   &#92;
        0 null     null   1
       / &#92;               / &#92;
       0 null         null  1&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;trie -&amp;gt; array&lt;br&gt;
left is 0, right is 1&lt;br&gt;
value is index of array</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="Network" scheme="https://asutorufa.github.io/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>DNS over HTTPS</title>
    <link href="https://asutorufa.github.io/posts/4b39445f/"/>
    <id>https://asutorufa.github.io/posts/4b39445f/</id>
    <published>2020-06-23T00:30:08.000Z</published>
    <updated>2020-06-23T00:30:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个DNS系列现在有以下几篇文章<br><a href="/posts/f05986bf/">DNS</a>  <a href="/posts/668530ca/">EDNS</a> <a href="/posts/1751943e/">DNSSEC</a> <a href="/posts/4b39445f/">DNS over HTTPS</a> 完整代码请看<a href="https://github.com/Asutorufa/yuhaiin/tree/master/net/dns">DNS</a></p><hr><p>DOH就比较简单了,因为DOH使用的请求数据和应答数据均为之前的DNS协议格式,包括DNS,EDNS,DNSSEC…当然是否支持EDNS,DNSSEC需要看DNS服务器的支持情况<br>DOH的最主要的区别是把DNS使用的UDP,换成了HTTPS,这样就能防止DNS污染了,而且可以使用DNSSEC加上ESNI来防止证书劫持,DOH的协议在<a href="https://tools.ietf.org/html/rfc8484">rfc8484</a>中有定义<br>DOH主要有两种方式HTTP的GET请求和POST的请求</p><h2 id="GET">GET</h2><p>GET请求需要使用BASE64对请求的字节数据进行序列化,然后作为参数传递,获取到的数据使用我们之前的解析进行解析就行了</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">get</span><span class="token punctuation">(</span>dReq <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> server <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> query <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>URLEncoding<span class="token punctuation">.</span><span class="token function">EncodeToString</span><span class="token punctuation">(</span>dReq<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"="</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> urls <span class="token operator">:=</span> <span class="token string">"https://"</span> <span class="token operator">+</span> server <span class="token operator">+</span> <span class="token string">"/dns-query?dns="</span> <span class="token operator">+</span> query res<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err <span class="token punctuation">&#125;</span> <span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> body<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err <span class="token punctuation">&#125;</span> <span class="token keyword">return</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="POST">POST</h2><p>POST并不需要进行序列化,直接把原始请求数据作为body就行了</p><span id="more"></span><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">post</span><span class="token punctuation">(</span>dReq <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> server <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> client <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Client<span class="token punctuation">&#123;</span>Timeout<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">&#125;</span> req<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewRequest</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>MethodPost<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>dReq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"DOH:post() newReq -> %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> urls<span class="token punctuation">,</span> err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">"//"</span> <span class="token operator">+</span> server<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"DOH:post() urlParse -> %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Scheme <span class="token operator">=</span> <span class="token string">"https"</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Host <span class="token operator">=</span> urls<span class="token punctuation">.</span>Host req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> urls<span class="token punctuation">.</span>Path <span class="token operator">+</span> <span class="token string">"/dns-query"</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"application/dns-message"</span><span class="token punctuation">)</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"content-type"</span><span class="token punctuation">,</span> <span class="token string">"application/dns-message"</span><span class="token punctuation">)</span> req<span class="token punctuation">.</span>ContentLength <span class="token operator">=</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>dReq<span class="token punctuation">)</span><span class="token punctuation">)</span> resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"DOH:post() req -> %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> body<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"DOH:post() readBody -> %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整代码请看开头</p><hr><blockquote><p><a href="https://tools.ietf.org/html/rfc8484">rfc8484</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个DNS系列现在有以下几篇文章&lt;br&gt;
&lt;a href=&quot;/posts/f05986bf/&quot;&gt;DNS&lt;/a&gt;  &lt;a href=&quot;/posts/668530ca/&quot;&gt;EDNS&lt;/a&gt; &lt;a href=&quot;/posts/1751943e/&quot;&gt;DNSSEC&lt;/a&gt; &lt;a href=&quot;/posts/4b39445f/&quot;&gt;DNS over HTTPS&lt;/a&gt; 完整代码请看&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/tree/master/net/dns&quot;&gt;DNS&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;DOH就比较简单了,因为DOH使用的请求数据和应答数据均为之前的DNS协议格式,包括DNS,EDNS,DNSSEC…当然是否支持EDNS,DNSSEC需要看DNS服务器的支持情况&lt;br&gt;
DOH的最主要的区别是把DNS使用的UDP,换成了HTTPS,这样就能防止DNS污染了,而且可以使用DNSSEC加上ESNI来防止证书劫持,DOH的协议在&lt;a href=&quot;https://tools.ietf.org/html/rfc8484&quot;&gt;rfc8484&lt;/a&gt;中有定义&lt;br&gt;
DOH主要有两种方式HTTP的GET请求和POST的请求&lt;/p&gt;
&lt;h2 id=&quot;GET&quot;&gt;GET&lt;/h2&gt;
&lt;p&gt;GET请求需要使用BASE64对请求的字节数据进行序列化,然后作为参数传递,获取到的数据使用我们之前的解析进行解析就行了&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-go&quot; data-language=&quot;go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dReq &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; server &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err &lt;span class=&quot;token builtin&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
 query &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; strings&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;base64&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;URLEncoding&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;EncodeToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dReq&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 urls &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; server &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/dns-query?dns=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; query
 res&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;urls&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err
 &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;defer&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ioutil&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ReadAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err
 &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;POST&quot;&gt;POST&lt;/h2&gt;
&lt;p&gt;POST并不需要进行序列化,直接把原始请求数据作为body就行了&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
    <category term="DNS" scheme="https://asutorufa.github.io/tags/DNS/"/>
    
    <category term="DOH" scheme="https://asutorufa.github.io/tags/DOH/"/>
    
  </entry>
  
  <entry>
    <title>DNSSEC</title>
    <link href="https://asutorufa.github.io/posts/1751943e/"/>
    <id>https://asutorufa.github.io/posts/1751943e/</id>
    <published>2020-06-23T00:21:33.000Z</published>
    <updated>2020-06-23T00:21:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个DNS系列现在有以下几篇文章<br><a href="/posts/f05986bf/">DNS</a>  <a href="/posts/668530ca/">EDNS</a> <a href="/posts/1751943e/">DNSSEC</a> <a href="/posts/4b39445f/">DNS over HTTPS</a> 完整代码请看<a href="https://github.com/Asutorufa/yuhaiin/tree/master/net/dns">DNS</a></p><hr><p>注意: 这里我只完成了请求字段,主要原因是因为我学习这些DNS协议是为了找到防止DNS污染的方法,而DNSSEC并不能,而且应答头比较复杂,可能还要了解ssl和tls的知识,所以这里我没有完成代码,想了解的请看<a href="https://tools.ietf.org/html/rfc3225">protocol change</a> <a href="https://tools.ietf.org/html/rfc4034">rfc4034</a> <a href="https://tools.ietf.org/html/rfc4035">rfc4035</a> <a href="https://tools.ietf.org/html/rfc4034#appendix-A.1">Algorithm</a></p><p>DNSSEC也是使用了EDNS,而且只需要改一个字段,就是之前提到Z,具体协议请看</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">          +0 (MSB)                +1 (LSB)   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+0: |   EXTENDED-RCODE      |       VERSION         |   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+2: |DO|                    Z                       |   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完成请求头</p><span id="more"></span><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> eDNSHeader <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> DnsHeader   <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> Name        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token builtin">byte</span> Type        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span> PayloadSize <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span> ExtendRCode <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token builtin">byte</span> EDNSVersion <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token builtin">byte</span> Z           <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span> Data        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">createDNSSEC</span><span class="token punctuation">(</span>domain <span class="token builtin">string</span><span class="token punctuation">,</span> reqType2 reqType<span class="token punctuation">)</span> <span class="token punctuation">(</span>header eDNSHeader<span class="token punctuation">,</span> b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//eDNSHeader := createEDNSReq(domain,reqType2,[]byte&#123;&#125;)</span> header <span class="token operator">=</span> eDNSHeader<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> header<span class="token punctuation">.</span>DnsHeader <span class="token operator">=</span> <span class="token function">creatRequest</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span> reqType2<span class="token punctuation">)</span> header<span class="token punctuation">.</span>Name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0b0</span> header<span class="token punctuation">.</span>Type <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00101001</span><span class="token punctuation">&#125;</span> header<span class="token punctuation">.</span>PayloadSize <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00010000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">//4096</span> header<span class="token punctuation">.</span>ExtendRCode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> header<span class="token punctuation">.</span>EDNSVersion <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> header<span class="token punctuation">.</span>Z <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b10000000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">// Do bit = 1</span> <span class="token keyword">return</span> header<span class="token punctuation">,</span> <span class="token function">createEDNSRequ</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>是不是很简单,再结合之前的EDNS就能完成完整的请求</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个DNS系列现在有以下几篇文章&lt;br&gt;
&lt;a href=&quot;/posts/f05986bf/&quot;&gt;DNS&lt;/a&gt;  &lt;a href=&quot;/posts/668530ca/&quot;&gt;EDNS&lt;/a&gt; &lt;a href=&quot;/posts/1751943e/&quot;&gt;DNSSEC&lt;/a&gt; &lt;a href=&quot;/posts/4b39445f/&quot;&gt;DNS over HTTPS&lt;/a&gt; 完整代码请看&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/tree/master/net/dns&quot;&gt;DNS&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;注意: 这里我只完成了请求字段,主要原因是因为我学习这些DNS协议是为了找到防止DNS污染的方法,而DNSSEC并不能,而且应答头比较复杂,可能还要了解ssl和tls的知识,所以这里我没有完成代码,想了解的请看&lt;a href=&quot;https://tools.ietf.org/html/rfc3225&quot;&gt;protocol change&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc4034&quot;&gt;rfc4034&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc4035&quot;&gt;rfc4035&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc4034#appendix-A.1&quot;&gt;Algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DNSSEC也是使用了EDNS,而且只需要改一个字段,就是之前提到Z,具体协议请看&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;          +0 (MSB)                +1 (LSB)
   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
0: |   EXTENDED-RCODE      |       VERSION         |
   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
2: |DO|                    Z                       |
   +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成请求头&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
    <category term="DNS" scheme="https://asutorufa.github.io/tags/DNS/"/>
    
    <category term="UDP" scheme="https://asutorufa.github.io/tags/UDP/"/>
    
    <category term="DNSSEC" scheme="https://asutorufa.github.io/tags/DNSSEC/"/>
    
  </entry>
  
  <entry>
    <title>EDNS</title>
    <link href="https://asutorufa.github.io/posts/668530ca/"/>
    <id>https://asutorufa.github.io/posts/668530ca/</id>
    <published>2020-06-22T23:09:49.000Z</published>
    <updated>2020-06-22T23:09:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个DNS系列现在有以下几篇文章<br><a href="/posts/f05986bf/">DNS</a>  <a href="/posts/668530ca/">EDNS</a> <a href="/posts/1751943e/">DNSSEC</a> <a href="/posts/4b39445f/">DNS over HTTPS</a> 完整代码请看<a href="https://github.com/Asutorufa/yuhaiin/tree/master/net/dns">DNS</a></p><h2 id="EDNS">EDNS</h2><p>上一篇我们写了DNS,EDNS就是DNS的功能扩充.<br>上一篇的DNS里头部有ARCOUNT的计数,EDNS就包含在那个里面,EDNS发送的请求在请求头之后的Additional中,应答在Answer和Authoritative之后,我们可看以下图,跟清晰了吧</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+---------------------+|        Header       |+---------------------+|       Question      | the question for the name server+---------------------+|        Answer       | RRs answering the question+---------------------+|      Authority      | RRs pointing toward an authority+---------------------+|      Additional     | RRs holding additional information+---------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="协议格式">协议格式</h2><p>具体协议内容请看<a href="https://tools.ietf.org/html/rfc2671">rfc2671</a>,<a href="https://tools.ietf.org/html/rfc7871">rfc7871</a></p><span id="more"></span><p>Additinoal包含以下部分</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">     Field Name   Field Type     Description     <span class="token hr punctuation">------------------------------------------------------</span>     NAME         domain name    empty (root domain)     TYPE         u_int16_t      OPT     CLASS        u_int16_t      sender's UDP payload size     TTL          u_int32_t      extended RCODE and flags     RDLEN        u_int16_t      describes RDATA     RDATA        octet stream   &#123;attribute,value&#125; pairsTTL中的东西并不是我们之前说到的TTL,这里的TTL只是一个名称,没有具体的含义,TTL中包含以下内容<span class="token code keyword">                      +0 (MSB)                            +1 (LSB)      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</span>   0: |         EXTENDED-RCODE        |            VERSION            |      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+   2: |                               Z                               |      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+   EXTENDED-RCODE  Forms upper 8 bits of extended 12-bit RCODE.  Note                   that EXTENDED-RCODE value "0" indicates that an                   unextended RCODE is in use (values "0" through "15").   VERSION         EDNS VERSION   Z               Set to zero by senders and ignored by receivers,                   unless modified in a subsequent specification.这里Z我们之后会用到(不是这一篇文章)RDATA中就是对各种扩充功能的请求字段,而每个不同的功能又有着不同的请求协议RDATA的格式如下<span class="token code keyword">                +0 (MSB)                            +1 (LSB)     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</span>  0: |                          OPTION-CODE                          |     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+  2: |                         OPTION-LENGTH                         |     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+  4: |                                                               |     /                          OPTION-DATA                          /     /                                                               /     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+   OPTION-CODE    (Assigned by IANA.)   OPTION-LENGTH  Size (in octets) of OPTION-DATA.   OPTION-DATA    Varies per OPTION-CODE.如SubNet中的请求字段就包含在其中RDATA中,所以我们要先完成SubNet的字节数组才能生成一个Additional,因为请求中需要数据的长度RDLEN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为EDNS中扩展的协议非常多,这里我们就以常用的SubNet为例吧,更多其他类型请看<a href="https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11">dns-parameters</a><br>因为我们以SubNet为例,所以先要了解下SubNet的具体协议格式</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">             +0 (MSB)                            +1 (LSB)   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+0: |                          OPTION-CODE                          |   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+2: |                         OPTION-LENGTH                         |   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+4: |                            FAMILY                             |   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+6: |     SOURCE PREFIX-LENGTH      |     SCOPE PREFIX-LENGTH       |   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+8: |                           ADDRESS...                          /   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+o  SOURCE PREFIX-LENGTH, an unsigned octet representing the leftmost   number of significant bits of ADDRESS to be used for the lookup.   In responses, it mirrors the same value as in the queries.o  SCOPE PREFIX-LENGTH, an unsigned octet representing the leftmost   number of significant bits of ADDRESS that the response covers.   In queries, it MUST be set to 0.o  ADDRESS, variable number of octets, contains either an IPv4 or   IPv6 address, depending on FAMILY, which MUST be truncated to the   number of bits indicated by the SOURCE PREFIX-LENGTH field,   padding with 0 bits to pad to the end of the last octet needed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里前面三个字段就是我们之前RDATA中规定的协议格式,后面就是SubNet的格式<br>SubNet的OPTION-CODE为8,<br>OPTION-LENGTH就是完成之后的长度<br>FAMILY表示设置的IP的类型 IPv4为1,IPv6为2 更多类型请看<a href="https://www.iana.org/assignments/address-family-numbers/address-family-numbers.xhtml">address-family-numbers</a><br>SOURCE PREFIX-LENGTH为查询中位置偏移(就是CIDR中的mask),具体请了解CIDR,是计算机网络很基础的知识<br>SCOPE PREFIX-LENGTH是响应返回的位置偏移,在查询中应为0<br>ADDRESS就是设置的SubNet的IP地址,依据上面的FAMILY</p><h2 id="请求">请求</h2><p>看过具体协议格式规定后,我们就可以来完成代码了</p><p>先定义以下各种请求的OPTION-CODE</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> <span class="token punctuation">(</span>  Reserved         <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">//0</span>  LLQ              <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000001</span><span class="token punctuation">&#125;</span> <span class="token comment">//1 Optional</span>  UL               <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000010</span><span class="token punctuation">&#125;</span> <span class="token comment">//2 On-hold</span>  NSID             <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000011</span><span class="token punctuation">&#125;</span> <span class="token comment">//3 Standard</span>  Reserved2        <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000100</span><span class="token punctuation">&#125;</span> <span class="token comment">//4</span>  DAU              <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000101</span><span class="token punctuation">&#125;</span> <span class="token comment">//5 Standard</span>  DHU              <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000110</span><span class="token punctuation">&#125;</span> <span class="token comment">//6 Standard</span>  N3U              <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000111</span><span class="token punctuation">&#125;</span> <span class="token comment">//7 Standard</span>  EdnsClientSubnet <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001000</span><span class="token punctuation">&#125;</span> <span class="token comment">//8 Optional</span>  EDNSEXPIRE       <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001001</span><span class="token punctuation">&#125;</span> <span class="token comment">//9 Optional</span>  COOKIE           <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001010</span><span class="token punctuation">&#125;</span> <span class="token comment">//10 Standard</span>  TcpKeepalive     <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001011</span><span class="token punctuation">&#125;</span> <span class="token comment">//11 Standard</span>  Padding          <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001100</span><span class="token punctuation">&#125;</span> <span class="token comment">//12 Standard</span>  CHAIN            <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001101</span><span class="token punctuation">&#125;</span> <span class="token comment">//13 Standard</span>  KEYTAG           <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001110</span><span class="token punctuation">&#125;</span> <span class="token comment">//14 Optional</span>  ExtendedDNSError <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001111</span><span class="token punctuation">&#125;</span> <span class="token comment">//15 Standard</span>  EDNSClientTag    <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00010000</span><span class="token punctuation">&#125;</span> <span class="token comment">//16 Optional</span>  EDNSServerTag    <span class="token operator">=</span> EDNSOPT<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00010001</span><span class="token punctuation">&#125;</span> <span class="token comment">//17 Optional</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后完成SubNet的</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">createEdnsClientSubnet</span><span class="token punctuation">(</span>ip net<span class="token punctuation">.</span>IP<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">&#123;</span>  optionCode <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>EdnsClientSubnet<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> EdnsClientSubnet<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>  family <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000001</span><span class="token punctuation">&#125;</span> <span class="token comment">// 1:Ipv4 2:IPv6 https://www.iana.org/assignments/address-family-numbers/address-family-numbers.xhtml</span>  sourceNetmask <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00100000</span><span class="token punctuation">&#125;</span>      <span class="token comment">// 32</span>  scopeNetmask <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">&#125;</span>       <span class="token comment">//0 In queries, it MUST be set to 0.</span>  subnet <span class="token operator">:=</span> ip<span class="token punctuation">.</span><span class="token function">To4</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                       <span class="token comment">//depending family</span>  <span class="token keyword">if</span> subnet <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    subnet <span class="token operator">=</span> ip<span class="token punctuation">.</span><span class="token function">To16</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    family <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000010</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  optionData <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>family<span class="token punctuation">,</span> sourceNetmask<span class="token punctuation">,</span> scopeNetmask<span class="token punctuation">,</span> subnet<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  optionLength <span class="token operator">:=</span> <span class="token function">getLength</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>optionData<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> bytes<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>optionCode<span class="token punctuation">,</span> optionLength<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> optionData<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再完成Additional,加上完整的请求头,注意这里我们要修改一下请求头中ArCount的大小</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">createEDNSReq</span><span class="token punctuation">(</span>domain <span class="token builtin">string</span><span class="token punctuation">,</span> reqType2 reqType<span class="token punctuation">,</span> eDNS <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">&#123;</span>  normalReq <span class="token operator">:=</span> <span class="token function">creatRequest</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span> reqType2<span class="token punctuation">)</span>  normalReq<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0b00000000</span>  normalReq<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0b00000001</span>  name <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">&#125;</span>  typeR <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00101001</span><span class="token punctuation">&#125;</span>       <span class="token comment">//41</span>  payloadSize <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00010000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">//4096</span>  extendRcode <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">&#125;</span>  eDNSVersion <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">&#125;</span>  z <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span>  <span class="token keyword">var</span> dataLength <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span>  <span class="token keyword">if</span> eDNS <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    dataLength <span class="token operator">=</span> <span class="token function">getLength</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>eDNS<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> bytes<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>normalReq<span class="token punctuation">,</span> name<span class="token punctuation">,</span> typeR<span class="token punctuation">,</span> payloadSize<span class="token punctuation">,</span> extendRcode<span class="token punctuation">,</span> eDNSVersion<span class="token punctuation">,</span> z<span class="token punctuation">,</span> dataLength<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> eDNS<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="应答">应答</h2><p>我们先分析一下应答的解析顺序,就跟最开始的一样</p><ul><li>Header</li><li>Answer</li><li>Authority</li><li>Additional</li></ul><p>Header和Answer的解析我们上一篇已经完成了,这里需要完成Authority和Additional</p><p>因为我们不需要Authority内的具体内容,这里我们就直接获取到Authority之后的数据就行了</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">resolveAuthoritative</span><span class="token punctuation">(</span>c <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> nsCount <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>left <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> nsCount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>    nsCount<span class="token operator">--</span>    <span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// type</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// class</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// ttl</span>    dataLength <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// data length</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span>dataLength<span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> c<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Additional, SubNet</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">resolveAdditional</span><span class="token punctuation">(</span>b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> arCount <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> arCount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>    arCount<span class="token operator">--</span>    <span class="token comment">//name := b[:1]</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    typeE <span class="token operator">:=</span> b<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment">//payLoadSize := b[:2]</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment">//rCode := b[:1]</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment">//version := b[:1]</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment">//z := b[:2]</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    dataLength <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">int</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment">//log.Println(name, typeE, payLoadSize, rCode, version, z, dataLength)</span>    <span class="token keyword">if</span> typeE<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> typeE<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">41</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//optData := b[:dataLength]</span>      b <span class="token operator">=</span> b<span class="token punctuation">[</span>dataLength<span class="token punctuation">:</span><span class="token punctuation">]</span>      <span class="token keyword">continue</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> dataLength <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">continue</span>    <span class="token punctuation">&#125;</span>    optCode <span class="token operator">:=</span> EDNSOPT<span class="token punctuation">&#123;</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    optionLength <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">int</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">switch</span> optCode <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> EdnsClientSubnet<span class="token punctuation">:</span>      <span class="token comment">//family := b[:2]</span>      b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>      <span class="token comment">//sourceNetmask := b[:1]</span>      <span class="token comment">//log.Println("sourceNetmask", sourceNetmask)</span>      b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>      <span class="token comment">//scopeNetmask := b[:1]</span>      <span class="token comment">//log.Println("scopeNetmask", scopeNetmask)</span>      b <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>      <span class="token comment">// Subnet IP</span>      <span class="token comment">//if family[0] == 0 &amp;&amp; family[1] == 1 &#123;</span>      <span class="token comment">//log.Println(b[:4])</span>      <span class="token comment">//&#125;</span>      <span class="token comment">//if family[0] == 0 &amp;&amp; family[1] == 2 &#123;</span>      <span class="token comment">//log.Println(b[:16])</span>      <span class="token comment">//&#125;</span>      b <span class="token operator">=</span> b<span class="token punctuation">[</span>optionLength<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>      <span class="token comment">//log.Println("opt data:", b[:optionLength])</span>      b <span class="token operator">=</span> b<span class="token punctuation">[</span>optionLength<span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后需要在之前的DNS分析加上这两个函数,完整代码请看开头</p><hr><blockquote><p><a href="https://tools.ietf.org/html/rfc2671">rfc2671</a><br><a href="https://tools.ietf.org/html/rfc7871">rfc7871</a><br><a href="https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11">dns-parameters</a><br><a href="https://www.iana.org/assignments/address-family-numbers/address-family-numbers.xhtml">address-family-numbers</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个DNS系列现在有以下几篇文章&lt;br&gt;
&lt;a href=&quot;/posts/f05986bf/&quot;&gt;DNS&lt;/a&gt;  &lt;a href=&quot;/posts/668530ca/&quot;&gt;EDNS&lt;/a&gt; &lt;a href=&quot;/posts/1751943e/&quot;&gt;DNSSEC&lt;/a&gt; &lt;a href=&quot;/posts/4b39445f/&quot;&gt;DNS over HTTPS&lt;/a&gt; 完整代码请看&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/tree/master/net/dns&quot;&gt;DNS&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;EDNS&quot;&gt;EDNS&lt;/h2&gt;
&lt;p&gt;上一篇我们写了DNS,EDNS就是DNS的功能扩充.&lt;br&gt;
上一篇的DNS里头部有ARCOUNT的计数,EDNS就包含在那个里面,EDNS发送的请求在请求头之后的Additional中,应答在Answer和Authoritative之后,我们可看以下图,跟清晰了吧&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;+---------------------+
|        Header       |
+---------------------+
|       Question      | the question for the name server
+---------------------+
|        Answer       | RRs answering the question
+---------------------+
|      Authority      | RRs pointing toward an authority
+---------------------+
|      Additional     | RRs holding additional information
+---------------------+&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;协议格式&quot;&gt;协议格式&lt;/h2&gt;
&lt;p&gt;具体协议内容请看&lt;a href=&quot;https://tools.ietf.org/html/rfc2671&quot;&gt;rfc2671&lt;/a&gt;,&lt;a href=&quot;https://tools.ietf.org/html/rfc7871&quot;&gt;rfc7871&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
    <category term="DNS" scheme="https://asutorufa.github.io/tags/DNS/"/>
    
    <category term="UDP" scheme="https://asutorufa.github.io/tags/UDP/"/>
    
    <category term="EDNS" scheme="https://asutorufa.github.io/tags/EDNS/"/>
    
  </entry>
  
  <entry>
    <title>HP Laptop linux 下intel&amp;amd双显卡</title>
    <link href="https://asutorufa.github.io/posts/34615c2d/"/>
    <id>https://asutorufa.github.io/posts/34615c2d/</id>
    <published>2020-06-05T15:12:33.000Z</published>
    <updated>2020-06-05T15:12:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看<code>双显卡</code>切换情况，正常情况下如果没有在用独显应该显示是<code>DynOff</code>，但是我这里即使是不开桌面也是<code>DynPwr</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span> ~ <span class="token punctuation">]</span> <span class="token function">cat</span> /sys/kernel/debug/vgaswitcheroo/switch<span class="token number">0</span>:DIS-Audio: :DynPwr:0000:01:00.1<span class="token number">1</span>:IGD:+:Pwr:0000:00:02.0<span class="token number">2</span>:DIS: :DynPwr:0000:01:00.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>查看<code>dmesg</code>找到</p><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span class="token punctuation">[</span>    <span class="token number">3.495606</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>drm<span class="token punctuation">]</span> amdgpu kernel modesetting enabled<span class="token punctuation">.</span><span class="token punctuation">[</span>    <span class="token number">3.495628</span><span class="token punctuation">]</span> <span class="token property">vga_switcheroo:</span> detected switching method \_SB_<span class="token punctuation">.</span>PCI0<span class="token punctuation">.</span>GFX0<span class="token punctuation">.</span>ATPX handle<span class="token punctuation">[</span>    <span class="token number">3.495741</span><span class="token punctuation">]</span> ATPX version <span class="token number">1</span><span class="token punctuation">,</span> functions <span class="token number">0x00000033</span><span class="token punctuation">[</span>    <span class="token number">3.495873</span><span class="token punctuation">]</span> ATPX Hybrid Graphics<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>找到了调用的方法，网上搜了一圈都没有使用方法，然后使用<code>acpi_call</code>尝试了几个参数，最后找到</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"\_SB_.PCI0.GFX0.ATPX 2 0"</span> <span class="token operator">></span>  /proc/acpi/call</code></pre><p>嗯，确实有用，但是实在是太暴力了，直接把整个显卡移除，可以看一下日志<span id="more"></span></p><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span class="token punctuation">[</span>drm<span class="token operator">:</span>amdgpu_pci_remove <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token level error important">ERROR</span><span class="token operator">*</span> Hotplug removal is not supported<span class="token punctuation">[</span><span class="token number">11499.551786</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>drm<span class="token punctuation">]</span> <span class="token property">amdgpu:</span> finishing device<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">11499.554123</span><span class="token punctuation">]</span> CP HQD IQ timer status time out<span class="token punctuation">[</span><span class="token number">11499.554442</span><span class="token punctuation">]</span> CP HQD dequeue request time out<span class="token punctuation">[</span><span class="token number">11503.557688</span><span class="token punctuation">]</span> cp queue preemption time out<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">11503.557729</span><span class="token punctuation">]</span> Creating topology SYSFS entries<span class="token punctuation">[</span><span class="token number">11503.557800</span><span class="token punctuation">]</span> <span class="token property">amdgpu:</span> <span class="token punctuation">[</span>powerplay<span class="token punctuation">]</span>                    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                failed to send message <span class="token number">84</span> ret is <span class="token number">65535</span> <span class="token punctuation">[</span><span class="token number">11503.793030</span><span class="token punctuation">]</span> <span class="token property">amdgpu:</span> <span class="token punctuation">[</span>powerplay<span class="token punctuation">]</span> Failed to force to switch arbf0<span class="token operator">!</span><span class="token punctuation">[</span><span class="token number">11503.928787</span><span class="token punctuation">]</span> amdgpu <span class="token number">0000</span><span class="token operator">:</span><span class="token number">01</span><span class="token operator">:</span><span class="token number">00.0</span><span class="token operator">:</span> <span class="token punctuation">[</span>drm<span class="token operator">:</span>amdgpu_ring_test_helper <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token level error important">ERROR</span><span class="token operator">*</span> ring kiq_2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>0 test failed <span class="token operator">(</span><span class="token operator">-</span><span class="token number">110</span><span class="token operator">)</span><span class="token punctuation">[</span><span class="token number">11503.928865</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>drm<span class="token operator">:</span>gfx_v8_0_hw_fini <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token level error important">ERROR</span><span class="token operator">*</span> KCQ disable failed<span class="token punctuation">[</span><span class="token number">11504.164622</span><span class="token punctuation">]</span> cp is busy<span class="token punctuation">,</span> skip halt cp<span class="token punctuation">[</span><span class="token number">11504.282335</span><span class="token punctuation">]</span> rlc is busy<span class="token punctuation">,</span> skip halt rlc<span class="token punctuation">[</span><span class="token number">11504.421048</span><span class="token punctuation">]</span> <span class="token separator comment">------------</span><span class="token punctuation">[</span> cut here <span class="token punctuation">]</span><span class="token separator comment">------------</span><span class="token punctuation">[</span><span class="token number">11504.421115</span><span class="token punctuation">]</span> <span class="token level warning important">WARNING</span><span class="token operator">:</span> CPU<span class="token operator">:</span> <span class="token number">3</span> PID<span class="token operator">:</span> <span class="token number">167022</span> at drivers<span class="token operator">/</span>gpu<span class="token operator">/</span>drm<span class="token operator">/</span>amd<span class="token operator">/</span>amdgpu<span class="token operator">/</span>amdgpu_vm<span class="token punctuation">.</span>c<span class="token operator">:</span><span class="token number">3170</span> amdgpu_vm_manager_fini<span class="token operator">+</span><span class="token number">0x1e</span><span class="token operator">/</span><span class="token number">0x50</span> <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421115</span><span class="token punctuation">]</span> <span class="token property">Modules linked in:</span> acpi_call<span class="token operator">(</span>OE<span class="token operator">)</span> ccm rfcomm cmac algif_hash algif_skcipher af_alg bnep btusb btrtl btbcm btintel bluetooth snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio hid_generic usbhid hid ecdh_generic ecc mousedev amdgpu uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common x86_pkg_temp_thermal intel_powerclamp coretemp videodev kvm_intel mc kvm nls_iso8859_1 nls_cp437 vfat fat i915 iwlmvm fuse irqbypass mac80211 crct10dif_pclmul gpu_sched crc32_pclmul snd_hda_codec_hdmi libarc4 ghash_clmulni_intel snd_hda_intel ttm hp_wmi snd_intel_dspcfg i2c_algo_bit snd_hda_codec mei_hdcp intel_rapl_msr wmi_bmof sparse_keymap iTCO_wdt iTCO_vendor_support aesni_intel crypto_simd joydev iwlwifi cryptd snd_hda_core glue_helper snd_hwdep intel_cstate snd_pcm drm_kms_helper intel_uncore intel_rapl_perf snd_timer cfg80211 input_leds psmouse pcspkr snd i2c_i801 cec r8169 rc_core intel_gtt realtek syscopyarea sysfillrect processor_thermal_device sysimgblt mei_me<span class="token punctuation">[</span><span class="token number">11504.421137</span><span class="token punctuation">]</span>  libphy intel_rapl_common rfkill int340x_thermal_zone soundcore intel_pch_thermal fb_sys_fops intel_soc_dts_iosf mei wmi battery hp_accel evdev lis3lv02d mac_hid hp_wireless int3400_thermal acpi_thermal_rel ac vboxnetflt<span class="token operator">(</span>OE<span class="token operator">)</span> vboxnetadp<span class="token operator">(</span>OE<span class="token operator">)</span> drm vboxdrv<span class="token operator">(</span>OE<span class="token operator">)</span> crypto_user agpgart ip_tables x_tables ext4 crc32c_generic crc16 mbcache jbd2 rtsx_pci_sdmmc serio_raw mmc_core atkbd libps2 crc32c_intel xhci_pci xhci_hcd rtsx_pci i8042 serio<span class="token punctuation">[</span><span class="token number">11504.421149</span><span class="token punctuation">]</span> <span class="token property">CPU:</span> <span class="token number">3</span> PID<span class="token operator">:</span> <span class="token number">167022</span> Comm<span class="token operator">:</span> kworker<span class="token operator">/</span>u8<span class="token operator">:</span><span class="token number">0</span> Tainted<span class="token operator">:</span> G        W  OE     <span class="token number">5.6.15</span><span class="token operator">-</span>arch1<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">#</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">11504.421150</span><span class="token punctuation">]</span> <span class="token property">Hardware name:</span> HP OMEN by HP Laptop<span class="token operator">/</span><span class="token number">82EA</span><span class="token punctuation">,</span> BIOS F<span class="token punctuation">.</span><span class="token date number">53 12/12</span><span class="token operator">/</span><span class="token number">2019</span><span class="token punctuation">[</span><span class="token number">11504.421153</span><span class="token punctuation">]</span> <span class="token property">Workqueue:</span> kacpi_hotplug acpi_hotplug_work_fn<span class="token punctuation">[</span><span class="token number">11504.421221</span><span class="token punctuation">]</span> <span class="token property">RIP:</span> <span class="token number">0010</span><span class="token operator">:</span>amdgpu_vm_manager_fini<span class="token operator">+</span><span class="token number">0x1e</span><span class="token operator">/</span><span class="token number">0x50</span> <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421222</span><span class="token punctuation">]</span> <span class="token property">Code:</span> c7 <span class="token number">83</span> a0 <span class="token number">4e</span> <span class="token date number">00 00 00</span> <span class="token date number">00 00 00</span> eb <span class="token number">87</span> <span class="token number">0f</span> <span class="token number">1f</span> <span class="token date number">44 00 00</span> <span class="token date number">55 48 89</span> fd <span class="token number">48</span> <span class="token number">81</span> c7 a8 <span class="token number">4e</span> <span class="token date number">00 00 48</span> <span class="token number">83</span> ec <span class="token date number">08 48 83</span> bd b0 <span class="token number">4e</span> <span class="token date number">00 00 00</span> <span class="token number">74</span> <span class="token number">14</span> <span class="token operator">&lt;</span><span class="token number">0f</span><span class="token operator">></span> <span class="token number">0b</span> e8 <span class="token number">4b</span> <span class="token number">3d</span> a3 d5 <span class="token number">48</span> <span class="token number">89</span> ef <span class="token number">48</span> <span class="token number">83</span> c4 <span class="token number">08</span> <span class="token number">5d</span> e9 ce <span class="token date number">96 00 00</span> <span class="token number">31</span> f6<span class="token punctuation">[</span><span class="token number">11504.421223</span><span class="token punctuation">]</span> <span class="token property">RSP:</span> <span class="token number">0018</span><span class="token operator">:</span>ffffb45703ae3c90 EFLAGS<span class="token operator">:</span> <span class="token number">00010286</span><span class="token punctuation">[</span><span class="token number">11504.421225</span><span class="token punctuation">]</span> <span class="token property">RAX:</span> <span class="token number">0000000000000000</span> RBX<span class="token operator">:</span> ffff8c0f0cdc0000 RCX<span class="token operator">:</span> <span class="token number">0000000000000000</span><span class="token punctuation">[</span><span class="token number">11504.421225</span><span class="token punctuation">]</span> <span class="token property">RDX:</span> <span class="token property">ffff8c0f1c718000 RSI:</span> <span class="token property">ffff8c0f0cb53000 RDI:</span> ffff8c0f0cdc4ea8<span class="token punctuation">[</span><span class="token number">11504.421226</span><span class="token punctuation">]</span> <span class="token property">RBP:</span> <span class="token property">ffff8c0f0cdc0000 R08:</span> <span class="token number">0000000000000040</span> R09<span class="token operator">:</span> <span class="token number">0000000000000000</span><span class="token punctuation">[</span><span class="token number">11504.421227</span><span class="token punctuation">]</span> <span class="token property">R10:</span> <span class="token number">0000000000000000</span> R11<span class="token operator">:</span> ffff8c0f08056438 R12<span class="token operator">:</span> <span class="token number">0000000000000001</span><span class="token punctuation">[</span><span class="token number">11504.421228</span><span class="token punctuation">]</span> <span class="token property">R13:</span> <span class="token property">ffff8c0f0cdd5020 R14:</span> <span class="token property">ffff8c0f1c0de800 R15:</span> ffff8c0f1c09f740<span class="token punctuation">[</span><span class="token number">11504.421229</span><span class="token punctuation">]</span> <span class="token property">FS:</span>  <span class="token number">0000000000000000</span><span class="token operator">(</span><span class="token number">0000</span><span class="token operator">)</span> GS<span class="token operator">:</span>ffff8c0f1ed80000<span class="token operator">(</span><span class="token number">0000</span><span class="token operator">)</span> knlGS<span class="token operator">:</span><span class="token number">0000000000000000</span><span class="token punctuation">[</span><span class="token number">11504.421230</span><span class="token punctuation">]</span> <span class="token property">CS:</span>  <span class="token number">0010</span> DS<span class="token operator">:</span> <span class="token number">0000</span> ES<span class="token operator">:</span> <span class="token number">0000</span> CR0<span class="token operator">:</span> <span class="token number">0000000080050033</span><span class="token punctuation">[</span><span class="token number">11504.421230</span><span class="token punctuation">]</span> <span class="token property">CR2:</span> <span class="token number">00007f5a4f135fd8</span> CR3<span class="token operator">:</span> <span class="token number">00000001a020a001</span> CR4<span class="token operator">:</span> <span class="token number">00000000003606e0</span><span class="token punctuation">[</span><span class="token number">11504.421231</span><span class="token punctuation">]</span> <span class="token property">Call Trace:</span><span class="token punctuation">[</span><span class="token number">11504.421300</span><span class="token punctuation">]</span>  gmc_v8_0_sw_fini<span class="token operator">+</span><span class="token number">0x16</span><span class="token operator">/</span><span class="token number">0x60</span> <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421386</span><span class="token punctuation">]</span>  amdgpu_device_fini<span class="token operator">+</span><span class="token number">0x255</span><span class="token operator">/</span><span class="token number">0x46f</span> <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421446</span><span class="token punctuation">]</span>  amdgpu_driver_unload_kms<span class="token operator">+</span><span class="token number">0x47</span><span class="token operator">/</span><span class="token number">0x90</span> <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421463</span><span class="token punctuation">]</span>  drm_dev_unregister<span class="token operator">+</span><span class="token number">0x4b</span><span class="token operator">/</span><span class="token number">0xb0</span> <span class="token punctuation">[</span>drm<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421521</span><span class="token punctuation">]</span>  amdgpu_pci_remove<span class="token operator">+</span><span class="token number">0x2e</span><span class="token operator">/</span><span class="token number">0x50</span> <span class="token punctuation">[</span>amdgpu<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11504.421525</span><span class="token punctuation">]</span>  pci_device_remove<span class="token operator">+</span><span class="token number">0x3b</span><span class="token operator">/</span><span class="token number">0xa0</span><span class="token punctuation">[</span><span class="token number">11504.421528</span><span class="token punctuation">]</span>  __device_release_driver<span class="token operator">+</span><span class="token number">0x15c</span><span class="token operator">/</span><span class="token number">0x210</span><span class="token punctuation">[</span><span class="token number">11504.421529</span><span class="token punctuation">]</span>  device_release_driver<span class="token operator">+</span><span class="token number">0x24</span><span class="token operator">/</span><span class="token number">0x30</span><span class="token punctuation">[</span><span class="token number">11504.421532</span><span class="token punctuation">]</span>  pci_stop_bus_device<span class="token operator">+</span><span class="token number">0x68</span><span class="token operator">/</span><span class="token number">0x90</span><span class="token punctuation">[</span><span class="token number">11504.421534</span><span class="token punctuation">]</span>  pci_stop_and_remove_bus_device<span class="token operator">+</span><span class="token number">0xe</span><span class="token operator">/</span><span class="token number">0x20</span><span class="token punctuation">[</span><span class="token number">11504.421536</span><span class="token punctuation">]</span>  disable_slot<span class="token operator">+</span><span class="token number">0x49</span><span class="token operator">/</span><span class="token number">0x90</span><span class="token punctuation">[</span><span class="token number">11504.421538</span><span class="token punctuation">]</span>  acpiphp_check_bridge<span class="token punctuation">.</span>part<span class="token punctuation">.</span>0<span class="token operator">+</span><span class="token number">0xba</span><span class="token operator">/</span><span class="token number">0x140</span><span class="token punctuation">[</span><span class="token number">11504.421540</span><span class="token punctuation">]</span>  acpiphp_hotplug_notify<span class="token operator">+</span><span class="token number">0x170</span><span class="token operator">/</span><span class="token number">0x280</span><span class="token punctuation">[</span><span class="token number">11504.421541</span><span class="token punctuation">]</span>  <span class="token operator">?</span> acpiphp_post_dock_fixup<span class="token operator">+</span><span class="token number">0xe0</span><span class="token operator">/</span><span class="token number">0xe0</span><span class="token punctuation">[</span><span class="token number">11504.421544</span><span class="token punctuation">]</span>  acpi_device_hotplug<span class="token operator">+</span><span class="token number">0x9e</span><span class="token operator">/</span><span class="token number">0x410</span><span class="token punctuation">[</span><span class="token number">11504.421547</span><span class="token punctuation">]</span>  acpi_hotplug_work_fn<span class="token operator">+</span><span class="token number">0x3d</span><span class="token operator">/</span><span class="token number">0x50</span><span class="token punctuation">[</span><span class="token number">11504.421549</span><span class="token punctuation">]</span>  process_one_work<span class="token operator">+</span><span class="token number">0x1da</span><span class="token operator">/</span><span class="token number">0x3d0</span><span class="token punctuation">[</span><span class="token number">11504.421551</span><span class="token punctuation">]</span>  worker_thread<span class="token operator">+</span><span class="token number">0x4d</span><span class="token operator">/</span><span class="token number">0x3e0</span><span class="token punctuation">[</span><span class="token number">11504.421553</span><span class="token punctuation">]</span>  <span class="token operator">?</span> rescuer_thread<span class="token operator">+</span><span class="token number">0x3f0</span><span class="token operator">/</span><span class="token number">0x3f0</span><span class="token punctuation">[</span><span class="token number">11504.421555</span><span class="token punctuation">]</span>  kthread<span class="token operator">+</span><span class="token number">0x117</span><span class="token operator">/</span><span class="token number">0x130</span><span class="token punctuation">[</span><span class="token number">11504.421556</span><span class="token punctuation">]</span>  <span class="token operator">?</span> __kthread_bind_mask<span class="token operator">+</span><span class="token number">0x60</span><span class="token operator">/</span><span class="token number">0x60</span><span class="token punctuation">[</span><span class="token number">11504.421559</span><span class="token punctuation">]</span>  ret_from_fork<span class="token operator">+</span><span class="token number">0x35</span><span class="token operator">/</span><span class="token number">0x40</span><span class="token punctuation">[</span><span class="token number">11504.421562</span><span class="token punctuation">]</span> <span class="token separator comment">---</span><span class="token punctuation">[</span> end trace <span class="token number">9fc85d768333e4aa</span> <span class="token punctuation">]</span><span class="token separator comment">---</span><span class="token punctuation">[</span><span class="token number">11504.434382</span><span class="token punctuation">]</span> Move buffer fallback to memcpy unavailable<span class="token punctuation">[</span><span class="token number">11504.434384</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>TTM<span class="token punctuation">]</span> Buffer eviction failed<span class="token punctuation">[</span><span class="token number">11504.434384</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>TTM<span class="token punctuation">]</span> Cleanup eviction failed<span class="token punctuation">[</span><span class="token number">11504.434402</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>TTM<span class="token punctuation">]</span> Finalizing pool allocator<span class="token punctuation">[</span><span class="token number">11504.434881</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>TTM<span class="token punctuation">]</span> Finalizing DMA pool allocator<span class="token punctuation">[</span><span class="token number">11504.434971</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>TTM<span class="token punctuation">]</span> Zone  kernel<span class="token operator">:</span> Used memory at exit<span class="token operator">:</span> <span class="token number">4312</span> KiB<span class="token punctuation">[</span><span class="token number">11504.434974</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>TTM<span class="token punctuation">]</span> Zone   dma32<span class="token operator">:</span> Used memory at exit<span class="token operator">:</span> <span class="token number">0</span> KiB<span class="token punctuation">[</span><span class="token number">11504.434976</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>drm<span class="token punctuation">]</span> <span class="token property">amdgpu:</span> ttm finalized<span class="token punctuation">[</span><span class="token number">11504.434989</span><span class="token punctuation">]</span> <span class="token property">vga_switcheroo:</span> disabled<span class="token punctuation">[</span><span class="token number">11504.435496</span><span class="token punctuation">]</span> i915 <span class="token number">0000</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">02.0</span><span class="token operator">:</span> vgaarb<span class="token operator">:</span> changed VGA decodes<span class="token operator">:</span> olddecodes<span class="token operator">=</span>none<span class="token punctuation">,</span>decodes<span class="token operator">=</span>io<span class="token operator">+</span>mem<span class="token operator">:</span>owns<span class="token operator">=</span>io<span class="token operator">+</span>mem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以买笔记本一定要买有<code>linux</code>认证的电脑，即使不是也尽量不要买双显卡了，我买的这个显卡基本闲置，我也不喜欢打游戏，反而耗电。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;查看&lt;code&gt;双显卡&lt;/code&gt;切换情况，正常情况下如果没有在用独显应该显示是&lt;code&gt;DynOff&lt;/code&gt;，但是我这里即使是不开桌面也是&lt;code&gt;DynPwr&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; ~ &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; /sys/kernel/debug/vgaswitcheroo/switch
&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;:DIS-Audio: :DynPwr:0000:01:00.1
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:IGD:+:Pwr:0000:00:02.0
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;:DIS: :DynPwr:0000:01:00.0&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看&lt;code&gt;dmesg&lt;/code&gt;找到&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-log&quot; data-language=&quot;log&quot;&gt;&lt;code class=&quot;language-log&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;token number&quot;&gt;3.495606&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;drm&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; amdgpu kernel modesetting enabled&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;token number&quot;&gt;3.495628&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;vga_switcheroo:&lt;/span&gt; detected switching method &#92;_SB_&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PCI0&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;GFX0&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ATPX handle
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;token number&quot;&gt;3.495741&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; ATPX version &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; functions &lt;span class=&quot;token number&quot;&gt;0x00000033&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;    &lt;span class=&quot;token number&quot;&gt;3.495873&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; ATPX Hybrid Graphics&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;找到了调用的方法，网上搜了一圈都没有使用方法，然后使用&lt;code&gt;acpi_call&lt;/code&gt;尝试了几个参数，最后找到&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&#92;_SB_.PCI0.GFX0.ATPX 2 0&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;  /proc/acpi/call&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;嗯，确实有用，但是实在是太暴力了，直接把整个显卡移除，可以看一下日志</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="bios" scheme="https://asutorufa.github.io/tags/bios/"/>
    
    <category term="computer" scheme="https://asutorufa.github.io/tags/computer/"/>
    
  </entry>
  
  <entry>
    <title>DNS客户端协议详解</title>
    <link href="https://asutorufa.github.io/posts/f05986bf/"/>
    <id>https://asutorufa.github.io/posts/f05986bf/</id>
    <published>2020-05-31T18:44:37.000Z</published>
    <updated>2020-05-31T18:44:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个DNS系列现在有以下几篇文章<br><a href="/posts/f05986bf/">DNS</a>  <a href="/posts/668530ca/">EDNS</a> <a href="/posts/1751943e/">DNSSEC</a> <a href="/posts/4b39445f/">DNS over HTTPS</a> 完整代码请看<a href="https://github.com/Asutorufa/yuhaiin/tree/master/net/dns">DNS</a></p><h2 id="DNS-Header">DNS Header</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">                                1  1  1  1  1  1  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                      ID                       |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                    QDCOUNT                    |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                    ANCOUNT                    |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                    NSCOUNT                    |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                    ARCOUNT                    |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>header在dns请求和应答中相同的,查询中有Query Section,应答中有answer section.</p><ul><li>ID: 2字节,应答中也有ID,可以用来判断是否为我们请求的应答</li><li>QR：1bit,请求时为0,应答时为1</li><li>Opcode：4bit 通常值为0（标准查询），其他值为1（反向查询）和2（服务器状态请求）,[3,15]保留值</li><li>AA：1bit authoritative answer,在应答中才有效</li><li>TC：1bit 表示可截断</li><li>RD：1bit 期望使用递归查询</li><li>RA：1bit 在应答中返回,返回服务器是否支持递归查询</li><li>Z： Reserved for future use.</li><li>RCODE：4bit,应答码,代表返回的状态<ul><li>0 No Error</li><li>1 Format error 格式错误</li><li>2 Server failure 服务器失败</li><li>3 Name Error 查询域名错误</li><li>4 Not Implemented 未实现的查询方式</li><li>5 Refused 拒绝</li><li>6-15 Reserved for future use.<span id="more"></span></li></ul></li><li>QDCOUNT 请求的个数</li><li>ANCOUNT 应答的个数</li><li>NSCOUNT 无符号16bit整数表示报文授权段中的授权记录数。</li><li>ARCOUNT 无符号16bit整数表示报文附加段中的附加记录数。</li></ul><h2 id="查询">查询</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">                                1  1  1  1  1  1  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                                               |/                     QNAME                     //                                               /+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                     QTYPE                     |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                     QCLASS                    |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>QNAME：不定长,格式为域名以点分割的长度,末尾以0结尾,例如:</p>  <pre class="language-txt" data-language="txt"><code class="language-txt">www.google.com -> 3www6google3com0</code></pre></li><li><p>QTYPE:查询的类型<br>常用的我们需要知道A为IPV4,AAAA为IPV6</p>  <pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">TYPE            value and meaningA               1 a host addressNS              2 an authoritative name serverMD              3 a mail destination (Obsolete - use MX)MF              4 a mail forwarder (Obsolete - use MX)CNAME           5 the canonical name for an aliasSOA             6 marks the start of a zone of authorityMB              7 a mailbox domain name (EXPERIMENTAL)MG              8 a mail group member (EXPERIMENTAL)MR              9 a mail rename domain name (EXPERIMENTAL)NULL            10 a null RR (EXPERIMENTAL)WKS             11 a well known service descriptionPTR             12 a domain name pointerHINFO           13 host informationMINFO           14 mailbox or mail list informationMX              15 mail exchangeTXT             16 text stringsAAAA            28 &lt;- https://www.ietf.org/rfc/rfc3596.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>QCLASS：无符号16bit整数表示查询的类,比如，IN代表Internet.</p></li></ul><p>现在我们来完成生成请求的代码<br>使用全局变量来存储请求的类型</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> reqType <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token keyword">var</span> <span class="token punctuation">(</span>  A     <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000001</span><span class="token punctuation">&#125;</span> <span class="token comment">// 1</span>  NS    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000010</span><span class="token punctuation">&#125;</span> <span class="token comment">// 2</span>  MD    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000011</span><span class="token punctuation">&#125;</span> <span class="token comment">// 3</span>  MF    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000100</span><span class="token punctuation">&#125;</span> <span class="token comment">// 3</span>  CNAME <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000101</span><span class="token punctuation">&#125;</span> <span class="token comment">// 5</span>  SOA   <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000110</span><span class="token punctuation">&#125;</span> <span class="token comment">// 6</span>  MB    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000111</span><span class="token punctuation">&#125;</span> <span class="token comment">// 7</span>  MG    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001000</span><span class="token punctuation">&#125;</span> <span class="token comment">// 8</span>  MR    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001001</span><span class="token punctuation">&#125;</span> <span class="token comment">// 9</span>  NULL  <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001010</span><span class="token punctuation">&#125;</span> <span class="token comment">// 10</span>  WKS   <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001011</span><span class="token punctuation">&#125;</span> <span class="token comment">// 11</span>  PTR   <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001100</span><span class="token punctuation">&#125;</span> <span class="token comment">// 12</span>  HINFO <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001101</span><span class="token punctuation">&#125;</span> <span class="token comment">// 13</span>  MINFO <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001110</span><span class="token punctuation">&#125;</span> <span class="token comment">// 14</span>  MX    <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00001111</span><span class="token punctuation">&#125;</span> <span class="token comment">// 15</span>  TXT   <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00010000</span><span class="token punctuation">&#125;</span> <span class="token comment">// 16</span>  AAAA  <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00011100</span><span class="token punctuation">&#125;</span> <span class="token comment">// 28 https://www.ietf.org/rfc/rfc3596.txt</span>  <span class="token comment">// for req</span>  AXFR <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b11111100</span><span class="token punctuation">&#125;</span> <span class="token comment">// 252</span>  ANY  <span class="token operator">=</span> reqType<span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b11111111</span><span class="token punctuation">&#125;</span> <span class="token comment">// 255</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里需要注意有些字段是以位的大小来存储的,需要使用移位运算符来计算(在完成这个协议前,我写了socks5,因为socks5中全部为字节的大小,可能有人会出现与我相同的错误,所以需要注意一下)</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">creatRequest</span><span class="token punctuation">(</span>domain <span class="token builtin">string</span><span class="token punctuation">,</span> reqType reqType<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">&#123;</span>    id <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token function">byte</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">byte</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token comment">// id:</span>    qr <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b0</span><span class="token punctuation">)</span>                                          <span class="token comment">// qr 0</span>  opCode <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b0000</span><span class="token punctuation">)</span>                                   <span class="token comment">// opcode 0000</span>  aa <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b0</span><span class="token punctuation">)</span>                                          <span class="token comment">// aa 0</span>  tc <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b0</span><span class="token punctuation">)</span>                                          <span class="token comment">// tc 0</span>  rd <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b1</span><span class="token punctuation">)</span>                                          <span class="token comment">// rd 1</span>  ra <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b0</span><span class="token punctuation">)</span>                                          <span class="token comment">// ra 0</span>  z <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b000</span><span class="token punctuation">)</span>                                         <span class="token comment">// z 000</span>  rCode <span class="token operator">:=</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0b0000</span><span class="token punctuation">)</span>                                    <span class="token comment">// rCode 0000</span>  qr2rCode <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>qr<span class="token operator">&lt;&lt;</span><span class="token number">7</span> <span class="token operator">+</span> opCode<span class="token operator">&lt;&lt;</span><span class="token number">3</span> <span class="token operator">+</span> aa<span class="token operator">&lt;&lt;</span><span class="token number">2</span> <span class="token operator">+</span> tc<span class="token operator">&lt;&lt;</span><span class="token number">1</span> <span class="token operator">+</span> rd<span class="token punctuation">,</span> ra<span class="token operator">&lt;&lt;</span><span class="token number">7</span> <span class="token operator">+</span> z<span class="token operator">&lt;&lt;</span><span class="token number">4</span> <span class="token operator">+</span> rCode<span class="token punctuation">&#125;</span>  qdCount <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000001</span><span class="token punctuation">&#125;</span> <span class="token comment">// request number => bit: 00000000 00000001 -> 01</span>  anCount <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">// answer number(no use for req) => bit: 00000000 00000000</span>  nsCount <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">//(no use for req) => bit: 00000000 00000000</span>  arCount <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">&#125;</span> <span class="token comment">//(no use for req) => bit: 00000000 00000000</span>  <span class="token keyword">var</span> qName <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> x <span class="token operator">:=</span> <span class="token keyword">range</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    qName <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>qName<span class="token punctuation">,</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    qName <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>qName<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  qName <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>qName<span class="token punctuation">,</span> <span class="token number">0b00000000</span><span class="token punctuation">)</span> <span class="token comment">// add the 0 for last of domain</span>  qType <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>reqType<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reqType<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>  <span class="token comment">// type:</span>  qClass <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0b00000000</span><span class="token punctuation">,</span> <span class="token number">0b00000001</span><span class="token punctuation">&#125;</span> <span class="token comment">// 1 -> from internet</span>  <span class="token keyword">return</span> bytes<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span>id<span class="token punctuation">,</span> qr2rCode<span class="token punctuation">,</span> qdCount<span class="token punctuation">,</span> anCount<span class="token punctuation">,</span> nsCount<span class="token punctuation">,</span> arCount<span class="token punctuation">,</span> qName<span class="token punctuation">,</span> qType<span class="token punctuation">,</span> qClass<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们已经得到了完整的请求字节数组,然后使用UDP协议发起请求就行了：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 此处以www.google.com及1111 DNS为例</span>req <span class="token operator">:=</span> <span class="token function">creatRequest</span><span class="token punctuation">(</span><span class="token string">"www.google.com"</span><span class="token punctuation">,</span> A<span class="token punctuation">)</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">DialTimeout</span><span class="token punctuation">(</span><span class="token string">"udp"</span><span class="token punctuation">,</span> <span class="token string">"1.1.1.1:53"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token boolean">_</span> <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">SetDeadline</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">)</span>n<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来我们就需要解析应答请求了,来获取我们需要的数据.</p><h2 id="应答">应答</h2><p>应答数据中具有header和请求字段,所以我们可以先写一个resovle header来分析header.<br>之前我们完成了域名编码的代码,就是<code>3www6google3com0</code>这个,这里我们还需要完成一个解析的.</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">getName</span><span class="token punctuation">(</span>c <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> all <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">,</span> x <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">128</span> <span class="token operator">==</span> <span class="token number">128</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">64</span> <span class="token operator">==</span> <span class="token number">64</span> <span class="token punctuation">&#123;</span> <span class="token comment">// &lt;- 这里的这个会在下面的answer section中解释</span>      l <span class="token operator">:=</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>      c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>      tmp<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">getName</span><span class="token punctuation">(</span>all<span class="token punctuation">[</span>l<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> all<span class="token punctuation">)</span>      name <span class="token operator">+=</span> tmp      <span class="token comment">//log.Println(c, name)</span>      <span class="token keyword">break</span>    <span class="token punctuation">&#125;</span>    name <span class="token operator">+=</span> <span class="token function">string</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"."</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>      c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// lastOfDomain: one byte 0</span>      <span class="token keyword">break</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> name<span class="token punctuation">,</span> c<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后就可以来分析header了：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">resolveHeader</span><span class="token punctuation">(</span>req <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> answer <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>anCount <span class="token builtin">int</span><span class="token punctuation">,</span> answerSection <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// resolve answer</span>  <span class="token keyword">if</span> answer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> req<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> answer<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> req<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token comment">// compare id</span>    <span class="token comment">// not the answer</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"id not same"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> answer<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">8</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span> <span class="token comment">// check the QR is 1(Answer)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"the qr is not 1(Answer)"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  rCode <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%08b"</span><span class="token punctuation">,</span> answer<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// check Response code(rCode)</span>  <span class="token keyword">switch</span> rCode <span class="token punctuation">&#123;</span>  <span class="token keyword">case</span> <span class="token string">"0000"</span><span class="token punctuation">:</span> <span class="token comment">// no error</span>    <span class="token keyword">break</span>  <span class="token keyword">case</span> <span class="token string">"0001"</span><span class="token punctuation">:</span> <span class="token comment">// Format error</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"request format error"</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token string">"0010"</span><span class="token punctuation">:</span> <span class="token comment">//Server failure</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"dns Server failure"</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token string">"0011"</span><span class="token punctuation">:</span> <span class="token comment">//Name Error</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"no such name"</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token string">"0100"</span><span class="token punctuation">:</span> <span class="token comment">// Not Implemented</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"dns server not support this request"</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token string">"0101"</span><span class="token punctuation">:</span> <span class="token comment">//Refused</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"dns server Refuse"</span><span class="token punctuation">)</span>  <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token comment">// Reserved for future use.</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"other error"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//qdCountA := []byte&#123;b[4], b[5]&#125;  // no use, for request</span>  <span class="token comment">//anCountA := []byte&#123;answer[6], answer[7]&#125;</span>  anCount <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>answer<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">int</span><span class="token punctuation">(</span>answer<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">//nsCount2arCountA := []byte&#123;b[8], b[9], b[10], b[11]&#125; // no use</span>  c <span class="token operator">:=</span> answer<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token keyword">var</span> x <span class="token builtin">string</span>  x<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> answer<span class="token punctuation">)</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"qType:"</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"qClass:"</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token keyword">return</span> anCount<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后就是我们真正需要的数据,Answer section</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">                               1  1  1  1  1  1  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                                               |/                                               //                      NAME                     /|                                               |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                      TYPE                     |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                     CLASS                     |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                      TTL                      ||                                               |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+|                   RDLENGTH                    |+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--|/                     RDATA                     //                                               /+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>NAME：不定长与之前QNAME相同,这里会使用省略字段：前两bit为11表示压缩格式，而后面跟的14bit表示的是Name所在的位置相对于DNS首部的偏移值<br>如：之前的header数组中出现过3www6google3com0,且处的位置为12,这里就可以用192 12两个字节来省略(192是因为11000000,前两位为11)</li><li>QTYPE：与之前的TYPE相同</li><li>CLASS：与之前的QCLASS相同</li><li>TTL: 就是TTL 可以使用搜索引擎查询一下</li><li>RDLENGTH: RDATA的长度</li></ul><p>这个Answer section与之前的header不同,并不是只出现一次,与header中ANCOUNT有关,如果ANCOUNT不为1,后面就会出现多个,要使用循环来获取所有应答数据</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// resolve answer</span>anCount<span class="token punctuation">,</span> c<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">resolveHeader</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> b<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token comment">// answer section</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Answer section:"</span><span class="token punctuation">)</span><span class="token keyword">var</span> x <span class="token builtin">string</span><span class="token keyword">for</span> anCount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>  x<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> b<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  tYPE <span class="token operator">:=</span> reqType<span class="token punctuation">&#123;</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"type:"</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// type</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"class:"</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// class</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"ttl:"</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// ttl 4byte</span>  sum <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span> <span class="token operator">+</span> <span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"rdlength"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span>  c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// RDLENGTH  跳过总和，因为总和不包括计算域名的长度 2+int(c[0])&lt;&lt;8+int(c[1])</span>  <span class="token keyword">switch</span> tYPE <span class="token punctuation">&#123;</span>  <span class="token keyword">case</span> A<span class="token punctuation">:</span>    DNS <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>DNS<span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// 4 byte ip addr</span>  <span class="token keyword">case</span> AAAA<span class="token punctuation">:</span>    DNS <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>DNS<span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// 16 byte ip addr</span>  <span class="token keyword">case</span> NS<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MD<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MF<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> CNAME<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> SOA<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MG<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MB<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MR<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> NULL<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> WKS<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> PTR<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> HINFO<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MINFO<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> MX<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">case</span> TXT<span class="token punctuation">:</span>    <span class="token keyword">fallthrough</span>  <span class="token keyword">default</span><span class="token punctuation">:</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"rdata"</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span><span class="token punctuation">:</span>sum<span class="token punctuation">]</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> c<span class="token punctuation">[</span>sum<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// RDATA</span>  <span class="token punctuation">&#125;</span>  anCount <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然这里我只处理了A,和AAAA的请求类型,但是每个类型的数据格式在<a href="https://www.ietf.org/rfc/rfc1035.txt">rfc1035</a>都有详细记录,想要自己实现并不难,毕竟我们已经完成的大部分的数据解析,剩下的一点也应该问题不大.</p><hr><blockquote><p><a href="https://www.ietf.org/rfc/rfc1035.txt">rfc1035</a><br><a href="https://www.ietf.org/rfc/rfc3596.txt">rfc3596</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个DNS系列现在有以下几篇文章&lt;br&gt;
&lt;a href=&quot;/posts/f05986bf/&quot;&gt;DNS&lt;/a&gt;  &lt;a href=&quot;/posts/668530ca/&quot;&gt;EDNS&lt;/a&gt; &lt;a href=&quot;/posts/1751943e/&quot;&gt;DNSSEC&lt;/a&gt; &lt;a href=&quot;/posts/4b39445f/&quot;&gt;DNS over HTTPS&lt;/a&gt; 完整代码请看&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/tree/master/net/dns&quot;&gt;DNS&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;DNS-Header&quot;&gt;DNS Header&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-txt&quot; data-language=&quot;txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;                                1  1  1  1  1  1
  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                      ID                       |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    QDCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    ANCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    NSCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    ARCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;header在dns请求和应答中相同的,查询中有Query Section,应答中有answer section.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 2字节,应答中也有ID,可以用来判断是否为我们请求的应答&lt;/li&gt;
&lt;li&gt;QR：1bit,请求时为0,应答时为1&lt;/li&gt;
&lt;li&gt;Opcode：4bit 通常值为0（标准查询），其他值为1（反向查询）和2（服务器状态请求）,[3,15]保留值&lt;/li&gt;
&lt;li&gt;AA：1bit authoritative answer,在应答中才有效&lt;/li&gt;
&lt;li&gt;TC：1bit 表示可截断&lt;/li&gt;
&lt;li&gt;RD：1bit 期望使用递归查询&lt;/li&gt;
&lt;li&gt;RA：1bit 在应答中返回,返回服务器是否支持递归查询&lt;/li&gt;
&lt;li&gt;Z： Reserved for future use.&lt;/li&gt;
&lt;li&gt;RCODE：4bit,应答码,代表返回的状态
&lt;ul&gt;
&lt;li&gt;0 No Error&lt;/li&gt;
&lt;li&gt;1 Format error 格式错误&lt;/li&gt;
&lt;li&gt;2 Server failure 服务器失败&lt;/li&gt;
&lt;li&gt;3 Name Error 查询域名错误&lt;/li&gt;
&lt;li&gt;4 Not Implemented 未实现的查询方式&lt;/li&gt;
&lt;li&gt;5 Refused 拒绝&lt;/li&gt;
&lt;li&gt;6-15 Reserved for future use.</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
    <category term="DNS" scheme="https://asutorufa.github.io/tags/DNS/"/>
    
    <category term="UDP" scheme="https://asutorufa.github.io/tags/UDP/"/>
    
  </entry>
  
  <entry>
    <title>翻译-C程序员所应该知道的内存</title>
    <link href="https://asutorufa.github.io/posts/f87fc9f0/"/>
    <id>https://asutorufa.github.io/posts/f87fc9f0/</id>
    <published>2020-05-04T00:26:24.000Z</published>
    <updated>2020-05-04T00:26:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文章 <a href="https://marek.vavrusa.com/memory/#mmap-fun">What a C programmer should know about memory</a><br>提示: <strong>本篇文章的图片都是直接使用原文中的图片的地址,如果无法显示,请挂代理</strong></p></blockquote><hr><p>2007年,Ulrich Drepper写了一篇&quot;<a href="http://www.akkadia.org/drepper/cpumemory.pdf">每个程序员都应该知道的内存</a>&quot;.是的,虽然这篇文章又细又长,但做到了它所应做到的.很多年后,虚拟内存的概念对于很多人来说仍然难以琢磨,仿佛是某种魔法.我无法抗拒的引用一下.很多年后甚至原始文章的有效性也被<a href="https://stackoverflow.com/questions/8126311/what-every-programmer-should-know-about-memory">质疑</a>,到底发生了什么事?</p><blockquote><p>北桥,这是什么东西?那不是巷战.</p></blockquote><p>我尝试从&quot;学习锁的基本原理&quot;去传达实用的一面(比如:你能做什么)和更多有趣的东西.可以看待这是一个胶水在原始文章和你每天使用的东西之间.例子将使用linux上的C99,但是更多主题将是普遍的.<br>编辑: 虽然我对Windows不了解,但我很乐意联系文章去解释.我会尽全力去提起什么函数是平台特有的,但是再一次我只是一个人.如果你发现出入,请让我知道.<br>事不宜迟，倒一杯咖啡，让我们开始吧。</p><p>译者注:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">worth one's salt:    good or competent at the job or profession specified.    ig:"any astrologer worth her salt would have predicted this"what gives?    是在英语对话中常用的一句口语    通常用它的时候只有两层意思    一个是What's happening?发生了什么事？    另一个是What is the news?有什么消息？the practical side    实用的一面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="理解虚拟内存-复杂且神秘">理解虚拟内存 - 复杂且神秘</h2><p>除非你要处理一些嵌入系统或内核空间的代码,否则你应该在保护模式下进行.这太棒了,你的程序一定拥有它自己的[虚拟]地址空间.“虚拟&quot;在这里很重要.这意味着,除了其他事情外,你不会被可使用的内存限制,但是也无权获得任何.为了使用这些空间,你不得向操作系统要一些真东西来作后援,这被叫做映射.后援可能是物理内存,也可能是持久性存储.前者也被叫做&quot;匿名映射”.但是,稍安勿躁.<span id="more"></span><br>虚拟内存分配(virtual memory allocator=VMA)可以给你所不存在的内存,他只能徒劳的希望你不要去使用它,就像现在的银行.这是过量使用(<a href="https://www.kernel.org/doc/Documentation/vm/overcommit-accounting">overcommiting</a>),并且也存在有需求的程序(稀疏数组),这也意味着内存分配不能简单的说&quot;不&quot;.</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">char</span> <span class="token operator">*</span>block <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>block <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token operator">-</span>ENOMEM<span class="token punctuation">;</span> <span class="token comment">/* Sad :( */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>检查NULL是一个很好的做法,但也没有曾经那么强大.因为过量使用(overcommiting)的存在,操作系统可能给你的内存分配器分配一个有效的内存指针,但当你去访问时-dang*.这里的dang是有平台差异的,但普遍情况下<a href="http://www.win.tue.nl/~aeb/linux/lk/lk-9.html#ss9.6">oom(out-of-memory) killer</a>将结束你的程序.</p><p><em>这里过于简单,as timbatron noted,并且将在<a href="https://marek.vavrusa.com/memory/#pagefault">解释按需分页</a>节解释.但是我想要在研究细节之前先过一遍更普遍的知识.</em></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">the plot thickens    said to mean that a complicated situation or series of events starts to become even more complicated or mysterious    At this point the plot thickened further. A link emerged between the attempt to kill the Pope and the kidnapping of the American.guaranteed 美 [ˌɡerənˈtid] 英 [ˌɡærənˈtiːd]    adj. 必定的，肯定的bounded 美 ['baundid] 英 [ˈbaʊndɪd]    有界限的, 有限制的entitled 美 [ɛnˈtaɪtəld; ɪnˈtaɪtəld] 英 [ɪnˈtaɪtəld]    adj. 有资格的hold your horses<span class="token code keyword">    used to tell someone to stop and consider carefully their decision or opinion about something:    Just hold your horses, Bill! Let's think about this for a moment.    停下來想想，且慢… 稍安勿躁</span>vain 美 [veɪn] 英 [veɪn]    adj. 徒劳的a good practice 一个很好的做法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="绕道-内存布局">绕道 - 内存布局</h2><p>进程内存的布局已经很好的在Gustavo Duarte所著的<a href="http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory/">剖析程序内存中</a>中进行解释,所以我将引用并参考原始文章,我希望这是合理的使用.我只有一点想要吹毛求疵一下,那就是他只讲到了x86-32的内存布局,但是幸运的是在x86-64中并没有多大的变化,只是进程可以使用更多的空间 - 在linux中高达 48 bits.</p><p><img src="http://static.duartes.org/img/blogPosts/linuxFlexibleAddressSpaceLayout.png" alt="linux内存布局" loading="lazy"></p><center>Source: Linux address space layout by <a href="http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory/">Gustavo Duarte</a></center><p>这也展示了内存映射段(<code>memory mapping segment</code>=MMS)是向下增长的,但是并非总是如此.内存映射段通常开始与(<a href="http://lxr.free-electrons.com/source/mm/mmap.c#L1953">x86/mm/mmap.c:113</a>和<a href="http://lxr.free-electrons.com/source/arch/x86/mm/mmap.c#L113">arch/mm/mmap.c:1953</a>)一个栈底的随机地址.但也可以开始于栈之上或向栈之上增长当且仅当栈很大或栈无限大,或者兼容布局是被允许的.这重要吗?不,但是这将帮助你理解<a href="https://marek.vavrusa.com/memory/#mmap-fun">自由地址范围</a>.<br>看那个图表,你可以看到三个不同的变量存放位置:进程数据段(静态存储或堆分配),内存映射段,和栈.让我们从这个开始</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">anatomy 美 [əˈnætəmi] 英 [əˈnætəmɪ]    n. 解剖学；结构；身体；剖析quibble 美 [ˈkwɪbəl] 英 [ˈkwɪbəl]    vi /ˈkwɪbəl/        1.（尤指为搪塞）吹毛求疵，诡辩        2.用双关语；说俏皮话    n /ˈkwɪbəl/        1.（尤指为搪塞）吹毛求疵，抱怨        2.双关语fair 美 [fɛr] 英 [fɛə]    合理的iff [if]    abbr. (= if and only if) 当且仅当<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="了解栈分配">了解栈分配</h2><p>实用腰带(译者注：此处为直译，原文为Utility belt)：</p><ul><li><a href="https://linux.die.net/man/3/alloca">alloca()-在调用者的栈帧中分配内存</a></li><li><a href="https://linux.die.net/man/2/getrlimit">getrlimit()-获取/设置资源限制</a></li><li><a href="https://linux.die.net/man/2/sigaltstack">sigaltstack()-设置并且(或)得到信号栈上下文</a></li></ul><p>栈易于理解,所有人都知道如何在栈中创建一个变量,不是吗?<br>这里有两个例子:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> stairway <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">int</span> heaven<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>变量的有效性被范围所限制.在C语言中,这意味着:<code>&#123;&#125;</code>.所以每次出现右花括号时就意味着一个变量的结束.然后这里有<a href="https://linux.die.net/man/3/alloca">alloca()</a>,允许在当前的栈帧中动态分配内存.栈帧与内存框架(memory frame)(也被叫做物理页(physical page))不同,这是一个简单的可以被放入栈中的数据组(函数,参数,变量…).每当我们在栈顶时,我们可以使用剩余的内存直到达到栈的大小限制.<br>这就是可变长数组(variable-length arrays=VLA),以及alloca()的工作方式,但是有一个不同-可变长的数组的有效性被范围限制,alloca将保留内存直到函数返回(或被释放).这不是单纯的语法警察(译者注:原文language lawyering,这节下面有详细翻译),这确实是一个问题如果你在循环中使用alloca,因为你没有任何手段去释放它.</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">laugh</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> megatron<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">char</span> <span class="token operator">*</span>res <span class="token operator">=</span> <span class="token function">alloca</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">memcpy</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">"ha"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">char</span> vla<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token char">'h'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token comment">/* vla dies, res lives */</span><span class="token punctuation">&#125;</span> <span class="token comment">/* all allocas die */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可变长数组和alloca都不适合大分配,因为你几乎没有控制可用的栈内存并且超过栈限制的分配将导致栈溢出.这里有两种方法,但都不实用.<br>第一个方法就是使用sigaltstack()去抓获<code>SIGSEGV</code>并处理.然而这仅仅是让你抓获到栈溢出.<br>另一个方法是以<code>split-stacks</code>进行编译,顾名思义,这真的就是把单片栈分为较小的栈链表也被叫做<code>stacklets</code>.就我所知,GCC和clang都支持-fsplit-stack选项.理论上这也改善了内存的消耗量并且降低了创建线程的成本 - 因为栈一开始就很小并且按需增长.实际上,预期可能会有兼容性问题,因为他需要一个split-stack链表感知器(译者注:原文aware linker)(如:gold)与split-stack unaware库配合使用,而且还有性能问题(Agis Anastasopoulos的&quot;hot split&quot;在Go中是个很好的<a href="http://agis.io/2014/03/25/contiguous-stacks-in-go.html">解释</a>)</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Stack Frame 栈帧digest [ˈdaɪˌdʒɛst]    理解a variable dies 变量的结束aka = also-known-asthis is how 这就是...means [mēnz]    名词 手段; 方法; 工具; 办法; 径; 繇; 款grow on demand 按需增长play nice with 配合scope 美 [skoʊp] 英 [skəʊp]    n. 范围，领域；remaining 其余<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>language lawyer</strong> from <a href="https://www.reddit.com/r/cpp/comments/52yd5s/what_does_stroustrup_mean_by_language_lawyers_hes/">What does Stroustrup mean by ‘language lawyers’? He’s said it more than a few times.</a><br>A language lawyer is generally someone that is familiar enough with the details of the standard that they can quote it chapter and verse in order to answer a question, solve a problem, prove a point, etc. The standard is the ultimate authority on what is and isn’t valid C++, and much like the law it’s written in very technical and precise language that requires some effort to really unpack, so there are several parallels to the field of law.<br>It can have both positive and negative connotations. The idea is that you shouldn’t need to be a language lawyer to be able to learn and use the language. At the same time, having a single document that precisely defines the semantics of the language is a significant advantage that many other languages lack, so the fact that it’s possible to be a language lawyer is not an automatic negative. In order to have compatible implementations it’s necessary to define all the edge conditions and dark corners of the language, even if it results in some truly out there passages of the standard.</p><h2 id="了解堆分配">了解堆分配</h2><p>Utility belt:</p><ul><li><a href="https://linux.die.net/man/2/sbrk">brk(), sbrk() - manipulate the data segment size</a></li><li><a href="https://linux.die.net/man/3/malloc">malloc() family - portable libc memory allocator</a></li></ul><p>堆分配可以简单的看作是移动堆段的结束位置(<a href="https://linux.die.net/man/2/sbrk">program break</a>)和声明内存在旧位置和新位置之间。到了这一点，堆分配和栈分配一样快(没有分页，假设栈已锁定在内存中)。但是有一只猫(cat)，我的意思是捕获(catch)，该死的(dammit)。</p><pre class="language-c" data-language="c"><code class="language-c"><span class="token keyword">char</span> <span class="token operator">*</span>block <span class="token operator">=</span> <span class="token function">sbrk</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>(1)我们不能重新声明未使用的内存块，(2)不是线程安全的，因为堆在线程之间共享，(3)接口很难移植，库不能接触到中断</p><blockquote><p>man 3 sbrk — Various systems use various types for the argument of sbrk(). Common are int, ssize_t, ptrdiff_t, intptr_t.</p></blockquote><p>由于这些原因，libc实现了用于内存分配的集中式接口。实现方式<a href="https://en.wikibooks.org/wiki/C_Programming/C_Reference/stdlib.h/malloc#Implementations">各不相同</a>，但是它支持线程安全的任意大小的内存分配…但有代价。代价是延迟，因为这里还涉及锁，数据结构保留有关已用/可用块的信息以及额外的内存开销。堆也不是唯一使用的，因为内存映射段也经常应用于大内存块。</p><blockquote><p>man 3 malloc — Normally, malloc() allocates memory from the heap, … when allocating blocks of memory larger than<br>MMAP_THRESHOLD, the glibc malloc() implementation allocates the memory as a private anonymous mapping.</p></blockquote><p>因为从<code>start_brk</code>到<code>brk</code>堆总是连续的，所以你不能精确钻取漏洞穿过它并减少数据段大小。想象以下情节：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">char</span> <span class="token operator">*</span>truck <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>bike  <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">free</span><span class="token punctuation">(</span>truck<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>堆[分配器]移动<code>brk</code>为<code>truck</code>腾出空间。同样为<code>bike</code>也进行相同的操作。但是在<code>truck</code>释放后，<code>brk</code>也无法降级(向下移)，因为<code>bike</code>占据最高段地址。结论就是你的程序可以重用之前<code>truck</code>的内存，但是不会被交回系统直到<code>bike</code>被释放。<br>假设<code>truck</code>被映射，它将不能处于堆段，并且不能影响程序中断(program break)。不过，这种技巧并不能阻止因小分配(另一种说法也叫“碎片化”)而造成的漏洞。<br>注意<code>free()</code>不总是尝试去缩小数据段，因为这是一个<a href="https://marek.vavrusa.com/memory/#pagefault">潜在的昂贵操作</a>。这对于长时间运行的程序来说是一个问题，如守护程序。一个GNU的拓展，被叫做<a href="https://linux.die.net/man/3/malloc_trim">malloc_trim()</a>，用于从堆顶部释放内存，但可能会很慢。它对很多小对象的伤害很大，因此应谨慎使用。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sans [sænz]    <span class="token bold"><span class="token punctuation">__</span><span class="token content">没有</span><span class="token punctuation">__</span></span>,在外,外部portable [ˈpɔːtəbəl]    可移植的The cost    代价utilised    adj. 被利用的exclusively [iks'klu:sivli]    adv. 独占地，专门地，完全地contiguous [kənˈtɪgjuəs]    adj. 邻近的；<span class="token bold"><span class="token punctuation">__</span><span class="token content">连续的</span><span class="token punctuation">__</span></span>scenario [səˈnɛriˌoʊ]    n. <span class="token bold"><span class="token punctuation">__</span><span class="token content">情节</span><span class="token punctuation">__</span></span>；剧本；方案reuse [riˈjuz]    n. 再用，重新使用    v. 再用，重新使用fragmentation [frægmən'teiʃən]    碎片sparingly [ˈspeərɪŋlɪ]    adv. 拘谨地;朴实地;节俭地<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="未完待续-不定时接着翻译">未完待续-不定时接着翻译</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">conquering [ˈkɒŋkərɪŋ]    adj /ˈkɒŋkərɪŋ/ 进行征服的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;原文章 &lt;a href=&quot;https://marek.vavrusa.com/memory/#mmap-fun&quot;&gt;What a C programmer should know about memory&lt;/a&gt;&lt;br&gt;
提示: &lt;strong&gt;本篇文章的图片都是直接使用原文中的图片的地址,如果无法显示,请挂代理&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;2007年,Ulrich Drepper写了一篇&amp;quot;&lt;a href=&quot;http://www.akkadia.org/drepper/cpumemory.pdf&quot;&gt;每个程序员都应该知道的内存&lt;/a&gt;&amp;quot;.是的,虽然这篇文章又细又长,但做到了它所应做到的.很多年后,虚拟内存的概念对于很多人来说仍然难以琢磨,仿佛是某种魔法.我无法抗拒的引用一下.很多年后甚至原始文章的有效性也被&lt;a href=&quot;https://stackoverflow.com/questions/8126311/what-every-programmer-should-know-about-memory&quot;&gt;质疑&lt;/a&gt;,到底发生了什么事?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;北桥,这是什么东西?那不是巷战.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我尝试从&amp;quot;学习锁的基本原理&amp;quot;去传达实用的一面(比如:你能做什么)和更多有趣的东西.可以看待这是一个胶水在原始文章和你每天使用的东西之间.例子将使用linux上的C99,但是更多主题将是普遍的.&lt;br&gt;
编辑: 虽然我对Windows不了解,但我很乐意联系文章去解释.我会尽全力去提起什么函数是平台特有的,但是再一次我只是一个人.如果你发现出入,请让我知道.&lt;br&gt;
事不宜迟，倒一杯咖啡，让我们开始吧。&lt;/p&gt;
&lt;p&gt;译者注:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;worth one&#39;s salt:
    good or competent at the job or profession specified.
    ig:&quot;any astrologer worth her salt would have predicted this&quot;

what gives?
    是在英语对话中常用的一句口语
    通常用它的时候只有两层意思
    一个是What&#39;s happening?发生了什么事？
    另一个是What is the news?有什么消息？

the practical side
    实用的一面&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;理解虚拟内存-复杂且神秘&quot;&gt;理解虚拟内存 - 复杂且神秘&lt;/h2&gt;
&lt;p&gt;除非你要处理一些嵌入系统或内核空间的代码,否则你应该在保护模式下进行.这太棒了,你的程序一定拥有它自己的[虚拟]地址空间.“虚拟&amp;quot;在这里很重要.这意味着,除了其他事情外,你不会被可使用的内存限制,但是也无权获得任何.为了使用这些空间,你不得向操作系统要一些真东西来作后援,这被叫做映射.后援可能是物理内存,也可能是持久性存储.前者也被叫做&amp;quot;匿名映射”.但是,稍安勿躁.</summary>
    
    
    
    <category term="Program" scheme="https://asutorufa.github.io/categories/Program/"/>
    
    
    <category term="C" scheme="https://asutorufa.github.io/tags/C/"/>
    
    <category term="English" scheme="https://asutorufa.github.io/tags/English/"/>
    
    <category term="translate" scheme="https://asutorufa.github.io/tags/translate/"/>
    
  </entry>
  
  <entry>
    <title>解决linux下Realtek ALC295的耳机炸裂声</title>
    <link href="https://asutorufa.github.io/posts/67c8ee7f/"/>
    <id>https://asutorufa.github.io/posts/67c8ee7f/</id>
    <published>2020-04-25T22:57:40.000Z</published>
    <updated>2020-04-25T22:57:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>个人使用的笔记本是暗影精灵2 PRO,产品名称是: OMEN by HP Laptop 15-ax210TX.</p><p>最初本人装的是ubuntu,左边耳机的声音一直有噼里啪啦的炸裂声,后来换了Arch还是一样的情况,而且本人喜欢听安静的声音,类似读故事或是心跳声这种,每次听到劈裂啪啦的声音真是难受.</p><p>最初尝试过Arch wiki中的各种方法 包括</p><blockquote><p><a href="https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Glitches,_skips_or_crackling">PulseAudio/Troubleshooting#Glitches,_skips_or_crackling</a><br><a href="https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Static_noise_when_using_headphones">PulseAudio/Troubleshooting#Static_noise_when_using_headphones</a></p></blockquote><p>都没有任何改进.</p><p>直到后来才发现这是linux下Realtek ALC295的驱动不完善导致的,这个bug在17年就提出了,至今都没有得到解决.</p><blockquote><p><a href="https://bugzilla.kernel.org/show_bug.cgi?id=195457">Bug 195457 - Realtek ALC295 still unsupported</a><br><a href="https://bugs.launchpad.net/ubuntu/+source/alsa-driver/+bug/1648183">Crackling and popping sound when using headphones</a></p></blockquote><p>即使有人提交补丁并合并到了linux内核中</p><blockquote><p><a href="https://github.com/torvalds/linux/commit/44be77c590f381bc629815ac789b8b15ecc4ddcf#diff-6cb60ab78549a5b6838f746b9e128105">ALSA: hda - Fix missing COEF init for ALC225/295/299</a></p></blockquote><p>但是事实证明并没有用</p><p>依照上面有人提供的方法却有效(看起来跟提交补丁差不多,但是补丁却没有起作用):</p><span id="more"></span><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">I've managed to fix this problem on my machine (HP Omen 15 running Ubuntu 17.04 using codec for Realtek ALC295 sound device). To fix the problem, I can do the following:Install alsa-tools if not installed:sudo apt install alsa-toolsCreate and save a script in /usr/local/bin:<span class="token title important"><span class="token punctuation">#</span>!/bin/bash</span>hda-verb /dev/snd/hwC0D0 0x20 SET_COEF_INDEX 0x67hda-verb /dev/snd/hwC0D0 0x20 SET_PROC_COEF 0x3000Run the script as root in a terminal to immediately fix the problem.To run the script on startup, use cron with the @reboot command:sudo crontab -eand then add line in crontab:@reboot [full path to script]To run script on resume from suspend, copy the script to /lib/systemd/system-sleepFor more technical details regarding this fix, see https://bugzilla.kernel.org/show_bug.cgi?id=195457<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>arch下类似 除了是用pacman安装alsa-tools,之后操作是一样的.</p><p>不使用crontab,使用systemd的方法<a href="https://wiki.archlinux.org/index.php/ASUS_Zenbook_UX430/UX530#Headphones_audio_is_too_low">ASUS_Zenbook_UX430/UX530#Headphones_audio_is_too_low</a></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">In order to fix it, install alsa-tools or hda-verbAUR and create the file:/usr/local/bin/fix_headphones_audio.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>  <span class="token assign-left variable">DEVICE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> /dev/snd/hwC<span class="token punctuation">[</span><span class="token punctuation">[</span>:print:<span class="token punctuation">]</span><span class="token punctuation">]</span>*D0 <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">1</span><span class="token variable">`</span></span>  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token string">"<span class="token variable">$DEVICE</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    hda-verb <span class="token string">"<span class="token variable">$DEVICE</span>"</span> 0x20 SET_COEF_INDEX 0x67    hda-verb <span class="token string">"<span class="token variable">$DEVICE</span>"</span> 0x20 SET_PROC_COEF 0x3000    <span class="token builtin class-name">break</span>  <span class="token keyword">fi</span>  <span class="token function">sleep</span> <span class="token number">1</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Then create a systemd script with the following content:/etc/systemd/system/fix_headphones_audio.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">Fix headphones audio after boot &amp; resume.</span><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target suspend.target hibernate.target</span><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span><span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">oneshot</span><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/bin/sh '/usr/local/bin/fix_headphones_audio.sh'</span><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span><span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target suspend.target hibernate.target</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="language-markdown" data-language="markdown"><code class="language-markdown">And finally, start and enable fix_headphones_audio.service.</code></pre><hr><blockquote><p><a href="https://bugzilla.kernel.org/show_bug.cgi?id=195457">Bug 195457 - Realtek ALC295 still unsupported</a><br><a href="https://bugs.launchpad.net/ubuntu/+source/alsa-driver/+bug/1648183">Crackling and popping sound when using headphones</a><br><a href="https://askubuntu.com/questions/873881/how-to-install-bang-and-olufsen-audio-drivers-for-hp-laptop">How to install Bang and Olufsen Audio drivers for HP laptop?</a><br><a href="https://wiki.archlinux.org/index.php/ASUS_Zenbook_UX430/UX530#Headphones_audio_is_too_low">ASUS_Zenbook_UX430/UX530#Headphones_audio_is_too_low</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;个人使用的笔记本是暗影精灵2 PRO,产品名称是: OMEN by HP Laptop 15-ax210TX.&lt;/p&gt;
&lt;p&gt;最初本人装的是ubuntu,左边耳机的声音一直有噼里啪啦的炸裂声,后来换了Arch还是一样的情况,而且本人喜欢听安静的声音,类似读故事或是心跳声这种,每次听到劈裂啪啦的声音真是难受.&lt;/p&gt;
&lt;p&gt;最初尝试过Arch wiki中的各种方法 包括&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Glitches,_skips_or_crackling&quot;&gt;PulseAudio/Troubleshooting#Glitches,_skips_or_crackling&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Static_noise_when_using_headphones&quot;&gt;PulseAudio/Troubleshooting#Static_noise_when_using_headphones&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;都没有任何改进.&lt;/p&gt;
&lt;p&gt;直到后来才发现这是linux下Realtek ALC295的驱动不完善导致的,这个bug在17年就提出了,至今都没有得到解决.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://bugzilla.kernel.org/show_bug.cgi?id=195457&quot;&gt;Bug 195457 - Realtek ALC295 still unsupported&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/alsa-driver/+bug/1648183&quot;&gt;Crackling and popping sound when using headphones&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即使有人提交补丁并合并到了linux内核中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/torvalds/linux/commit/44be77c590f381bc629815ac789b8b15ecc4ddcf#diff-6cb60ab78549a5b6838f746b9e128105&quot;&gt;ALSA: hda - Fix missing COEF init for ALC225/295/299&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是事实证明并没有用&lt;/p&gt;
&lt;p&gt;依照上面有人提供的方法却有效(看起来跟提交补丁差不多,但是补丁却没有起作用):&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="driver" scheme="https://asutorufa.github.io/tags/driver/"/>
    
    <category term="Realtek ALC295" scheme="https://asutorufa.github.io/tags/Realtek-ALC295/"/>
    
  </entry>
  
  <entry>
    <title>NAT穿透</title>
    <link href="https://asutorufa.github.io/posts/1124a628/"/>
    <id>https://asutorufa.github.io/posts/1124a628/</id>
    <published>2020-04-22T11:33:26.000Z</published>
    <updated>2020-04-22T11:33:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NAT-网络地址转换">NAT 网络地址转换</h2><p>网络地址转换 NAT (Network Address Translation)  方法于1994年提出。<br>需要在专用网连接到互联网的路由器上安装 NAT 软件。装有 NAT 软件的路由器叫作 NAT路由器，它至少有一个有效的外部全球IP地址。<br>所有使用本地地址的主机在和外界通信时，都要在 NAT 路由器上将其本地地址转换成全球 IP 地址，才能和互联网连接。</p><h3 id="网络地址转换的过程">网络地址转换的过程</h3><p>内部主机 A 用本地地址 IPA 和互联网上主机 B 通信所发送的数据报必须经过 NAT 路由器。<br>NAT 路由器将数据报的源地址 IPA 转换成全球地址 IPG，<strong>并把转换结果记录到NAT地址转换表中</strong>，目的地址 IPB 保持不变，然后发送到互联网。<br>NAT 路由器收到主机 B 发回的数据报时，知道数据报中的源地址是 IPB 而目的地址是 IPG。<br>根据 NAT 转换表，NAT 路由器将目的地址 IPG 转换为 IPA，转发给最终的内部主机 A。</p><p>网络地址转换表例子:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+-------------+---------------+| private IP  |   public IP   |+-------------+---------------+| 192.168.1.55|219.152.168.222|+-------------+---------------+| 192.168.1.59|219.152.168.223|+-------------+---------------+|192.168.1.155|219.152.168.224|+-------------+---------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><h3 id="NAPT-网络地址与端口号转换">NAPT 网络地址与端口号转换</h3><p>为了更加有效地利用 NAT 路由器上的全球IP地址，现在常用的 NAT 转换表把运输层的端口号也利用上。这样，就可以使多个拥有本地地址的主机，共用一个 NAT 路由器上的全球 IP 地址，因而可以同时和互联网上的不同主机进行通信。<br>使用端口号的 NAT 叫作网络地址与端口号转换NAPT (Network Address and Port Translation)，而不使用端口号的 NAT 就叫作传统的 NAT (traditional NAT)。</p><p>带端口的网络地址转换表例子:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">+-----------------+--------------------+|   private IP    |     public IP      |+-----------------+--------------------+|192.168.1.55:5566|219.152.168.222:9200|+-----------------+--------------------+| 192.168.1.59:80 |219.152.168.222:9201|+-----------------+--------------------+|192.168.1.59:4465|219.152.168.222:9202|+-----------------+--------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不同类型的NAT">不同类型的NAT</h3><p>来自Wikipedia</p><ul><li>完全圆锥型NAT（Full cone NAT），即一对一（one-to-one）NAT<br>一旦一个内部地址（iAddr:port）映射到外部地址（eAddr:port），所有发自iAddr:port的包都经由eAddr:port向外发送。任意外部主机都能通过给eAddr:port发包到达iAddr:port（注：port不需要一样）</li><li>受限圆锥型NAT（Address-Restricted cone NAT）<br>内部客户端必须首先发送数据包到对方（IP=X.X.X.X），然后才能接收来自X.X.X.X的数据包。在限制方面，唯一的要求是数据包是来自X.X.X.X。<br>内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。外部主机（hostAddr:any）能通过给eAddr:port2发包到达iAddr:port1。（注：any指外部主机源端口不受限制，但是目的端口必须是port2。只有外部主机数据包的目的IP 为 内部客户端的所映射的外部ip，且目的端口为port2时数据包才被放行。）</li><li>端口受限圆锥型NAT（Port-Restricted cone NAT）<br>类似受限制锥形NAT（Restricted cone NAT），但是还有端口限制。<br>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<br>在受限圆锥型NAT基础上增加了外部主机源端口必须是固定的。</li><li>对称NAT（Symmetric NAT）<br>每一个来自相同内部IP与端口，到一个特定目的地地址和端口的请求，都映射到一个独特的外部IP地址和端口。<br>同一内部IP与端口发到不同的目的地和端口的信息包，都使用不同的映射<br>只有曾经收到过内部主机数据的外部主机，才能够把数据包发回</li></ul><h2 id="UDP打洞">UDP打洞</h2><p>UDP打洞就是利用了NAT地址转换表.</p><h3 id="正常访问一台具有公网IP的主机">正常访问一台具有公网IP的主机</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">      +-----+A <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>-</span>  <span class="token attr-name">|</span> <span class="token attr-name">NAT</span> <span class="token attr-name">|</span>  <span class="token attr-name">-----Public</span> <span class="token attr-name">INTERNET</span> <span class="token attr-name">-</span><span class="token punctuation">></span></span> B      +-----+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>由主机A向主机B发起请求.<br>NAT将内网地址转换为公网地址,并存在NAT转换表中,这样NAT就知道了来自B的访问应该发给A.</p><h3 id="两台都在NAT中的主机建立连接">两台都在NAT中的主机建立连接</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">      +-----+                              +-----+A <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>-</span>  <span class="token attr-name">|NATA</span> <span class="token attr-name">|</span>  <span class="token attr-name">-----</span> <span class="token attr-name">Public</span> <span class="token attr-name">INTERNET</span> <span class="token attr-name">-----</span> <span class="token attr-name">|</span> <span class="token attr-name">NATB|</span>  <span class="token attr-name">-</span><span class="token punctuation">></span></span> B      +-----+                              +-----+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>首先我们需要知道两台NAT的公网地址和主机A,B的端口.<br>假设NATA的公网地址为1.1.1.1,主机A的端口为1000,NATB的公网地址为1.0.0.1,主机B的端口为1001.<br>然后由A向1.0.0.1:1001发起UDP请求,这样NATA就会记住来自1.0.0.1:1001的请求应该发给A.<br>B也进行同样的操作向1.1.1.1:1000,发起UDP请求.<br>这样A和B就建立起了一条连接.</p><p>为了知道主机A和主机B所在网络公网地址,我们需要有一台在公网中的主机来存储A和B的公网地址和端口.</p><h3 id="STUN">STUN</h3><p>STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间创建UDP通信。该协议由<a href="https://tools.ietf.org/html/rfc5389">RFC 5389</a>定义。</p><h3 id="TURN">TURN</h3><p>TURN（全名Traversal Using Relay NAT），是一种数据传输协议（data-transfer protocol）。允许在TCP或UDP的连在线跨越NAT或防火墙。<br>TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过获取应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通信开始前与TURN server进行交互，并要求TURN server产生&quot;relay port&quot;，也就是relayed-transport-address。这时TURN server会创建peer，即远程端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将数据发送至peer，再由peer转传到另一方的TURN client。该协议由<a href="https://tools.ietf.org/html/rfc5766">RFC 5766</a>定义。</p><hr><blockquote><p><a href="https://zh.wikipedia.org/wiki/STUN">STUN</a><br><a href="https://zh.wikipedia.org/wiki/TURN">TURN</a><br><a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2">网络地址转换</a><br><a href="https://blog.csdn.net/ustcgy/article/details/5655050">NAT与NAT穿透(二)</a><br><a href="https://zhuanlan.zhihu.com/p/40816201">简单解释 P2P 技术之 UDP 打洞</a><br><a href="http://www.52im.net/thread-50-1-1.html">P2P技术详解(一)：NAT详解——详细原理、P2P简介</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;NAT-网络地址转换&quot;&gt;NAT 网络地址转换&lt;/h2&gt;
&lt;p&gt;网络地址转换 NAT (Network Address Translation)  方法于1994年提出。&lt;br&gt;
需要在专用网连接到互联网的路由器上安装 NAT 软件。装有 NAT 软件的路由器叫作 NAT路由器，它至少有一个有效的外部全球IP地址。&lt;br&gt;
所有使用本地地址的主机在和外界通信时，都要在 NAT 路由器上将其本地地址转换成全球 IP 地址，才能和互联网连接。&lt;/p&gt;
&lt;h3 id=&quot;网络地址转换的过程&quot;&gt;网络地址转换的过程&lt;/h3&gt;
&lt;p&gt;内部主机 A 用本地地址 IPA 和互联网上主机 B 通信所发送的数据报必须经过 NAT 路由器。&lt;br&gt;
NAT 路由器将数据报的源地址 IPA 转换成全球地址 IPG，&lt;strong&gt;并把转换结果记录到NAT地址转换表中&lt;/strong&gt;，目的地址 IPB 保持不变，然后发送到互联网。&lt;br&gt;
NAT 路由器收到主机 B 发回的数据报时，知道数据报中的源地址是 IPB 而目的地址是 IPG。&lt;br&gt;
根据 NAT 转换表，NAT 路由器将目的地址 IPG 转换为 IPA，转发给最终的内部主机 A。&lt;/p&gt;
&lt;p&gt;网络地址转换表例子:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;+-------------+---------------+
| private IP  |   public IP   |
+-------------+---------------+
| 192.168.1.55|219.152.168.222|
+-------------+---------------+
| 192.168.1.59|219.152.168.223|
+-------------+---------------+
|192.168.1.155|219.152.168.224|
+-------------+---------------+&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="UDP" scheme="https://asutorufa.github.io/tags/UDP/"/>
    
    <category term="NAT" scheme="https://asutorufa.github.io/tags/NAT/"/>
    
  </entry>
  
  <entry>
    <title>とある番組の記録</title>
    <link href="https://asutorufa.github.io/posts/fe7367b8/"/>
    <id>https://asutorufa.github.io/posts/fe7367b8/</id>
    <published>2020-02-15T01:00:24.000Z</published>
    <updated>2020-03-12T01:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近わたくしはたくさん言葉知りました、記録したい、例えば：どこ見つかった、どうおもう。<br>今回は「２２・７　計算中」、この番組すごくおもしろい、ぜひ見てください。</p><h2 id="ツッコミ・漫才・呆け">ツッコミ・漫才・呆け</h2><p>この番組のMCは三四郎さん、おふたりはお笑い芸人ですね、この前に私は全然しらなかった、いつも「ツッコミ」を言うで、知りたいですからしらべました。</p><h2 id="パクリ">パクリ</h2><p>「滝川みうのテンションが上がる動画選手権」で都ちゃんの得点は０点、理由は彼女作りASMR動画は最初みうちゃんの自己PR動画のなかのひとつのパクリ。ここがわたくし知りました。</p><h2 id="醍醐味">醍醐味</h2><p>相田さんはとある回あるVTRの評価です。</p><h2 id="屁理屈">屁理屈</h2><p>桜ちゃんたくさん屁理屈を言った、でもかわいいです。</p><h2 id="キャバクラ">キャバクラ</h2><p>「誰かキャバクラに誘うたらどうですか？」は第７３回と７４回でひとつ問題です。神木みかみ優しすぎる、結果受ける。</p><h2 id="ため口">ため口</h2><p>じつはわたくしは日本の上下関係理解不能。なんで「先輩に対してため口なんであり得ないだろう。」、堅苦しい過ぎるじゃないか。</p><h2 id="オラオラ">オラオラ</h2><p>わたくし今覚えるのはこれは相田さん誰に評価です。</p><h2 id="オフショット・グラビア">オフショット・グラビア</h2><p>１．いつもの写真<br>２．アイドルの写真</p><h2 id="ロケ">ロケ</h2><p>多分VTRです。外へ出てに撮影すること。</p><hr><p>まだまだあるです。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近わたくしはたくさん言葉知りました、記録したい、例えば：どこ見つかった、どうおもう。&lt;br&gt;
今回は「２２・７　計算中」、この番組すごくおもしろい、ぜひ見てください。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="日本語" scheme="https://asutorufa.github.io/categories/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    
    <category term="日本語" scheme="https://asutorufa.github.io/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>用Android/PC为linux拓展屏幕</title>
    <link href="https://asutorufa.github.io/posts/4f3989f0/"/>
    <id>https://asutorufa.github.io/posts/4f3989f0/</id>
    <published>2020-02-12T18:42:51.000Z</published>
    <updated>2020-02-12T18:42:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新建虚拟屏幕">新建虚拟屏幕</h2><p>计算出拓展屏幕所需的信息.比如我想拓展1920x1200 60fps的虚拟屏幕:</p><pre class="language-bash" data-language="bash"><code class="language-bash">gtf <span class="token number">1920</span> <span class="token number">1200</span> <span class="token number">60</span></code></pre><p>结果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1920x1200 @ 60.00 Hz (GTF) hsync: 74.52 kHz; pclk: 193.16 MHz</span> Modeline <span class="token string">"1920x1200_60.00"</span>  <span class="token number">193.16</span>  <span class="token number">1920</span> <span class="token number">2048</span> <span class="token number">2256</span> <span class="token number">2592</span>  <span class="token number">1200</span> <span class="token number">1201</span> <span class="token number">1204</span> <span class="token number">1242</span>  <span class="token parameter variable">-HSync</span> +Vsync<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用xrandr添加新的mode,参数就是上面结果<code>Modeline</code>后面那些东西:</p><pre class="language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--newmode</span> <span class="token string">"1920x1200_60.00"</span>  <span class="token number">193.16</span>  <span class="token number">1920</span> <span class="token number">2048</span> <span class="token number">2256</span> <span class="token number">2592</span>  <span class="token number">1200</span> <span class="token number">1201</span> <span class="token number">1204</span> <span class="token number">1242</span>  <span class="token parameter variable">-HSync</span> +Vsync</code></pre><p>使用xrandr查看空闲的接口:</p><span id="more"></span><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span> ~ <span class="token punctuation">]</span> xrandrScreen <span class="token number">0</span>: minimum <span class="token number">8</span> x <span class="token number">8</span>, current <span class="token number">1920</span> x <span class="token number">1080</span>, maximum <span class="token number">32767</span> x <span class="token number">32767</span>eDP1 connected primary 1920x1080+0+0 <span class="token punctuation">(</span>normal left inverted right x axis y axis<span class="token punctuation">)</span> 340mm x 190mm   1920x1080     <span class="token number">60.02</span>*+  <span class="token number">40.03</span>  HDMI1 disconnected <span class="token punctuation">(</span>normal left inverted right x axis y axis<span class="token punctuation">)</span>VIRTUAL1 disconnected <span class="token punctuation">(</span>normal left inverted right x axis y axis<span class="token punctuation">)</span>HDMI-1-2 disconnected <span class="token punctuation">(</span>normal left inverted right x axis y axis<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>比如我目前在使用的屏幕是eDP1,下面都为空闲,如果有虚拟的就用虚拟的,没有虚拟的用HDMI的也行:</p><pre class="language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--addmode</span> VIRTUAL1 1920x1200_60.00</code></pre><p>拓展屏幕到左面:</p><pre class="language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--output</span> VIRTUAL1 <span class="token parameter variable">--mode</span> 1920x1200_60.00 --left-of eDP1 <span class="token comment"># &lt;- 这里也可以使用--right-of,就是拓展到左边.</span></code></pre><p>目前为止我们已经创建好了一个虚拟屏幕.</p><p>如果想删除上面新建的东西,可以使用下面的指令(注意相关参数换成自己的)或者直接重启电脑就好了.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--output</span> VIRTUAL1 <span class="token parameter variable">--off</span>xrandr <span class="token parameter variable">--delmode</span> VIRTUAL1 1920x1200_60.00xrndr <span class="token parameter variable">--rmmode</span> 1920x1200_60.00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="连接屏幕">连接屏幕</h2><p>连接屏幕可以用teamviewer或者x11vnc,以及各种远程控制电脑的软件,这里我更建议使用teamviewer,更流畅,而且方法简单.</p><h3 id="x11vnc">x11vnc</h3><pre class="language-bash" data-language="bash"><code class="language-bash">x11vnc <span class="token parameter variable">-clip</span> 1920x1200+0+0 <span class="token comment"># &lt;-这里的两个0,分别是开始剪切的x和y的坐标,如果你拓展到了右边,这里就要加上相应的大小.</span></code></pre><p>然后使用安卓上的连接vnc的软件即可,默认端口是5900.</p><h2 id="使用usb加快传输速度">使用usb加快传输速度</h2><p>把手机用usb连接到电脑上,然后用adb连接.</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb devices</code></pre><h3 id="x11vnc-2">x11vnc</h3><p>这个的默认端口是5900,将电脑端口映射到android上.</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb reverse tcp:5900 tcp:5900</code></pre><p>然后手机上直接连接127.0.0.1:5900就可以</p><h3 id="teamviewer">teamviewer</h3><p>到teamviewer官网查询,可以知道默认端口为:</p><blockquote><p>TCP / UDP端口5938<br>TCP端口443<br>TCP端口80</p></blockquote><pre class="language-bash" data-language="bash"><code class="language-bash">adb reverse tcp:5938 tcp:5938</code></pre><p>后面的443和80也可做映射,不过我这里就使用了5938就成功了.<br>然后手机上的teamviewer连接127.0.0.1就可以了.</p><h2 id="参考">参考</h2><blockquote><p><a href="https://sangams.com.np/using-android-pc-as-a-second-monitor-in-linux/">Using Android/PC as a Second Monitor in Linux</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;新建虚拟屏幕&quot;&gt;新建虚拟屏幕&lt;/h2&gt;
&lt;p&gt;计算出拓展屏幕所需的信息.比如我想拓展1920x1200 60fps的虚拟屏幕:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gtf &lt;span class=&quot;token number&quot;&gt;1920&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1200&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;结果&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 1920x1200 @ 60.00 Hz (GTF) hsync: 74.52 kHz; pclk: 193.16 MHz&lt;/span&gt;
 Modeline &lt;span class=&quot;token string&quot;&gt;&quot;1920x1200_60.00&quot;&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;193.16&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1920&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2048&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2256&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2592&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1200&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1201&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1204&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1242&lt;/span&gt;  &lt;span class=&quot;token parameter variable&quot;&gt;-HSync&lt;/span&gt; +Vsync&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用xrandr添加新的mode,参数就是上面结果&lt;code&gt;Modeline&lt;/code&gt;后面那些东西:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;xrandr &lt;span class=&quot;token parameter variable&quot;&gt;--newmode&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1920x1200_60.00&quot;&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;193.16&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1920&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2048&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2256&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2592&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1200&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1201&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1204&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1242&lt;/span&gt;  &lt;span class=&quot;token parameter variable&quot;&gt;-HSync&lt;/span&gt; +Vsync&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用xrandr查看空闲的接口:&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="android" scheme="https://asutorufa.github.io/tags/android/"/>
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux PPPOE拨号上网</title>
    <link href="https://asutorufa.github.io/posts/59c8ffd6/"/>
    <id>https://asutorufa.github.io/posts/59c8ffd6/</id>
    <published>2020-02-08T16:26:57.000Z</published>
    <updated>2020-02-08T16:26:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装rp-pppoe">安装rp-pppoe</h2><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> rp-pppoe</code></pre><h2 id="配置">配置</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pppoe-setup</code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">></span> Enter your PPPoE user name:</code></pre><p>这里输入网络运营商提供给你的用户名.</p><span id="more"></span><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">></span> Enter the Ethernet interface connected to the DSL modemFor Solaris, this is likely to be something like /dev/hme0.For Linux, it will be ethn, where <span class="token string">'n'</span> is a number. <span class="token builtin class-name">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里输入你链接网络的网卡,可以使用<code>ip addr</code>进行查看 比如<code>eth1</code>,<code>wlo1</code>.</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">></span> Enter the demand value <span class="token punctuation">(</span>default no<span class="token punctuation">)</span>:</code></pre><p>这里可以直接回车</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">></span> Enter the DNS information here:</code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">></span> Enter the secondary DNS server address here:</code></pre><p>这里输入两个DNS,比如<code>1.1.1.1</code>,<code>8.8.8.8</code>.</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">></span> Please enter your PPPoE password:  </code></pre><p>这里输入网络运营商提供给你的密码.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">The firewall choices are:<span class="token number">0</span> - NONE: This script will not <span class="token builtin class-name">set</span> any firewall rules.  You are responsible          <span class="token keyword">for</span> ensuring the security of your machine.  You are STRONGLY          recommended to use some kind of firewall rules.<span class="token number">1</span> - STANDALONE: Appropriate <span class="token keyword">for</span> a basic stand-alone web-surfing workstation<span class="token number">2</span> - MASQUERADE: Appropriate <span class="token keyword">for</span> a machine acting as an Internet gateway                <span class="token keyword">for</span> a LAN<span class="token operator">>></span><span class="token operator">></span> Choose a <span class="token builtin class-name">type</span> of firewall <span class="token punctuation">(</span><span class="token number">0</span>-2<span class="token punctuation">)</span>:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我使用1,可以按照自己的需求选择防火墙配置.</p><h2 id="启用">启用</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pppoe-start</code></pre><p>可以使用<code>ip addr</code>进行查看,现在应该有一个<code>ppp0</code>的网络.</p><h2 id="查看路由确认启用">查看路由确认启用</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span> ~ <span class="token punctuation">]</span> routeKernel IP routing tableDestination     Gateway         Genmask         Flags Metric Ref    Use Ifacedefault         <span class="token number">0.0</span>.0.0         <span class="token number">0.0</span>.0.0         U     <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> ppp0                                <span class="token punctuation">..</span>.                                <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果没有default到ppp0的这条路由,需要手动创建:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> route <span class="token function">add</span> default dev ppp0</code></pre><h2 id="引用">引用</h2><blockquote><ul><li><a href="https://www.cnblogs.com/viusuangio/p/7112674.html">archlinux pppoe拨号连接使用详解[转载]</a></li><li><a href="https://www.librehat.com/guide-on-linux-ppp-over-wireless-network/">Linux下连接无线网络后拨号（即PPP over WiFi）</a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装rp-pppoe&quot;&gt;安装rp-pppoe&lt;/h2&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pacman &lt;span class=&quot;token parameter variable&quot;&gt;-S&lt;/span&gt; rp-pppoe&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; pppoe-setup&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; Enter your PPPoE user name:&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里输入网络运营商提供给你的用户名.&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="archlinux" scheme="https://asutorufa.github.io/tags/archlinux/"/>
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV瞳孔定位</title>
    <link href="https://asutorufa.github.io/posts/88967b7c/"/>
    <id>https://asutorufa.github.io/posts/88967b7c/</id>
    <published>2020-02-06T18:15:35.000Z</published>
    <updated>2020-02-06T18:15:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用OpenCV自带的分类器识别面部及眼睛">利用OpenCV自带的分类器识别面部及眼睛</h2><p>OpenCV自带里许多分类器,可在<a href="https://github.com/opencv/opencv/tree/master/data/haarcascades">haarcascades</a>下载</p><h3 id="获取面部">获取面部</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// 获取面部</span><span class="token comment">// image 为输入的OpenCV的格式的图像</span><span class="token comment">// out 为输出图像 &lt;- 此处输出图像为裁剪下来的矩形面部图像</span><span class="token keyword">bool</span> <span class="token function">get_face</span><span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span>Mat image<span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>Mat <span class="token operator">&amp;</span>out<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 将图像转为灰度图像,可提高识别精度</span>    cv<span class="token double-colon punctuation">::</span>Mat gray<span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> CV_BGR2GRAY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 此处的rect为用来存储识别出的面部的定位 &lt;- 这里为vector是因为识别的面部可能不止为一个</span>    std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>cv<span class="token double-colon punctuation">::</span>Rect<span class="token operator">></span> rect<span class="token punctuation">;</span>    <span class="token comment">// 初始化OpenCV的分类器</span>    cv<span class="token double-colon punctuation">::</span>CascadeClassifier cas <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token function">CascadeClassifier</span><span class="token punctuation">(</span><span class="token string">"haarcascade_frontalface_default.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cas<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>gray<span class="token punctuation">,</span> rect<span class="token punctuation">,</span> <span class="token number">1.15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 判断rect是否为空,为空的话就是没有被识别的面部</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 输出图像,这里的rect可能不止为一个(因为可能不止一张脸),所以实际中应该使用for循环</span>    <span class="token comment">// 我这里用rect[0]为了简化</span>    out <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span>rect<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><h3 id="获取眼睛">获取眼睛</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// 这里与上面相同(这里我只识别左眼,OpenCV还提供了其他文件可获取右眼和双眼)</span><span class="token keyword">bool</span> <span class="token function">get_left_eye</span><span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span>Mat image<span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>Mat <span class="token operator">&amp;</span>out<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 之后与面部相同</span>    cv<span class="token double-colon punctuation">::</span>Mat gray<span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> CV_BGR2GRAY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>cv<span class="token double-colon punctuation">::</span>Rect<span class="token operator">></span> rect<span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span>CascadeClassifier cas <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token function">CascadeClassifier</span><span class="token punctuation">(</span><span class="token string">"xml/haarcascade_lefteye_2splits.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cas<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>gray<span class="token punctuation">,</span> rect<span class="token punctuation">,</span> <span class="token number">1.15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    out <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span>rect<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="瞳孔定位">瞳孔定位</h2><ul><li>获取的眼睛图像</li><li>裁剪去除眉毛</li><li>伽马矫正提高图像对比度</li><li>转化为灰度图像</li><li>利用threshold进行阈值操作(此处可能会改为inRange,目前还在测试)</li><li>腐蚀</li><li>膨胀</li><li>medianBlur平滑图像</li><li>检测关键点并画在图像上</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// 定位眼球 -> 检测关键点</span>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>cv<span class="token double-colon punctuation">::</span>KeyPoint<span class="token operator">></span> <span class="token function">dector</span><span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span>Mat image<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cv<span class="token double-colon punctuation">::</span>SimpleBlobDetector<span class="token double-colon punctuation">::</span>Params detector_params<span class="token punctuation">;</span>    detector_params<span class="token punctuation">.</span>filterByArea <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    detector_params<span class="token punctuation">.</span>maxArea <span class="token operator">=</span> <span class="token number">1500</span><span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span>Ptr<span class="token operator">&lt;</span>cv<span class="token double-colon punctuation">::</span>SimpleBlobDetector<span class="token operator">></span> blob_dector <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token class-name">SimpleBlobDetector</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>detector_params<span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>cv<span class="token double-colon punctuation">::</span>KeyPoint<span class="token operator">></span> keypoints<span class="token punctuation">;</span>    blob_dector<span class="token operator">-></span><span class="token function">detect</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> keypoints<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> keypoints<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">bool</span> <span class="token function">get_pupil</span><span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span>Mat image<span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>Mat <span class="token operator">&amp;</span>out<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// width -> image.rows ;</span>    <span class="token comment">// height -> image.cols;</span>    <span class="token comment">// cut eyebrow 裁剪 去除眉毛</span>    image <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span><span class="token function">Rect</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>cols <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>rows <span class="token operator">/</span> <span class="token number">2.5</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>cols <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>rows <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Gamma correction/gamma nonlinearity 伽马校正 -> https://www.cnblogs.com/sdu20112013/p/11597171.html</span>    cv<span class="token double-colon punctuation">::</span>Mat <span class="token function">look_up_table</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> CV_8U<span class="token punctuation">)</span><span class="token punctuation">;</span>    uchar <span class="token operator">*</span>p <span class="token operator">=</span> look_up_table<span class="token punctuation">.</span><span class="token function">ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> gamma <span class="token operator">=</span> <span class="token number">0.7</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">saturate_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>uchar<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span>i <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span> gamma<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">LUT</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> look_up_table<span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span>Mat gray<span class="token punctuation">;</span>    <span class="token comment">// 转化为灰度图像</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> CV_BGR2GRAY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 阈值操作</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">threshold</span><span class="token punctuation">(</span>gray<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> inRange_threshold<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> CV_THRESH_BINARY<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//膨胀及腐蚀</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">erode</span><span class="token punctuation">(</span>gray<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span><span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span><span class="token function">Point</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">dilate</span><span class="token punctuation">(</span>gray<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span><span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span><span class="token function">Point</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 平滑图像</span>    cv <span class="token double-colon punctuation">::</span><span class="token function">medianBlur</span><span class="token punctuation">(</span>gray<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 检测并画出关键点</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">drawKeypoints</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token function">dector</span><span class="token punctuation">(</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv<span class="token double-colon punctuation">::</span>DrawMatchesFlags<span class="token double-colon punctuation">::</span>DRAW_RICH_KEYPOINTS<span class="token punctuation">)</span><span class="token punctuation">;</span>    out <span class="token operator">=</span> image<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="附录">附录</h2><h3 id="OpenCV在ArchLinux上的使用">OpenCV在ArchLinux上的使用</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> opencv<span class="token comment"># vtk和hdf5为opencv的依赖,不安装编译会失败</span><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> vtk<span class="token function">sudo</span> pacman <span class="token parameter variable">-Ss</span> hdf5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Cmake文件">Cmake文件</h3><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.14</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>eyedector<span class="token punctuation">)</span><span class="token keyword">add_definitions</span><span class="token punctuation">(</span>-std=c++<span class="token number">11</span><span class="token punctuation">)</span><span class="token comment"># 这里只需要添加OpenCV的就能编译成功</span><span class="token keyword">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span><span class="token keyword">link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">$&#123;</span>OpenCV_LIBS<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">add_executable</span><span class="token punctuation">(</span>out opencvtest.cpp<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="利用安卓手机充当网络摄像头">利用安卓手机充当网络摄像头</h3><p>手机安装这个<a href="https://play.google.com/store/apps/details?id=com.pas.webcam">IP Webcam</a>,使用时会显示局域网中的地址</p><p>OpenCV中</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cv<span class="token double-colon punctuation">::</span>VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token string">"http://192.168.0.xx:8080/video"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这里为网络摄像头的地址,需要在后面加上/video</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cv<span class="token double-colon punctuation">::</span>Mat frame<span class="token punctuation">;</span>    cap <span class="token operator">>></span> frame<span class="token punctuation">;</span>    cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;利用OpenCV自带的分类器识别面部及眼睛&quot;&gt;利用OpenCV自带的分类器识别面部及眼睛&lt;/h2&gt;
&lt;p&gt;OpenCV自带里许多分类器,可在&lt;a href=&quot;https://github.com/opencv/opencv/tree/master/data/haarcascades&quot;&gt;haarcascades&lt;/a&gt;下载&lt;/p&gt;
&lt;h3 id=&quot;获取面部&quot;&gt;获取面部&lt;/h3&gt;
&lt;pre class=&quot;line-numbers language-cpp&quot; data-language=&quot;cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 获取面部&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// image 为输入的OpenCV的格式的图像&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// out 为输出图像 &amp;lt;- 此处输出图像为裁剪下来的矩形面部图像&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_face&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;Mat image&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;Mat &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 将图像转为灰度图像,可提高识别精度&lt;/span&gt;
    cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;Mat gray&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;image&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gray&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; CV_BGR2GRAY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 此处的rect为用来存储识别出的面部的定位 &amp;lt;- 这里为vector是因为识别的面部可能不止为一个&lt;/span&gt;
    std&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;vector&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;Rect&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 初始化OpenCV的分类器&lt;/span&gt;
    cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;CascadeClassifier cas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cv&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CascadeClassifier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;haarcascade_frontalface_default.xml&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    cas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;detectMultiScale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;gray&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 判断rect是否为空,为空的话就是没有被识别的面部&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 输出图像,这里的rect可能不止为一个(因为可能不止一张脸),所以实际中应该使用for循环&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 我这里用rect[0]为了简化&lt;/span&gt;
    out &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rect&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Computer Graphics" scheme="https://asutorufa.github.io/categories/Computer-Graphics/"/>
    
    
    <category term="C++" scheme="https://asutorufa.github.io/tags/C/"/>
    
    <category term="OpenCV" scheme="https://asutorufa.github.io/tags/OpenCV/"/>
    
    <category term="archlinux" scheme="https://asutorufa.github.io/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>http Keep-Alive</title>
    <link href="https://asutorufa.github.io/posts/d91b7c06/"/>
    <id>https://asutorufa.github.io/posts/d91b7c06/</id>
    <published>2019-12-23T23:37:32.000Z</published>
    <updated>2019-12-23T23:37:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="http-keep-alive">http keep-alive</h2><p>http头部<code>Connection: Keep-Alive</code>代表连接请求保持长连接<br><strong>如果是http代理,必须处理<code>Proxy-Connection: Keep-Alive</code>为<code>Connection: Keep-Alive</code>,如果代理没有实现<code>Keep-Alive</code>就不变或者将Connection设为close.</strong></p><p>优点:减少握手次数,如下图(图来源文章最下面)<br><img src="https://milestone-of-se.nesuke.com/wp-content/uploads/2018/12/http-keepalive-2v2.png" alt="keep-alive" loading="lazy"></p><span id="more"></span><h2 id="判断一次连接的传输结束">判断一次连接的传输结束</h2><h3 id="使用消息首部字段Conent-Length">使用消息首部字段<code>Conent-Length</code></h3><p><code>Conent-Length</code>表示实体内容长度，客户端（服务器）可以根据这个值来判断数据是否接收完成。</p><h3 id="使用Transfer-Encoding-chunked">使用<code>Transfer-Encoding: chunked</code></h3><p>chunk编码将数据分成一块一块的发生。Chunked编码将使用若干个Chunk串连而成，由一个标明长度为0的chunk标示结束。</p><hr><p>参考:</p><ul><li><a href="https://www.google.com/amp/s/milestone-of-se.nesuke.com/nw-basic/as-nw-engineer/keepalive-tcp-http/%3Famp=1">【図解】TCP Keep-Alive/http Keep-Aliveの仕組みと違い ～Client/Serverの挙動とメリット,設定～</a></li><li><a href="https://www.cnblogs.com/skynet/archive/2010/12/11/1903347.html#!comments">HTTP头部详解</a></li><li><a href="https://www.jianshu.com/p/49551bda6619">HTTP协议的Keep-Alive 模式</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;http-keep-alive&quot;&gt;http keep-alive&lt;/h2&gt;
&lt;p&gt;http头部&lt;code&gt;Connection: Keep-Alive&lt;/code&gt;代表连接请求保持长连接&lt;br&gt;
&lt;strong&gt;如果是http代理,必须处理&lt;code&gt;Proxy-Connection: Keep-Alive&lt;/code&gt;为&lt;code&gt;Connection: Keep-Alive&lt;/code&gt;,如果代理没有实现&lt;code&gt;Keep-Alive&lt;/code&gt;就不变或者将Connection设为close.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;优点:减少握手次数,如下图(图来源文章最下面)&lt;br&gt;
&lt;img src=&quot;https://milestone-of-se.nesuke.com/wp-content/uploads/2018/12/http-keepalive-2v2.png&quot; alt=&quot;keep-alive&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="HTTP" scheme="https://asutorufa.github.io/tags/HTTP/"/>
    
    <category term="proxy" scheme="https://asutorufa.github.io/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>深度学习</title>
    <link href="https://asutorufa.github.io/posts/33115a55/"/>
    <id>https://asutorufa.github.io/posts/33115a55/</id>
    <published>2019-11-09T13:50:02.000Z</published>
    <updated>2019-11-14T13:50:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>如果以下的表格及图像出现格式问题,请将你的浏览器中文字体的等宽字体设置好</strong></p><h2 id="一-预处理">一.预处理</h2><h3 id="提取特征量">提取特征量</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Human created algorithm: 人想到的算法         +-----------------------+-------<span class="token operator">></span> <span class="token operator">|</span>Human created algorithm<span class="token operator">|</span> --------<span class="token operator">></span> 答案         +-----------------------+Human created Feature quantity: 人想到的特征量      +------------------------------------------+       +---------------------------+----<span class="token operator">></span> <span class="token operator">|</span>Human created Feature quantity<span class="token punctuation">(</span>SIF,HGD<span class="token punctuation">..</span>.<span class="token punctuation">)</span><span class="token operator">|</span> ----<span class="token operator">></span> <span class="token operator">|</span>Machine learning<span class="token punctuation">(</span>svm,knn<span class="token punctuation">..</span><span class="token punctuation">)</span><span class="token operator">|</span> ---<span class="token operator">></span> 答案      +------------------------------------------+       +---------------------------+Feature quantity <span class="token function">find</span> by computer: 计算机自动寻找特征量         +-----------------------------------+         <span class="token operator">|</span>        Neural Networks            <span class="token operator">|</span>-------<span class="token operator">></span> <span class="token operator">|</span>      <span class="token punctuation">(</span>Machine learning<span class="token punctuation">)</span>           <span class="token operator">|</span> --------<span class="token operator">></span> 答案         <span class="token operator">|</span> Feature quantity <span class="token function">find</span> by computer <span class="token operator">|</span>         +-----------------------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Hyper-Parameter">Hyper-Parameter</h3><ol><li>设定超参数的范围</li><li>从设定的超参数的范围中随机采样</li><li>使用步骤1中采样到的超参数的值进行学习,通过验证数据,评估识别精度(要将epoch设置得很小)</li><li>重复步骤1和步骤2,根据他们的识别精度的结果缩小超参数的范围</li></ol><blockquote><p>超参数优化参考:贝叶斯最优化</p></blockquote><h4 id="权重">权重</h4><p>权重的初始值:不应该设置为0/1(设置为0或1,可能造成梯度消失),应选择随机生成初始值</p><blockquote><p>其他权重初始值: He初始值</p></blockquote><h4 id="输出层">输出层</h4><p>输出层的神经数量需要根据待解决的问题来决定,如:对于分类问题,输出层的神经元数量一般设定为类别的数量.</p><span id="more"></span><h2 id="二-激活函数">二.激活函数</h2><p>激活函数用来决定如何来激活(处理)输入的信号.<br>如:<br>感知器<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>b</mi><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex"> a = b + w_1x_1 + w_2x_2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">signal <span class="token builtin class-name">:</span> 输入的信号Biasing: 偏置Weight <span class="token builtin class-name">:</span> 权重+-----+---------+<span class="token operator">|</span>x1 x2<span class="token operator">|</span> Signal  <span class="token operator">|</span>+-----+---------+<span class="token operator">|</span>  b  <span class="token operator">|</span> Biasing <span class="token operator">|</span>+-----+---------+<span class="token operator">|</span>w1 w2<span class="token operator">|</span> Weight  <span class="token operator">|</span>+-----+---------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">    b   +--------------------+ <span class="token number">1</span>----<span class="token operator">></span> <span class="token operator">|</span>                    <span class="token operator">|</span>        <span class="token operator">|</span> +---+  h<span class="token punctuation">(</span><span class="token punctuation">)</span>  +---+  <span class="token operator">|</span>   w1   <span class="token operator">|</span> <span class="token operator">|</span> a <span class="token operator">|</span> ----<span class="token operator">></span> <span class="token operator">|</span> y <span class="token operator">|</span>  <span class="token operator">|</span>x1----<span class="token operator">></span> <span class="token operator">|</span> +---+       +---+  <span class="token operator">|</span>        <span class="token operator">|</span>                    <span class="token operator">|</span>   w2   <span class="token operator">|</span>                    <span class="token operator">|</span>x2----<span class="token operator">></span> <span class="token operator">|</span>                    <span class="token operator">|</span>        +--------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sigmoid函数">sigmoid函数</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex"> h(x) = \frac{1}{1+exp(-1)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3651em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="阶越函数">阶越函数</h3><p>在数学中，如果实数域上的某个函数可以用半开区间上的指示函数的有限次线性组合来表示，那么这个函数就是阶跃函数，或者叫赫维赛德函数。换一种不太正式的说法就是，阶跃函数是有限段分段常数函数的组合。</p><h3 id="ReLV-Rectified-Linear-Vnit-函数">ReLV(Rectified Linear Vnit)函数</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>x &gt; 0</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>x &lt;= 0</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)=\begin{cases}x&amp; \text{x &gt; 0}\\0&amp; \text{x &lt;= 0}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">x &gt; 0</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">x &lt;= 0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>由于hexo渲染器的问题,此处公式本来应该为两行,如下:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">        +- x <span class="token punctuation">(</span>x<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span>  <span class="token operator">|</span>        +- <span class="token number">0</span> <span class="token punctuation">(</span>x<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="三-损失函数">三.损失函数</h2><p>表示神经网络性能的&quot;恶劣程度&quot;的指标,及当前的升级网络对监督数据在多大程度上不拟合,在多大程度上不一致.</p><h3 id="均方误差">均方误差</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mo>∑</mo><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>k</mi></msub><mo>−</mo><msub><mi>t</mi><mi>k</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E = \frac{1}{2} \sum_k (y_k - t_k)^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>: 数据的维度<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">y_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 神经网络的输出<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">t_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 监督数据</p><h3 id="交叉熵误差">交叉熵误差</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mi>k</mi></msub><msub><mi>t</mi><mi>k</mi></msub><mi>log</mi><mo>⁡</mo><msub><mi>y</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">E = - \sum_k t_k \log y_k </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>: 数据的维度<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">y_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 神经网络的输出<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">t_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 监督数据</p><h2 id="四-网络层">四.网络层</h2><h3 id="sigmoid层">sigmoid层</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex"> y = \frac{1}{1+exp(-1)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3651em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="Affine层-仿射变换">Affine层(仿射变换)</h3><p>仿射变换包括一次线性变换和一次平移变换,分别对应神经网络的加权和运算与加偏置运算</p><h3 id="Convolutional-Neural-Network-卷积神经网络-CNN">Convolutional Neural Network(卷积神经网络,CNN)</h3><h4 id="卷积层">卷积层</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">                       滤波器<span class="token punctuation">(</span>相当于权重<span class="token punctuation">)</span>                     偏置+---+---+---+---+<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span>       +---+---+---++---+---+---+---+       <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span>         +---+---+                 +---+---+<span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span>       +---+---+---+         <span class="token operator">|</span><span class="token number">15</span> <span class="token operator">|</span> <span class="token number">16</span><span class="token operator">|</span>    +---+        <span class="token operator">|</span><span class="token number">18</span> <span class="token operator">|</span> <span class="token number">19</span><span class="token operator">|</span>+---+---+---+---+   ⨀   <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span>  ----<span class="token operator">></span>  +---+---+  + <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span>   ---<span class="token operator">></span> +---+---+<span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span>       +---+---+---+         <span class="token operator">|</span> <span class="token number">6</span> <span class="token operator">|</span> <span class="token number">15</span><span class="token operator">|</span>    +---+        <span class="token operator">|</span> <span class="token number">9</span> <span class="token operator">|</span> <span class="token number">18</span><span class="token operator">|</span>+---+---+---+---+       <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span>         +---+---+                 +---+---+<span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span>       +---+---+---++---+---+---+---+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mi>H</mi></msub><mo>=</mo><mfrac><mrow><mi>H</mi><mo>+</mo><mn>2</mn><mi>P</mi><mo>−</mo><msub><mi>F</mi><mi>H</mi></msub></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O_H = \frac{H+2P-F_H}{S} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2336em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mi>W</mi></msub><mo>=</mo><mfrac><mrow><mi>W</mi><mo>+</mo><mn>2</mn><mi>P</mi><mo>−</mo><msub><mi>F</mi><mi>W</mi></msub></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O_W = \frac{W+2P-F_W}{S} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2336em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span><br>输出大小: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mi>H</mi></msub><mo separator="true">,</mo><msub><mi>O</mi><mi>W</mi></msub></mrow><annotation encoding="application/x-tex">O_H,O_W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>滤波器大小: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>H</mi></msub><mo separator="true">,</mo><msub><mi>F</mi><mi>W</mi></msub></mrow><annotation encoding="application/x-tex">F_H,F_W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>填充大小: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span> , 调整输出大小为相同大小的矩阵<br>步幅: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> , 应用滤波器的间隔</p><h4 id="池化层-缩小高长方向上的空间的运算-提高鲁棒性">池化层(缩小高长方向上的空间的运算,提高鲁棒性)</h4><p>如:max池</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">                  Max池+---+---+---+---+<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span>+---+---+---+---+             +---+---+<span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span>     Max     <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span>+---+---+---+---+  -------<span class="token operator">></span>   +---+---+<span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span>             <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span>+---+---+---+---+             +---+---+<span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span>+---+---+---+---+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="全连接层">全连接层</h4><p>全连接层就是一般的激活函数,在tensorflow也是Dense,放在卷积层和池化层之后进行数据的处理</p><h4 id="CNN代表网络">CNN代表网络</h4><h5 id="LeNet">LeNet</h5><p>激活函数: sigmoid<br>池化方法: 子采样</p><h5 id="AlexNet">AlexNet</h5><p>激活函数: ReLV<br>局部正规化 LRN(Local Response Normalization)并使用Dropout</p><h2 id="五-优化函数">五.优化函数</h2><h3 id="梯度下降法">梯度下降法</h3><ul><li>导数: 使用数值微分近似替代导数</li><li>偏导数: 与导数相同</li><li>梯度: 由全部变量的偏导数汇总而成的向量称为梯度,方向向量变化最快的地方,方向向量的导数.<br>如:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>γ</mi><mi>f</mi></msub><msub><mi>γ</mi><msub><mi>x</mi><mn>0</mn></msub></msub></mfrac><mo separator="true">,</mo><mfrac><msub><mi>γ</mi><mi>f</mi></msub><msub><mi>γ</mi><msub><mi>x</mi><mn>1</mn></msub></msub></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> (\frac{\gamma_f}{\gamma_{x_0}},\frac{\gamma_f}{\gamma_{x_1}}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4094em;vertical-align:-0.5949em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8145em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.6444em;"></span><span class="mord mtight">0</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2996em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.357em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5131em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5949em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8145em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.6444em;"></span><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2996em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.357em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5131em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5949em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></li><li>负梯度方向: 是梯度法中变量更新的方向,梯度指示的方向是各点处的函数值减少量最多的方向.</li><li>步骤<ol><li>mini-batch</li><li>计算梯度: 求出各个权重参数的梯度</li><li>更新参数: 将权重沿梯度方向进行微小更新</li><li>重复: 重复步骤1,2,3</li></ol></li></ul><h4 id="BGD-批量梯度下降法">BGD(批量梯度下降法)</h4><p>是梯度下降法的其中一种</p><h4 id="SGD-随机梯度下降法">SGD(随机梯度下降法)</h4><p>是梯度下降法的其中一种<br>随机梯度下降是通过每个样本来迭代更新一次，对比上面的批量梯度下降，迭代一次需要用到所有训练样本</p><h4 id="M-BGD-min-batch-小批量梯度下降法">M-BGD(min-batch 小批量梯度下降法)</h4><p>min-batch: 在所有数据中,随机选取一部分数据</p><h3 id="Momentum">Momentum</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>←</mo><mi>α</mi><mi>v</mi><mo>−</mo><mi>η</mi><mfrac><msub><mi>γ</mi><mi>L</mi></msub><msub><mi>γ</mi><mi>W</mi></msub></mfrac></mrow><annotation encoding="application/x-tex"> v \leftarrow \alpha{v} - \eta{\frac{\gamma_L}{\gamma_W}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2286em;vertical-align:-0.4811em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>←</mo><mi>W</mi><mo>+</mo><mi>v</mi></mrow><annotation encoding="application/x-tex"> W \leftarrow W + v </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>: 权重<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><msub><mi>γ</mi><mi>L</mi></msub><msub><mi>γ</mi><mi>W</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{\gamma_L}{\gamma_W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2286em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>: 损失函数关于W的梯度<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span>: 学习率<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>: 速度</p><h3 id="AdaGrad">AdaGrad</h3><p>为参数的每个元素适当的调整学习率<br>learning rate decay:学习率衰减的方法,一开始&quot;多&quot;学,然后逐渐少学<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>←</mo><mi>h</mi><mo>+</mo><mfrac><msub><mi>γ</mi><mi>L</mi></msub><msub><mi>γ</mi><mi>W</mi></msub></mfrac><mo>⨀</mo><mfrac><msub><mi>γ</mi><mi>L</mi></msub><msub><mi>γ</mi><mi>W</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">h \leftarrow h + \frac{\gamma_L}{\gamma_W} \bigodot \frac{\gamma_L}{\gamma_W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2311em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⨀</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>←</mo><mi>W</mi><mo>−</mo><mi>η</mi><mfrac><mn>1</mn><msqrt><mi>h</mi></msqrt></mfrac><mfrac><msub><mi>γ</mi><mi>L</mi></msub><msub><mi>γ</mi><mi>W</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">W \leftarrow W - \eta{\frac{1}{\sqrt h}}{\frac{\gamma_L}{\gamma_W}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.5335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9378em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal mtight" style="padding-left:0.833em;">h</span></span><span style="top:-2.8978em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1022em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⨀</mo></mrow><annotation encoding="application/x-tex">\bigodot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⨀</span></span></span></span>: 表示对立矩阵元素的乘法<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>: 权重参数<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><msub><mi>γ</mi><mi>L</mi></msub><msub><mi>γ</mi><mi>W</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{\gamma_L}{\gamma_W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2286em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>: 损失函数关于W的梯度<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span>: 学习率</p><h3 id="Adam-融合AdaGrad和Momentum">Adam(融合AdaGrad和Momentum)</h3><p>具体内容请查看原论文</p><h3 id="抑制过拟合">抑制过拟合</h3><h3 id="softMax层">softMax层</h3><p>softMax层是把输入值正规化后再输出</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">        +---+<span class="token number">5.3</span> --<span class="token operator">></span> <span class="token operator">|</span> s <span class="token operator">|</span> --<span class="token operator">></span> <span class="token number">0.008</span><span class="token number">0.3</span> --<span class="token operator">></span> <span class="token operator">|</span> o <span class="token operator">|</span> --<span class="token operator">></span> <span class="token number">0.00005</span><span class="token number">10.1</span>--<span class="token operator">></span> <span class="token operator">|</span> f <span class="token operator">|</span> --<span class="token operator">></span> <span class="token number">0.991</span>   <span class="token builtin class-name">.</span>    <span class="token operator">|</span> t <span class="token operator">|</span>  <span class="token builtin class-name">.</span>   <span class="token builtin class-name">.</span>    <span class="token operator">|</span> m <span class="token operator">|</span>  <span class="token builtin class-name">.</span>   <span class="token builtin class-name">.</span>    <span class="token operator">|</span> a <span class="token operator">|</span>  <span class="token builtin class-name">.</span>   <span class="token builtin class-name">.</span>    <span class="token operator">|</span> x <span class="token operator">|</span>  <span class="token builtin class-name">.</span><span class="token number">0.01</span>--<span class="token operator">></span> <span class="token operator">|</span>   <span class="token operator">|</span> --<span class="token operator">></span> <span class="token number">0.00004</span>        +---+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="batch-normalization-批量正则化">batch normalization(批量正则化)</h4><h5 id="正则化">正则化</h5><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>B</mi></msub><mo>←</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mu_B \leftarrow {\frac{1}{m}}{\sum_{i=1}^m}{x_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>B</mi><mn>2</mn></msubsup><mo>←</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>B</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">\sigma^2_B \leftarrow {\frac{1}{m}}{\sum_{i=1}^m}{(x_i-\mu_B)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0894em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4247em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo>←</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>B</mi></msub></mrow><msqrt><mrow><msubsup><mi>σ</mi><mi>B</mi><mn>2</mn></msubsup><mo>+</mo><mi>ε</mi></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\hat{x}_i \leftarrow \frac{x_i-\mu_B}{\sqrt {\sigma^2_B + \varepsilon}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.684em;vertical-align:-0.8296em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8544em;"><span style="top:-2.4761em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0198em;"><span class="svg-align" style="top:-3.4286em;"><span class="pstrut" style="height:3.4286em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1607em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3393em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">ε</span></span></span><span style="top:-2.9918em;"><span class="pstrut" style="height:3.4286em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5429em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.5429em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4368em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8296em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">\mu_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 均值<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>B</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0894em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4247em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span></span></span></span>: 方差<br>进行缩放和平移: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>←</mo><mi>γ</mi><msub><mover accent="true"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo>+</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">y_i \leftarrow \gamma \hat{x}_i + \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>为参数,初值为1和0)</p><p>正则化步骤:</p><ol><li>权值衰减(抑制过拟合): 为损失函数加上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>λ</mi><msup><mi>W</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">{\frac{1}{2}}{\lambda}{W^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mord"><span class="mord mathnormal">λ</span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span>:控制正则化强度的超参数 W:权重)</li><li>Dropout:在学习过程中随机删除神经元的方法</li></ol><h2 id="六-整个训练过程">六.整个训练过程</h2><ol><li>初始化<ul><li>网络初始化</li><li>优化器初始化</li></ul></li><li>mini-batch</li><li>计算梯度 -&gt; 更新梯度 -&gt; 优化梯度</li><li>获取损失函数</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;如果以下的表格及图像出现格式问题,请将你的浏览器中文字体的等宽字体设置好&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;一-预处理&quot;&gt;一.预处理&lt;/h2&gt;
&lt;h3 id=&quot;提取特征量&quot;&gt;提取特征量&lt;/h3&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Human created algorithm: 人想到的算法
         +-----------------------+
-------&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;Human created algorithm&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; --------&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 答案
         +-----------------------+

Human created Feature quantity: 人想到的特征量
      +------------------------------------------+       +---------------------------+
----&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;Human created Feature quantity&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SIF,HGD&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; ----&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;Machine learning&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;svm,knn&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; ---&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 答案
      +------------------------------------------+       +---------------------------+

Feature quantity &lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; by computer: 计算机自动寻找特征量
         +-----------------------------------+
         &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;        Neural Networks            &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
-------&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Machine learning&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;           &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; --------&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 答案
         &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; Feature quantity &lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; by computer &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
         +-----------------------------------+&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;Hyper-Parameter&quot;&gt;Hyper-Parameter&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;设定超参数的范围&lt;/li&gt;
&lt;li&gt;从设定的超参数的范围中随机采样&lt;/li&gt;
&lt;li&gt;使用步骤1中采样到的超参数的值进行学习,通过验证数据,评估识别精度(要将epoch设置得很小)&lt;/li&gt;
&lt;li&gt;重复步骤1和步骤2,根据他们的识别精度的结果缩小超参数的范围&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;超参数优化参考:贝叶斯最优化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;权重&quot;&gt;权重&lt;/h4&gt;
&lt;p&gt;权重的初始值:不应该设置为0/1(设置为0或1,可能造成梯度消失),应选择随机生成初始值&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其他权重初始值: He初始值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输出层&quot;&gt;输出层&lt;/h4&gt;
&lt;p&gt;输出层的神经数量需要根据待解决的问题来决定,如:对于分类问题,输出层的神经元数量一般设定为类别的数量.&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://asutorufa.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Deep Learning" scheme="https://asutorufa.github.io/tags/Deep-Learning/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言学习</title>
    <link href="https://asutorufa.github.io/posts/4f95e9f6/"/>
    <id>https://asutorufa.github.io/posts/4f95e9f6/</id>
    <published>2019-09-01T13:57:00.000Z</published>
    <updated>2019-09-08T00:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近想了解一下c是如何编译为汇编语言的<br>首先写了一个相当简单的c</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"stdio.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>    <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d"</span><span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用<code>gcc -S</code>编译为汇编语言:</p><pre class="line-numbers language-nasm" data-language="nasm"><code class="language-nasm"> .file <span class="token string">"hello.c"</span> .text .section .rodata<span class="token label function">.LC0:</span> .string <span class="token string">"%d %d"</span> .text .globl main .type main, @function<span class="token label function">main:</span><span class="token label function">.LFB0:</span> .cfi_startproc pushq <span class="token operator">%</span><span class="token register variable">rbp</span> .cfi_def_cfa_offset <span class="token number">16</span> .cfi_offset <span class="token number">6</span>, <span class="token operator">-</span><span class="token number">16</span> movq <span class="token operator">%</span><span class="token register variable">rsp</span>, <span class="token operator">%</span><span class="token register variable">rbp</span> .cfi_def_cfa_register <span class="token number">6</span> subq <span class="token number">$16</span>, <span class="token operator">%</span><span class="token register variable">rsp</span> movl <span class="token number">$1</span>, <span class="token operator">-</span><span class="token number">16</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token number">$2</span>, <span class="token operator">-</span><span class="token number">12</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token operator">-</span><span class="token number">16</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">edx</span> movl <span class="token operator">-</span><span class="token number">12</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">eax</span> addl <span class="token operator">%</span><span class="token register variable">edx</span>, <span class="token operator">%</span><span class="token register variable">eax</span> movl <span class="token operator">%</span><span class="token register variable">eax</span>, <span class="token operator">-</span><span class="token number">8</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token number">$7</span>, <span class="token operator">-</span><span class="token number">4</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token operator">-</span><span class="token number">4</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">edx</span> movl <span class="token operator">-</span><span class="token number">8</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">eax</span> movl <span class="token operator">%</span><span class="token register variable">eax</span>, <span class="token operator">%</span><span class="token register variable">esi</span> leaq .LC0(<span class="token operator">%</span>rip), <span class="token operator">%</span><span class="token register variable">rdi</span> movl <span class="token number">$0</span>, <span class="token operator">%</span><span class="token register variable">eax</span> call printf@PLT movl <span class="token number">$0</span>, <span class="token operator">%</span><span class="token register variable">eax</span> leave .cfi_def_cfa <span class="token number">7</span>, <span class="token number">8</span> ret .cfi_endproc<span class="token label function">.LFE0:</span> .size main, .<span class="token operator">-</span>main .ident <span class="token string">"GCC: (GNU) 9.1.0"</span> .section .note.GNU<span class="token operator">-</span>stack,<span class="token string">""</span>,@progbits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以”点”做为前缀的指令都是用来指导汇编器的命令。<br>精简一下差不多这样:<span id="more"></span></p><pre class="line-numbers language-nasm" data-language="nasm"><code class="language-nasm"><span class="token label function">.LC0:</span> .string <span class="token string">"%d %d"</span> .text .globl main .type main, @function<span class="token label function">main:</span> pushq <span class="token operator">%</span><span class="token register variable">rbp</span> movq <span class="token operator">%</span><span class="token register variable">rsp</span>, <span class="token operator">%</span><span class="token register variable">rbp</span> movl <span class="token number">$1</span>, <span class="token operator">-</span><span class="token number">16</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token number">$2</span>, <span class="token operator">-</span><span class="token number">12</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token operator">-</span><span class="token number">16</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">edx</span> movl <span class="token operator">-</span><span class="token number">12</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">eax</span> addl <span class="token operator">%</span><span class="token register variable">edx</span>, <span class="token operator">%</span><span class="token register variable">eax</span> movl <span class="token operator">%</span><span class="token register variable">eax</span>, <span class="token operator">-</span><span class="token number">8</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token number">$7</span>, <span class="token operator">-</span><span class="token number">4</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>) movl <span class="token operator">-</span><span class="token number">4</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">edx</span> movl <span class="token operator">-</span><span class="token number">8</span>(<span class="token operator">%</span><span class="token register variable">rbp</span>), <span class="token operator">%</span><span class="token register variable">eax</span> movl <span class="token operator">%</span><span class="token register variable">eax</span>, <span class="token operator">%</span><span class="token register variable">esi</span> leaq .LC0(<span class="token operator">%</span>rip), <span class="token operator">%</span><span class="token register variable">rdi</span> movl <span class="token number">$0</span>, <span class="token operator">%</span><span class="token register variable">eax</span> call printf@PLT movl <span class="token number">$0</span>, <span class="token operator">%</span><span class="token register variable">eax</span> leave ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先了解一下几个寄存器<sup><a href="#1"><font color=red>[1]</font></a></sup></p><ul><li>%rbp 是栈帧指针，用于标识当前栈帧的起始位置</li><li>%rsp 是堆栈指针寄存器，通常会指向栈顶位置，堆栈的 pop 和push 操作就是通过改变 %rsp 的值即移动堆栈指针的位置来实现的。</li><li>%eax 是&quot;累加器&quot;(accumulator), 它是很多加法乘法指令的缺省寄存器。</li><li>%edx 则总是被用来放整数除法产生的余数。</li><li>%rip 指令地址寄存器，用来存储 CPU 即将要执行的指令地址。每次 CPU 执行完相应的汇编指令之后，rip 寄存器的值就会自行累加；rip 无法直接赋值，call, ret, jmp 等指令可以修改 rip。</li><li>%rdi，%rsi，%rdx，%rcx，%r8，%r9 用作函数参数，依次对应第1参数，第2参数。</li><li>ESI/EDI 分别叫做&quot;源/目标索引寄存器&quot;(source/destination index),因为在很多字符串操作指令中, DS:ESI指向源串,而ES:EDI指向目标串.</li></ul><pre class="line-numbers language-nasm" data-language="nasm"><code class="language-nasm">pushq <span class="token operator">%</span><span class="token register variable">rbp</span>movq <span class="token operator">%</span><span class="token register variable">rsp</span>, <span class="token operator">%</span><span class="token register variable">rbp</span>确认栈<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>movl $1, -16(%rbp)</code> 把1移入寄存器rbq中-16是地址起始位置<br><code>movl $2, -12(%rbp)</code> 跟上面相同<br><code>movl -16(%rbp), %edx</code> 把<code>-16(%rbp)</code>移入寄存器edx中,上面可知就是把1移入edx中<br><code>movl -12(%rbp), %eax</code> 跟上面类似 不过这次用的是寄存器eax<br><code>addl %edx, %eax</code> 把edx和eax中的内容相加,并存入edx中<br><code>movl %eax, -8(%rbp)</code> 把eax中的内容存入rbq中位置为-8<br><code>movl $7, -4(%rbp)</code> 把7存入rbq位置为-4,对应c代码为<code>int d = 3 + 4</code>,由此可知编译器在编译时其实是会进行相应优化的<br><code>.LC0(%rip)</code>は、printfが使うアドレス、前もってprintfで使用する書式を設定している(就是说设置printf使用的地址,并提前设置格式)<sup><a href="#2"><font color=red>[2]</font></a></sup><br><code>call printf@PLT</code> 调用printf<br><code>leave</code> 离开printf<br><code>ret</code>:结束当前函数</p><hr><p>接下来我们可以简单的实战一下:<br>给gcc开启O3级别的优化:</p><pre class="language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-S</span></code></pre><p>生成的汇编码:</p><pre class="line-numbers language-nasm" data-language="nasm"><code class="language-nasm"> .file <span class="token string">"hello.c"</span> .text .section .rodata.str1<span class="token number">.1</span>,<span class="token string">"aMS"</span>,@progbits,<span class="token number">1</span><span class="token label function">.LC0:</span> .string <span class="token string">"%d %d"</span> .section .text.startup,<span class="token string">"ax"</span>,@progbits .p2align <span class="token number">4</span> .globl main .type main, @function<span class="token label function">main:</span><span class="token label function">.LFB11:</span> .cfi_startproc subq <span class="token number">$8</span>, <span class="token operator">%</span><span class="token register variable">rsp</span> .cfi_def_cfa_offset <span class="token number">16</span> movl <span class="token number">$7</span>, <span class="token operator">%</span><span class="token register variable">edx</span> movl <span class="token number">$3</span>, <span class="token operator">%</span><span class="token register variable">esi</span> xorl <span class="token operator">%</span><span class="token register variable">eax</span>, <span class="token operator">%</span><span class="token register variable">eax</span> leaq .LC0(<span class="token operator">%</span>rip), <span class="token operator">%</span><span class="token register variable">rdi</span> call printf@PLT xorl <span class="token operator">%</span><span class="token register variable">eax</span>, <span class="token operator">%</span><span class="token register variable">eax</span> addq <span class="token number">$8</span>, <span class="token operator">%</span><span class="token register variable">rsp</span> .cfi_def_cfa_offset <span class="token number">8</span> ret .cfi_endproc<span class="token label function">.LFE11:</span> .size main, .<span class="token operator">-</span>main .ident <span class="token string">"GCC: (GNU) 9.1.0"</span> .section .note.GNU<span class="token operator">-</span>stack,<span class="token string">""</span>,@progbits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从以上汇编代码中我们可以发现,优化之后的汇编代码将最后相加的值给了内存,而不像之前那样先占用两个内存空间然后再相加.</p><hr><blockquote><p>[1] <a id="1"><a href="https://zhuanlan.zhihu.com/p/27339191">x86-64 下函数调用及栈帧原理</a></a><br>[2] <a id="2"><a href="https://qiita.com/diggy-mo/items/fe56f6ea357e5928a8ca">アセンブラ学習log_1</a></a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近想了解一下c是如何编译为汇编语言的&lt;br&gt;
首先写了一个相当简单的c&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-cpp&quot; data-language=&quot;cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;stdio.h&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; b &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; c &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; d &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用&lt;code&gt;gcc -S&lt;/code&gt;编译为汇编语言:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-nasm&quot; data-language=&quot;nasm&quot;&gt;&lt;code class=&quot;language-nasm&quot;&gt; .file &lt;span class=&quot;token string&quot;&gt;&quot;hello.c&quot;&lt;/span&gt;
 .text
 .section .rodata
&lt;span class=&quot;token label function&quot;&gt;.LC0:&lt;/span&gt;
 .string &lt;span class=&quot;token string&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;
 .text
 .globl main
 .type main, @function
&lt;span class=&quot;token label function&quot;&gt;main:&lt;/span&gt;
&lt;span class=&quot;token label function&quot;&gt;.LFB0:&lt;/span&gt;
 .cfi_startproc
 pushq &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;
 .cfi_def_cfa_offset &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;
 .cfi_offset &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;
 movq &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rsp&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;
 .cfi_def_cfa_register &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;
 subq &lt;span class=&quot;token number&quot;&gt;$16&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rsp&lt;/span&gt;
 movl &lt;span class=&quot;token number&quot;&gt;$1&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;)
 movl &lt;span class=&quot;token number&quot;&gt;$2&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;)
 movl &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;), &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;edx&lt;/span&gt;
 movl &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;), &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;
 addl &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;edx&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;
 movl &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;)
 movl &lt;span class=&quot;token number&quot;&gt;$7&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;)
 movl &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;), &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;edx&lt;/span&gt;
 movl &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rbp&lt;/span&gt;), &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;
 movl &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;esi&lt;/span&gt;
 leaq .LC0(&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;rip), &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;rdi&lt;/span&gt;
 movl &lt;span class=&quot;token number&quot;&gt;$0&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;
 call printf@PLT
 movl &lt;span class=&quot;token number&quot;&gt;$0&lt;/span&gt;, &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token register variable&quot;&gt;eax&lt;/span&gt;
 leave
 .cfi_def_cfa &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;
 ret
 .cfi_endproc
&lt;span class=&quot;token label function&quot;&gt;.LFE0:&lt;/span&gt;
 .size main, .&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;main
 .ident &lt;span class=&quot;token string&quot;&gt;&quot;GCC: (GNU) 9.1.0&quot;&lt;/span&gt;
 .section .note.GNU&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;stack,&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;,@progbits&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以”点”做为前缀的指令都是用来指导汇编器的命令。&lt;br&gt;
精简一下差不多这样:</summary>
    
    
    
    <category term="assembly" scheme="https://asutorufa.github.io/categories/assembly/"/>
    
    
    <category term="汇编语言" scheme="https://asutorufa.github.io/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
    <category term="assembly" scheme="https://asutorufa.github.io/tags/assembly/"/>
    
  </entry>
  
  <entry>
    <title>nodejs异步回调函数</title>
    <link href="https://asutorufa.github.io/posts/5938ae8c/"/>
    <id>https://asutorufa.github.io/posts/5938ae8c/</id>
    <published>2019-08-30T22:45:20.000Z</published>
    <updated>2019-08-30T22:45:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>研究了一下javascript的异步回调函数,本来想像golang那样使用chan可以返回原始值,不过貌似无法做到,最后止步async/await,差不多就是用Promise的resolve返回值然后用await调用,不过await必须使用在async的函数里,局限还是有的.<br>如果使用非async的函数调用,返回的依旧是Promise类型,需要使用.then.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;研究了一下javascript的异步回调函数,本来想像golang那样使用chan可以返回原始值,不过貌似无法做到,最后止步async/await,差不多就是用Promise的resolve返回值然后用await调用,不过await必须使用在async的函数里,局限还是有的</summary>
        
      
    
    
    
    <category term="nodejs" scheme="https://asutorufa.github.io/categories/nodejs/"/>
    
    
    <category term="nodejs" scheme="https://asutorufa.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>archlinux安装记录</title>
    <link href="https://asutorufa.github.io/posts/e3707853/"/>
    <id>https://asutorufa.github.io/posts/e3707853/</id>
    <published>2019-08-03T00:18:40.000Z</published>
    <updated>2022-10-25T04:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>详细安装教程请参考arch wiki <a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Installation guide (简体中文)</a>,此处只记录安装后遇到的问题.</p><hr><p>暗影精灵2 PRO 静音LED不起作用和左边耳机会有噼里啪啦声:<br>具体解决方法我已经写到archwiki里了,请看: <a href="https://wiki.archlinux.org/index.php?title=Laptop/HP#HP_Omen_15_ax210TX">Laptop/HP#HP_Omen_15_ax210TX</a></p><hr><p>grub更新菜单</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">grub-mkconfig</span> <span class="token parameter variable">-o</span> /boot/grub/grub.cfg  </code></pre><p>安装os-prober让grub检测到其他系统并自动创建引导</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> os-prober</code></pre><p>使用system-boot(就是直接使用linux内核引导系统,不再需要grub,如果有多系统不推荐,会把efi分区搞得很乱):</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> efibootmgr dosfstools<span class="token comment"># 此处注意:此处要把efi分区挂载为/boot,而非平常的/boot/efi</span>bootctl <span class="token function">install</span> <span class="token parameter variable">--path</span><span class="token operator">=</span>/boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><span id="more"></span><p><strong>关于efi的部分可以看我的另一贴.</strong></p><p>arch 安装应用后 应用菜单不刷新怎么办(这个正常情况是不会遇到的,只是刚装完有些功能不完整会这样,我就遇到了):</p><pre class="language-bash" data-language="bash"><code class="language-bash">kbuildsycoca5 <span class="token parameter variable">--noincremental</span></code></pre><hr><p>新增用户<sup><a href='#1'><font color=red>[1]</font></a></sup>:<br>首先添加一个用户，并把它加到wheel组</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token parameter variable">-G</span> wheel <span class="token parameter variable">-s</span> /bin/bash  <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span></code></pre><p>然后为这个用户设置密码</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span></code></pre><p>最后设置wheel组的用户能用sudo获取root权限:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">visudo    <span class="token comment">#找到这样的一行,把前面的#去掉:</span>    <span class="token comment">#%wheel ALL=(ALL) ALL</span>按ESC键，输入x<span class="token operator">!</span>回车就可以保存并退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><p>关闭NetworkManager网络检查(ping.archlinux.org有时候会被墙-_-)<br><a href="https://wiki.archlinux.org/title/NetworkManager#Checking_connectivity">NetworkManager#Checking_connectivity</a></p><p>启用dhcp自动获取网络地址,不然开机无法自动联网</p><pre class="language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> dhcpcd.service</code></pre><p>如果只使用有线网络 可以使用<a href="https://wiki.archlinux.org/index.php/Systemd-networkd">Systemd-networkd</a><br>——以下已包含dhcp的功能,下面两条命令包括上面那个的功能——</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-s</span> networkmanagersystemctl <span class="token builtin class-name">enable</span> NetworkManager  <span class="token comment"># 启动这个后开机有个NetworkManager-wait-online会占用大概6s的时间,嫌慢的可以屏蔽</span>systemctl mask NetworkManager-wait-online<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><p>安装一个图形界面,比如kde</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> plasma-desktopsystemctl start sddm.service  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>缩略图生成<br>若要在桌面和 Dolphin 内为媒体或文档文件生成缩略图，安装 <code>kdegraphics-thumbnailers</code>，<code>ffmpegthumbs</code>。</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> kdegraphics-thumbnailers ffmpegthumbs</code></pre><p>一些gtk应用的plasma panel托盘图标模糊且右键菜单比较奇怪<br>解决方法: 安装libappindicator-gtk3 libappindicator-gtk2</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> libappindicator-gtk3 libappindicator-gtk2</code></pre><p>安装一个终端,不然进入图形界面只能进tty输入命令</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> konsole</code></pre><hr><p>无法检测到蓝牙适配器:<br>安装<code>bluez</code>,<code>bluez-utils</code></p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> bluez bluez-utils</code></pre><p>首先确定内核的蓝牙模块已载入</p><pre class="language-bash" data-language="bash"><code class="language-bash">modinfo btusb</code></pre><p>如果没有的话就是没载入,手动载入:</p><pre class="language-bash" data-language="bash"><code class="language-bash">modprobe btusb</code></pre><p>开启bluetooth服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start bluetooth<span class="token comment"># 开机自启</span>systemctl <span class="token builtin class-name">enable</span> bluetooth<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>开机后自动启动:<br>修改 <code>/etc/bluetooth/main.conf</code></p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Policy</span><span class="token punctuation">]</span></span><span class="token comment"># 这一句的注释删除 并将false改成true</span><span class="token key attr-name">AutoEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>已知问题:<br>有时候会崩溃,且无法找到蓝牙适配器,使用<code>dmesg</code>查看错误日志.</p><hr><p>蓝牙耳机可能载入模块失败</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pactl load-module module-bluetooth-discoverFailure: Module initialization failed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>临时解决方法:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pactl unload-module  module-bluetooth-discoverpactl   load-module  module-bluetooth-discover<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>长期解决方法<sup><a href='#2'><font color=red>[2]</font></a></sup>:</p><p>Edit the file:</p><pre class="language-bash" data-language="bash"><code class="language-bash">/etc/pulse/default.pa</code></pre><p>and comment out (with an # at the beginning of the line) the following line:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#load-module module-bluetooth-discover</span></code></pre><p>now edit the file:</p><pre class="language-bash" data-language="bash"><code class="language-bash">/usr/bin/start-pulseaudio-x11</code></pre><p>and after the lines:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> x”<span class="token environment constant">$SESSION_MANAGER</span>” <span class="token operator">!=</span> x <span class="token punctuation">]</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>     /usr/bin/pactl load-module module-x11-xsmp “display<span class="token operator">=</span><span class="token environment constant">$DISPLAY</span> <span class="token assign-left variable">session_manager</span><span class="token operator">=</span><span class="token environment constant">$SESSION_MANAGER</span>” <span class="token operator">></span> /dev/null <span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>add the following line:</p><pre class="language-bash" data-language="bash"><code class="language-bash">/usr/bin/pactl load-module module-bluetooth-discover</code></pre><p>This way the Pulse audio’s Bluetooth modules will not be downloaded at boot time but after x11 is started.</p><hr><p>字体优化:<br>有些字体可能看不见,比如 𫔭 𪠸 :</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装 ttf-hanazono ttf-ume(mincho) 字体</span>pacman <span class="token parameter variable">-S</span> ttf-hanazono ttf-ume<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>不要使用noto和思源黑体的亚洲字体整合包,因为会优先使用日语字体,造成中文大小不一,尽量下载思源黑体的分开的字体包,然后在<code>~/.config/fontconfig/fonts.conf</code>中将中文的思源黑体设置为第一个,具体设置参考<a href="https://wiki.archlinux.org/index.php/Font_configuration">Font_configuration</a></p><hr><p>解决DNS污染问题:<br>安装dnscrypt-proxy 具体方法参见arch wiki <a href="https://wiki.archlinux.org/index.php/Dnscrypt-proxy">dnscrypt-proxy</a>,使用<a href="https://github.com/felixonmars/dnsmasq-china-list">dnsmasq-china-list</a>排除中国域名</p><hr><p>arch 使用pyhon-dlib会提示<code>Undefined symbol: cblas_dtrsm</code><br>使用aur或archlinuxcn中的openblas-lapack-git代替pacman源中的cblas,貌似源中的cblas版本太低</p><hr><p>自动清除pacman的缓存:<br>创建<code>/usr/share/libalpm/hooks/clean-pacman-cache.hook</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Trigger<span class="token punctuation">]</span>Operation <span class="token operator">=</span> RemoveOperation <span class="token operator">=</span> InstallOperation <span class="token operator">=</span> UpgradeType <span class="token operator">=</span> PackageTarget <span class="token operator">=</span> *<span class="token punctuation">[</span>Action<span class="token punctuation">]</span>Description <span class="token operator">=</span> Cleaning up old packages<span class="token punctuation">..</span>.When <span class="token operator">=</span> PostTransactionExec <span class="token operator">=</span> /usr/bin/paccache <span class="token parameter variable">-rvk3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>ext4分区优化:</p><p><code>有备用电源或者笔记本可以关闭ext4的barriers具体方法参考</code><a href="https://wiki.archlinux.org/index.php/Ext4#Turning_barriers_off">Ext4#Turning_barriers_off</a></p><p>调整内核的I/O调度<a href="https://wiki.archlinux.org/title/Improving_performance#Changing_I/O_scheduler">Improving_performance#Changing_I/O_scheduler</a><br>The process to change I/O scheduler, depending on whether the disk is rotating or not can be automated and persist across reboots. For example the udev rule below sets the scheduler to none for NVMe, mq-deadline for SSD/eMMC, and bfq for rotational drives:</p><p>/etc/udev/rules.d/60-ioschedulers.rules</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token comment"># set scheduler for NVMe</span><span class="token key attr-name">ACTION</span><span class="token punctuation">=</span><span class="token value attr-value">="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR&#123;queue/scheduler&#125;="none"</span><span class="token comment"># set scheduler for SSD and eMMC</span><span class="token key attr-name">ACTION</span><span class="token punctuation">=</span><span class="token value attr-value">="add|change", KERNEL=="sd[a-z]|mmcblk[0-9]*", ATTR&#123;queue/rotational&#125;=="0", ATTR&#123;queue/scheduler&#125;="mq-deadline"</span><span class="token comment"># set scheduler for rotating disks</span><span class="token key attr-name">ACTION</span><span class="token punctuation">=</span><span class="token value attr-value">="add|change", KERNEL=="sd[a-z]", ATTR&#123;queue/rotational&#125;=="1", ATTR&#123;queue/scheduler&#125;="bfq"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>deadbeef-git 打开提示<code>plugin cdda.so not found or failed to load</code><br>解决方法: 安装 libcddb libcdio</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> libcddb libcdio</code></pre><hr><p>使用anime4k会提示缺少openCL库,安装ocl-icd</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> ocl-icd</code></pre><hr><p>开启powertop的自动优化节省电量:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装powertop</span>pacman <span class="token parameter variable">-S</span> powertop<span class="token comment">#开机自动启用</span><span class="token function">vim</span> /etc/systemd/system/powertop.service<span class="token comment">#填入以下内容</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>Powertop tunings<span class="token punctuation">[</span>Service<span class="token punctuation">]</span><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/powertop --auto-tune <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">'on'</span><span class="token assign-left variable">RemainAfterExit</span><span class="token operator">=</span>true<span class="token punctuation">[</span>Install<span class="token punctuation">]</span><span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target<span class="token comment"># 启用</span>systemctl <span class="token builtin class-name">enable</span> powertop.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下shell是禁用usb的休眠,不然鼠标用起来很难受(<strong>注意:每个电脑的命令都不同,请自行用powertop查看相应的命令</strong>)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Autosuspend for USB device USB Optical Mouse [PixArt]</span><span class="token builtin class-name">echo</span> <span class="token string">'on'</span> <span class="token operator">></span> <span class="token string">'/sys/bus/usb/devices/1-1/power/control'</span><span class="token punctuation">;</span><span class="token comment"># Autosuspend for USB device HP Wide Vision HD [Generic]</span><span class="token builtin class-name">echo</span> <span class="token string">'on'</span> <span class="token operator">></span> <span class="token string">'/sys/bus/usb/devices/1-4/power/control'</span><span class="token punctuation">;</span><span class="token comment"># Autosuspend for USB device xHCI Host Controller [usb1]</span><span class="token builtin class-name">echo</span> <span class="token string">'on'</span> <span class="token operator">></span> <span class="token string">'/sys/bus/usb/devices/usb1/power/control'</span><span class="token punctuation">;</span><span class="token comment"># Autosuspend for USB device xHCI Host Controller [usb2]</span><span class="token builtin class-name">echo</span> <span class="token string">'on'</span> <span class="token operator">></span> <span class="token string">'/sys/bus/usb/devices/usb2/power/control'</span><span class="token punctuation">;</span><span class="token comment"># Autosuspend for unknown USB device 1-7 (8087:0a2a)</span><span class="token builtin class-name">echo</span> <span class="token string">'on'</span> <span class="token operator">></span> <span class="token string">'/sys/bus/usb/devices/1-7/power/control'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>rider 需要安装moon(.net framework/.net core)</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> moon</code></pre><p>服务端需要mono-xsp,使用aur安装:</p><pre class="language-bash" data-language="bash"><code class="language-bash">yay <span class="token parameter variable">-S</span> xsp</code></pre><hr><p>vscode 开发<code>asp.net</code>:<br>安装 moon dotnet</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> moon dotnet-sdk</code></pre><p>dotnet 安装 dotnet-dev-certs 生成证书:</p><pre class="language-bash" data-language="bash"><code class="language-bash">dotnet tool <span class="token function">install</span> <span class="token parameter variable">--global</span> dotnet-dev-certs</code></pre><p>export要加入.bashrc 或者每次开始前执行</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PATH</span>:/home/[user]/.dotnet/tools"</span></code></pre><p>生成证书</p><pre class="language-bash" data-language="bash"><code class="language-bash">dotnet dev-certs https</code></pre><p>如果想卸载</p><pre class="language-bash" data-language="bash"><code class="language-bash">dotnet tool uninstall <span class="token parameter variable">--global</span> dotnet-dev-certs</code></pre><hr><p>编译汇编语言 需要安装nasm</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> nasm</code></pre><hr><p>chrome/chromium 即使已经设置为默认浏览器也会提示设置为默认浏览器:<br>解决方法:</p><blockquote><p>What has worked for me is go to <code>Settings -&gt; Applications -&gt; File Associations</code> and there, filter with <code>html</code>. Then for the entries <code>xhtml+xml</code> and <code>html</code>, you can move <code>Google Chrome</code> to the first position of the preference order.<a href="#3"><sup><font color=red>[3]</font></sup></a></p></blockquote><p>个人测试 只要把<code>xhtml+xml</code>的默认开启最高优先级应用设置为chromium/chrome就行了</p><hr><p>archLinux进行openGl的开发<br>安装glfw-x11 glad-c-git</p><pre class="language-bash" data-language="bash"><code class="language-bash">yay <span class="token parameter variable">-S</span> glfw-x11 glad-c-git</code></pre><p>open GL导入现有模型时需要安装assimp:</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> assimp</code></pre><p>顺便推荐一个glsl的教程: <a href="https://learnopengl-cn.github.io/">LearnOpenGL CN</a></p><hr><p>python使用tkinter需要安装tk库:</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> tk</code></pre><hr><p>kde设置三指手势:</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> gebaar xdotool</code></pre><hr><p>手动安装mariadb:<br>运行<code>mariadb/scripts/mariadb-install-db</code></p><p>设置路径(提示失败 路径更改成功):</p><pre class="language-bash" data-language="bash"><code class="language-bash">./mysqld <span class="token parameter variable">--datadir</span><span class="token operator">=</span><span class="token string">"./data"</span> <span class="token parameter variable">--langdir</span><span class="token operator">=</span><span class="token string">"./mysql/share"</span> <span class="token parameter variable">--basedir</span><span class="token operator">=</span><span class="token string">"./data/base"</span></code></pre><p>最后</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">You can start the MariaDB daemon with:<span class="token builtin class-name">cd</span> <span class="token string">'.'</span> <span class="token punctuation">;</span> ./bin/mysqld_safe <span class="token parameter variable">--datadir</span><span class="token operator">=</span><span class="token string">'./data'</span>You can <span class="token builtin class-name">test</span> the MariaDB daemon with mysql-test-run.pl<span class="token builtin class-name">cd</span> <span class="token string">'./mysql-test'</span> <span class="token punctuation">;</span> perl mysql-test-run.pl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>使用redash:<br>安装<code>docker-compose</code>(此处可改docker的root目录,建议谷歌), 手动安装时需要临时使用<code>pwgen</code>生成密钥,安装完成后可卸载.<br>安装时参考ubuntu的安装脚本 稍微改改就行了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> <span class="token function">docker-compose</span> pwgenpacman <span class="token parameter variable">-Rs</span> pwgen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>遇到以下问题:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Possibly missing firmware <span class="token keyword">for</span> module: aic94xx Possibly missing firmware <span class="token keyword">for</span> module: wd719x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>直接使用aur中提供的驱动:</p><pre class="language-bash" data-language="bash"><code class="language-bash">yay <span class="token parameter variable">-S</span> aic94xx-firmware wd719x-firmware</code></pre><hr><p>为<code>kde spellChecker</code>添加字典:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> hunspell-en_US</code></pre><hr><p>wine-wechat 数据文件:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">></span> WeChat data will be put into ~/.local/lib/wine-wechat when needed.<span class="token operator">==</span><span class="token operator">></span> run <span class="token string">'wechat --config'</span> <span class="token keyword">if</span> you want to adjust DPI settings.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>wine-wechat 运行要保证当前运行环境变量为中文,否则无法显示中文字体,即使wine装了中文字体:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>zh_CN.UTF-8 wechat</code></pre><p>使用此<a href="https://github.com/askme765cs/Wine-QQ-TIM">Wine-QQ-TIM</a>项目的QQ或者TIM乱码,缺少字体:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> wqy-microhei</code></pre><hr><p>耳机电流声:</p><blockquote><p><a href="https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Glitches,_skips_or_crackling">Troubleshooting#Glitches,_skips_or_crackling</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">The newer implementation of the PulseAudio sound server uses timer-based audio scheduling instead of the traditional, interrupt-driven approach.Timer-based scheduling may expose issues <span class="token keyword">in</span> some ALSA drivers. On the other hand, other drivers might be glitchy without it on, so check to see what works on your system.To turn timer-based scheduling off <span class="token function">add</span> <span class="token assign-left variable">tsched</span><span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">in</span> /etc/pulse/default.pa:/etc/pulse/default.paload-module module-udev-detect <span class="token assign-left variable">tsched</span><span class="token operator">=</span><span class="token number">0</span>Then restart the PulseAudio server:$ pulseaudio <span class="token parameter variable">-k</span>$ pulseaudio <span class="token parameter variable">--start</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Static_noise_when_using_headphones">Troubleshooting#Static_noise_when_using_headphones</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Static noise when using headphonesTime-based scheduling may be causing this, disable it as explained <span class="token keyword">in</span> <span class="token comment">#Glitches, skips or crackling.</span>Another reason you are encountering static noise <span class="token keyword">in</span> your headphone jack could be ALSA's loopback mixing.Make sure you have alsa-utils installed, launch alsamixer, <span class="token keyword">then</span> <span class="token keyword">select</span> your audio device <span class="token punctuation">(</span>pressing F6<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>, navigate all the way left using the left arrow, and stop on Loopback, <span class="token keyword">if</span> Enabled disable it using the down arrow. This should not impact audio playback or microphone recording negatively, unless you require loopback mixing.Some notebook models, like Dell XPS <span class="token number">13</span> <span class="token number">9360</span>, suffer from continuous hissing sound when a headphone is plugged in.Yet another reason <span class="token keyword">for</span> this symptom could be the power-saving mode of your audio device.<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> If you followed Power management<span class="token comment">#Audio, revert the changes and check if it solves the problem.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开启alsa的噪音消减模块:</p><blockquote><p><a href="https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Enable_Echo.2FNoise-Cancellation">Troubleshooting#Enable_Echo.2FNoise-Cancellation</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Arch does not load the Pulseaudio Echo-Cancellation module by default, therefore, we have to <span class="token function">add</span> it <span class="token keyword">in</span> /etc/pulse/default.pa. First you can <span class="token builtin class-name">test</span> <span class="token keyword">if</span> the module is present with pacmd and entering list-modules. If you cannot <span class="token function">find</span> a line showing name: <span class="token operator">&lt;</span>module-echo-cancel<span class="token operator">></span> you have to <span class="token function">add</span>/etc/pulse/default.pa<span class="token comment">### Enable Echo/Noise-Cancellation</span>load-module module-echo-cancel <span class="token assign-left variable">use_master_format</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">aec_method</span><span class="token operator">=</span>webrtc <span class="token assign-left variable">aec_args</span><span class="token operator">=</span><span class="token string">"analog_gain_control=0\ digital_gain_control=1"</span> <span class="token assign-left variable">source_name</span><span class="token operator">=</span>echoCancel_source <span class="token assign-left variable">sink_name</span><span class="token operator">=</span>echoCancel_sinkset-default-source echoCancel_sourceset-default-sink echoCancel_sink<span class="token keyword">then</span> restart Pulseaudio$ pulseaudio <span class="token parameter variable">-k</span>$ pulseaudio <span class="token parameter variable">--start</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>kde discover 无法使用pacman backend<br><s>discover 使用了 packagekit,使用 pkcon 需要root权限,按理来说packagekit会自动获取root且无需输入密码,但discover无法获取root已无法已root用户运行,问题未知,放弃解决<br>解决方法:<br>卸载discover packagekit packagekit-qt5<br>新安装的话 索性不装就行了</s></p><p>2020年2月4日已解决,重新安装后好了,可能之前是bug,现在修复好了</p><hr><p>C++使用openCV:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> opencv<span class="token comment"># vtk和hdf5为openCV的依赖 不安装会编译失败</span><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> vtk<span class="token function">sudo</span> pacman <span class="token parameter variable">-Ss</span> hdf5<span class="token comment"># cmake用来生成makefile</span>pacman <span class="token parameter variable">-S</span> cmake<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>traceroute:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#目前使用了ipip.net 的besttrace</span>pacman <span class="token parameter variable">-S</span> besttrace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>wine 错误<br><code>0009:err:module:load_so_dll failed to load .so lib &quot;/usr/bin/../lib32/wine/l3codeca.acm.so&quot;: libmpg123.so.0: cannot open shared object file: No such file or directory</code><br>解决方法:<br><code>sudo pacman -S lib32-mpg123</code></p><p>包含中国国内软件的<a href="https://github.com/hillwoodroc/winetricks-zh">winetricks-zh</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman <span class="token parameter variable">-S</span> winetricks-zh</code></pre><p>qq軽聊版需要库:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> lib32-libpulse</code></pre><hr><p>ark 解压7z和rar</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">查看可选依赖pacman <span class="token parameter variable">-Qi</span> ark支持7z<span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> p7zip支持rar<span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> <span class="token function">unrar</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>plasma的鼠标样式有时候会不应用在标题栏和其他地方</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">I had a similar problem on Arch.Try edit /usr/share/icons/default/index.themeReplace: <span class="token assign-left variable">Inherits</span><span class="token operator">=</span>Adwaitato: <span class="token assign-left variable">Inherits</span><span class="token operator">=</span>breeze_cursorsThis will change the cursor to the dark breeze, I don't know the name of the white cursor.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ul><li><a href="https://www.reddit.com/r/kde/comments/3pse8f/plasma_5_cursor_icon_changes_to_the_kde_classic/">[Plasma 5] Cursor icon changes to the “KDE Classic” theme when hovering over a windows title bar/resizing it etc?</a></li><li><a href="https://wiki.archlinux.org/index.php/Cursor_themes_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#XDG_%E8%A7%84%E5%88%99">Cursor_themes_(简体中文)#XDG_规则</a></li></ul></blockquote><hr><p>plasma自带的虚拟桌面指示有些bug而且不好看,代替默认虚拟桌面的指示</p><pre class="language-bash" data-language="bash"><code class="language-bash">yay <span class="token parameter variable">-S</span> plasma5-applets-virtual-desktop-bar-git</code></pre><hr><p>为arch添加command not found</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> pkgfile</code></pre><p>更新command-not-found数据库</p><pre class="language-bash" data-language="bash"><code class="language-bash">pkgfile <span class="token parameter variable">-U</span></code></pre><p>最后在<code>~/.bashrc</code>添加</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /usr/share/doc/pkgfile/command-not-found.bash</code></pre><hr><p>nethogs: 按进程查看流量占用</p><hr><p>coc中c语言自动补全,需要安装ccls:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> ccls</code></pre><hr><blockquote><ol><li>此方法参考自 <a id='1'><a href="https://www.jianshu.com/p/6eaf642a94ed">用户添加</a></a></li><li>此方法参考自 <a id='2'><a href="https://askubuntu.com/questions/689281/pulseaudio-can-not-load-bluetooth-module">PulseAudio can not load bluetooth module</a><br></a></li><li>此方法来自 <a id="3"><a href="https://bbs.archlinux.org/viewtopic.php?id=198432">Plasma wont set Chromium as default browser</a></a></li></ol></blockquote><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;详细安装教程请参考arch wiki &lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&quot;&gt;Installation guide (简体中文)&lt;/a&gt;,此处只记录安装后遇到的问题.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;暗影精灵2 PRO 静音LED不起作用和左边耳机会有噼里啪啦声:&lt;br&gt;
具体解决方法我已经写到archwiki里了,请看: &lt;a href=&quot;https://wiki.archlinux.org/index.php?title=Laptop/HP#HP_Omen_15_ax210TX&quot;&gt;Laptop/HP#HP_Omen_15_ax210TX&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;grub更新菜单&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;grub-mkconfig&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-o&lt;/span&gt; /boot/grub/grub.cfg  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装os-prober让grub检测到其他系统并自动创建引导&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pacman &lt;span class=&quot;token parameter variable&quot;&gt;-S&lt;/span&gt; os-prober&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用system-boot(就是直接使用linux内核引导系统,不再需要grub,如果有多系统不推荐,会把efi分区搞得很乱):&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pacman &lt;span class=&quot;token parameter variable&quot;&gt;-S&lt;/span&gt; efibootmgr dosfstools
&lt;span class=&quot;token comment&quot;&gt;# 此处注意:此处要把efi分区挂载为/boot,而非平常的/boot/efi&lt;/span&gt;
bootctl &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--path&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/boot&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="archlinux" scheme="https://asutorufa.github.io/tags/archlinux/"/>
    
    <category term="efi" scheme="https://asutorufa.github.io/tags/efi/"/>
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CIDR匹配 域名匹配</title>
    <link href="https://asutorufa.github.io/posts/3cb4313e/"/>
    <id>https://asutorufa.github.io/posts/3cb4313e/</id>
    <published>2019-08-02T18:55:15.000Z</published>
    <updated>2020-06-23T00:55:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>所有完整实现代码:<a href="https://github.com/Asutorufa/yuhaiin/tree/master/net/match">match</a></p><h2 id="CIDR">CIDR</h2><p>我们知道cidr对ip匹配时,只要cidr的mask长度的前几位与要匹配的ip相同,则可以说匹配成功.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">假设有一个cidr为128.0.0.1/24转换为二进制 <span class="token number">1000</span> 0000.0000 0000.0000 0000.0000 0001/24可以知道要匹配ip的前24为与cidr的前24<span class="token punctuation">(</span><span class="token number">1000</span> 0000.0000 0000.0000 0000<span class="token punctuation">)</span>位相同则匹配成功假设有一个ip <span class="token number">128.0</span>.0.128 二进制为 <span class="token number">1000</span> 0000.0000 0000.0000 0000.1000 0000可以看到前24位与cidr相同 则匹配成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="域名">域名</h2><p>域名就比较简单了,直接按点分割就行了</p><h2 id="前缀树">前缀树</h2><p>通过上述规则 我们可以使用前缀树实现CIDR对ip的匹配</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">        root       /    <span class="token punctuation">\</span>      <span class="token number">0</span>      <span class="token number">1</span>     / <span class="token punctuation">\</span>    / <span class="token punctuation">\</span>    <span class="token number">0</span>   <span class="token number">1</span>  <span class="token number">0</span>   <span class="token number">1</span>   /当ip匹配到此处,此处已无任何子树,且是某一cidr的末尾时则匹配成功若此处节点为null<span class="token punctuation">(</span>golang为nil<span class="token punctuation">)</span>且不是某一cidr的末尾时则匹配失败<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>域名的前缀树相同,只不过域名不再是只有0和1,而且在匹配的时候还需要跳过前面的那些前缀.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">        +---------+        <span class="token operator">|</span>  root   <span class="token operator">|</span>        +---------+       /     /      <span class="token punctuation">\</span>facebook   google   twitter  <span class="token punctuation">..</span>.  /        /   <span class="token punctuation">\</span>       <span class="token punctuation">\</span>com      com   mail    com   <span class="token punctuation">..</span>.                <span class="token punctuation">\</span>               com在对域名匹配时如对 www.play.google.com匹配:    没有www  跳过    没有play 跳过    有google 继续    有com 且 域名已为最后一个节点 -<span class="token operator">></span> 判断trie中是否为最后的一个子树 -<span class="token operator">></span> 是 -<span class="token operator">></span> 匹配成功这里有一个明显的问题  比如我们同时插入了music.126.com和163.com  然后我们需要查询music.163.com是否被匹配  是不是发现了问题,无法被匹配,因为包含music,我们会匹配到music.126.com这条线,而不是163.com这里有个很简单的解决方法,就是把域名倒过来插入,倒过来匹配,就跟JAVA包名那样        +---------+        <span class="token operator">|</span>  root   <span class="token operator">|</span>        +---------+             /            com        <span class="token punctuation">..</span>.           /   <span class="token punctuation">\</span>         <span class="token number">163</span>   <span class="token number">126</span>     <span class="token punctuation">..</span>.                 <span class="token punctuation">\</span>                music这样就能被正确匹配了,而且会缩短时间,不会去完整匹配整个域名,只匹配后面有的就行了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>trie树类似上述结构</p><p>trie树节点 我们可以这样写<span id="more"></span><br>+node<br>|- bool(判断是否匹配成功,是否是某一cidr的末尾)<br>|- left(左树代表0)<br>|- right(右树代表1)</p><p>域名的这样写<br>+node<br>|- bool<br>|- domainNode<br>|- next</p><h2 id="使用golang实现">使用golang实现</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> node <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> isLast <span class="token builtin">bool</span>    left   <span class="token operator">*</span>node    right  <span class="token operator">*</span>node<span class="token punctuation">&#125;</span><span class="token keyword">type</span> TrieTree <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    root <span class="token operator">*</span>node<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">NewTrieTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>TrieTree <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token operator">&amp;</span>TrieTree<span class="token punctuation">&#123;</span>    root<span class="token punctuation">:</span> <span class="token operator">&amp;</span>node<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对每一个CIDR的插入<br>注意: 此处传入的CIDR为CIDR前mask位的二进制形式</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>trie <span class="token operator">*</span>TrieTree<span class="token punctuation">)</span> <span class="token function">Insert</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  nodeTemp <span class="token operator">:=</span> trie<span class="token punctuation">.</span>root  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1 byte is 49</span>    <span class="token keyword">if</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">49</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> nodeTemp<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        nodeTemp<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      nodeTemp <span class="token operator">=</span> nodeTemp<span class="token punctuation">.</span>right    <span class="token punctuation">&#125;</span>    <span class="token comment">// 0 byte is 48</span>    <span class="token keyword">if</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">48</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> nodeTemp<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        nodeTemp<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      nodeTemp <span class="token operator">=</span> nodeTemp<span class="token punctuation">.</span>left    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token function">len</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">&#123;</span>      nodeTemp<span class="token punctuation">.</span>isLast <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对ip的匹配<br>注意: 此处传入的ip为ip的二进制形式</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>trie <span class="token operator">*</span>TrieTree<span class="token punctuation">)</span> <span class="token function">Search</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>  nodeTemp <span class="token operator">:=</span> trie<span class="token punctuation">.</span>root  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">49</span> <span class="token punctuation">&#123;</span>      nodeTemp <span class="token operator">=</span> nodeTemp<span class="token punctuation">.</span>right    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">48</span> <span class="token punctuation">&#123;</span>      nodeTemp <span class="token operator">=</span> nodeTemp<span class="token punctuation">.</span>left    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> nodeTemp <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> nodeTemp<span class="token punctuation">.</span>isLast <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;所有完整实现代码:&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/tree/master/net/match&quot;&gt;match&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;CIDR&quot;&gt;CIDR&lt;/h2&gt;
&lt;p&gt;我们知道cidr对ip匹配时,只要cidr的mask长度的前几位与要匹配的ip相同,则可以说匹配成功.&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;假设有一个cidr为128.0.0.1/24
转换为二进制 &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; 0000.0000 0000.0000 0000.0000 0001/24
可以知道要匹配ip的前24为与cidr的前24&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; 0000.0000 0000.0000 0000&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;位相同则匹配成功
假设有一个ip &lt;span class=&quot;token number&quot;&gt;128.0&lt;/span&gt;.0.128 二进制为 &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; 0000.0000 0000.0000 0000.1000 0000
可以看到前24位与cidr相同 则匹配成功&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;域名&quot;&gt;域名&lt;/h2&gt;
&lt;p&gt;域名就比较简单了,直接按点分割就行了&lt;/p&gt;
&lt;h2 id=&quot;前缀树&quot;&gt;前缀树&lt;/h2&gt;
&lt;p&gt;通过上述规则 我们可以使用前缀树实现CIDR对ip的匹配&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;        root
       /    &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
      &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
     / &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;    / &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
    &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
   /
当ip匹配到此处,此处已无任何子树,且是某一cidr的末尾时则匹配成功
若此处节点为null&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;golang为nil&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;且不是某一cidr的末尾时则匹配失败&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;域名的前缀树相同,只不过域名不再是只有0和1,而且在匹配的时候还需要跳过前面的那些前缀.&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;        +---------+
        &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;  root   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
        +---------+
       /     /      &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
facebook   google   twitter  &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
  /        /   &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;       &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
com      com   mail    com   &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
                &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
               com

在对域名匹配时
如对 www.play.google.com匹配:
    没有www  跳过
    没有play 跳过
    有google 继续
    有com 且 域名已为最后一个节点 -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 判断trie中是否为最后的一个子树 -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 是 -&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; 匹配成功

这里有一个明显的问题
  比如我们同时插入了music.126.com和163.com
  然后我们需要查询music.163.com是否被匹配
  是不是发现了问题,无法被匹配,因为包含music,我们会匹配到music.126.com这条线,而不是163.com

这里有个很简单的解决方法,就是把域名倒过来插入,倒过来匹配,就跟JAVA包名那样
        +---------+
        &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;  root   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
        +---------+
             /
            com        &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
           /   &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
         &lt;span class=&quot;token number&quot;&gt;163&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;126&lt;/span&gt;     &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
                 &lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;
                music

这样就能被正确匹配了,而且会缩短时间,不会去完整匹配整个域名,只匹配后面有的就行了&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;trie树类似上述结构&lt;/p&gt;
&lt;p&gt;trie树节点 我们可以这样写</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="CIDR" scheme="https://asutorufa.github.io/tags/CIDR/"/>
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang实现子进程后台</title>
    <link href="https://asutorufa.github.io/posts/89c4c907/"/>
    <id>https://asutorufa.github.io/posts/89c4c907/</id>
    <published>2019-06-09T10:34:04.000Z</published>
    <updated>2019-06-09T10:34:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统的进程机制">系统的进程机制</h2><h3 id="linux">linux</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">linux下的进程机制,当父进程被杀死之后,子进程就被系统接管+系统|-父进程 -> system管理|--子进程 -> 父进程管理当父进程被杀死之后+系统|-父进程 -> 被杀死|--子进程 -> system管理如果子进程被杀死,而且父进程没有处理子进程的善后工作,那么子进程就会变成僵尸进程+系统|-父进程 -> system管理|--子进程(被杀死) -> 僵尸进程  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><h3 id="windows">windows</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">windows下的进程机制就不太一样了,当父进程被杀死之后,子进程也会被杀死但是如果子进程还有子进程,杀死子进程但不杀死父进程,子进程的子进程就会被系统接管+系统|-父进程 -> system管理|--子进程 -> 父进程管理|---孙进程 -> 子进程管理当父进程被杀死+系统|-父进程 -> 被杀死|--子进程 -> 被杀死  |---孙进程 -> 被杀死当子进程被杀死+系统|-父进程 -> 系统管理|--子进程 -> 被杀死|-孙进程 -> 系统管理windows的机制和linux不太一样,如果子进程被杀死也不会有僵尸进程这种东西,所以子进程可以放心杀死<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实现golang的后台">实现golang的后台</h2><p>如果想实现golang子进程后台,而且不杀死当前父进程,那么我们至少得创建子进程,子进程创建孙进程,然后杀死子进程,这种方法不管在linux还是windows都可以实现<br>如果使用c语言我们可以使用系统提供的fork,使用double fork实现上述过程<br>golang只提供了forkexec,也就是说一个程序只能创建子进程<br><strong>通过这个我想到了一个比较另类的方法,就是在创建进程的时候再次调用本程序再创建进程,这样就相当于创建了子进程,子进程创建孙进程</strong><br><strong>实现就是给程序加参数,再次调用的时候加上这个参数再创建想要的进程</strong></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">daemonF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">"puthon"</span><span class="token punctuation">,</span><span class="token string">"-m"</span><span class="token punctuation">,</span><span class="token string">"http.server"</span><span class="token punctuation">)</span>    cmd<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    daemon <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">)</span>    flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token operator">*</span>daemon <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">&#123;</span>        <span class="token function">daemonF</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        nowFunction<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span>nowFunction<span class="token punctuation">,</span><span class="token string">"-d"</span><span class="token punctuation">)</span>        cmd<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">比如我们有一个程序叫makebk,有一个参数 -d+系统|-makebk(再次调用makebk并加上参数-d) -> 父进程:system|--makebk -d(加上参数之后再创建想要的进程) -> 父进程:makebk|---子进程 -> 父进程:makebk -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就得到我们想要的三层结构了,这时候让父进程杀死make -d,就实现子进程被系统接管,实现子进程后台</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;系统的进程机制&quot;&gt;系统的进程机制&lt;/h2&gt;
&lt;h3 id=&quot;linux&quot;&gt;linux&lt;/h3&gt;
&lt;pre class=&quot;line-numbers language-txt&quot; data-language=&quot;txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;linux下的进程机制,当父进程被杀死之后,子进程就被系统接管

+系统
|-父进程 -&gt; system管理
|--子进程 -&gt; 父进程管理

当父进程被杀死之后

+系统
|-父进程 -&gt; 被杀死
|--子进程 -&gt; system管理

如果子进程被杀死,而且父进程没有处理子进程的善后工作,那么子进程就会变成僵尸进程

+系统
|-父进程 -&gt; system管理
|--子进程(被杀死) -&gt; 僵尸进程  &lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="golang" scheme="https://asutorufa.github.io/categories/golang/"/>
    
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
    <category term="windows" scheme="https://asutorufa.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>uefi and efi</title>
    <link href="https://asutorufa.github.io/posts/a99a60b1/"/>
    <id>https://asutorufa.github.io/posts/a99a60b1/</id>
    <published>2019-04-22T22:57:46.000Z</published>
    <updated>2020-04-29T22:57:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>创建efi分区:</p><p>创建efi分区要设置boot flag,而不是纯FAT32文件系统<br>使用gdisk</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gdisk /dev/sd**<span class="token comment">#这里要注意后面输入分区系统编号 要选择EFI分区,目前efi分区编号是 ef00</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用parted</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">parted</span> /dev/sd**<span class="token punctuation">(</span>parted<span class="token punctuation">)</span> <span class="token builtin class-name">set</span> <span class="token number">1</span> boot on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之后再格式化为fat32</p><pre class="language-bash" data-language="bash"><code class="language-bash">mkfs.vfat <span class="token parameter variable">-F</span> <span class="token number">32</span> /dev/sd**</code></pre><p>更新bios中的启动项应该在将启动文件安装到efi分区时还要向bios中的nvram存储器上写入相应的路径,在linux中可以使用efibootmgr完成相应的操作,当然如果你是安装grub,安装grub时会自动向nvram中写入内容,比如在bios更新后,会清除nvram中的内容,所有还要重新安装grub,或是使用efibootmgr写入引导文件路径.可参考<a href="https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface#efibootmgr">Unified_Extensible_Firmware_Interface#efibootmgr</a>,windows中也有相应的工具,具体操作方式可在网路上搜索.<br>如果是u盘的话,uefi 会查看所有 fat 分区，看看里面有没有 EFI/boot/bootx64.efi(目前还没有找到相应的文档表示是这个,这只是我个人的猜想,因为在我试过的无论是windows还是linux的iso镜像的efi文件都是这个地方) 引导文件,然后只要是 FAT32 文件系统就行,所以可以把 windows 或 ubuntu 的 iso 直接解压到一个 fat 分区（比如 fat 的 u 盘或移动硬盘）然后引导<br><strong>有些UEFI系统只会识别 efi分区下的EFI/boot文件夹内的efi文件,有的甚至只会识别EFI/boot/bootx64.efi</strong></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;创建efi分区:&lt;/p&gt;
&lt;p&gt;创建efi分区要设置boot flag,而不是纯FAT32文件系统&lt;br&gt;
使用gdisk&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="Computer" scheme="https://asutorufa.github.io/categories/Computer/"/>
    
    
    <category term="efi" scheme="https://asutorufa.github.io/tags/efi/"/>
    
    <category term="uefi" scheme="https://asutorufa.github.io/tags/uefi/"/>
    
  </entry>
  
  <entry>
    <title>深度学习之感知器的实现</title>
    <link href="https://asutorufa.github.io/posts/64e69c3e/"/>
    <id>https://asutorufa.github.io/posts/64e69c3e/</id>
    <published>2019-03-08T22:18:41.000Z</published>
    <updated>2019-03-08T22:18:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>感知器的一个公式:<br><strong>当 wx+b&gt;0 , f(x)=1,否则f(x)=0</strong></p><ul><li>x输入的向量</li><li>w:是权重</li><li>w*x是点积</li><li>b是偏置(与权重类似,偏置可以认为是激励函数的偏移量，或者给神经元一个基础活跃等级。)</li></ul><p>对权重的调整公式,此处使用了梯度下降的方法: <strong>w=w+i*(t-count)*x</strong></p><ul><li>i是一个常数,i越小感知器学习越精确,当然耗费时间也最长</li><li>t:本应该得到的值</li><li>count:实际计算得到的值</li><li>x:同上</li></ul><p>对偏置调整的公式: <em><em>b=b+i</em>(t-count)</em>*</p><p>这次我们使用python来实现与和或<span id="more"></span></p><pre class="line-numbers language-none"><code class="language-none">#因为与和或计算需要输入两个数,所以这里设置两个权重global w1,w2w1&#x3D;0.4w2&#x3D;0.6#偏置随便设一个global bb&#x3D;0.8#上面提到的常数global ii&#x3D;0.01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对感知器公式实现的函数:</p><pre class="line-numbers language-none"><code class="language-none">def count(x,y):    if w1*x+w2*y+b&gt;0:        return 1    else:        return 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对权重和偏置不断矫正的函数:</p><pre class="line-numbers language-none"><code class="language-none">def update_all(r,x,y):    global w1,w2,b    temp &#x3D; count(x,y)    w1&#x3D;w1+i*(r-temp)*x    w2&#x3D;w2+i*(r-temp)*y    b&#x3D;b+i*(r-temp)    print(w1,w2,b)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后就是输入学习的资料和确认计算结果:</p><pre class="line-numbers language-none"><code class="language-none">def main():    for _ in range(1,50):        update_all(1.0,1.0,1.0)        update_all(0.0,1.0,0.0)        update_all(0.0,0.0,1.0)        update_all(0.0,0.0,0.0)        print(&#39;1 and 1 &#x3D;&#39;,count(1,1))    print(&#39;0 and 1 &#x3D;&#39;,count(0,1))    print(&#39;1 and 0 &#x3D;&#39;,count(1,0))    print(&#39;0 and 0 &#x3D;&#39;,count(0,0))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们先进行与的计算:<br>这里我前面代码写错了,所以说下面所有的结果会不一样…<br>进行25次学习的结果:</p><pre class="line-numbers language-none"><code class="language-none">(0.4, 0.6, 0.8)(0.39, 0.6, 0.79)(0.39, 0.59, 0.78)(0.39, 0.59, 0.77)(0.39, 0.59, 0.77).......省略........(0.1599999999999998, 0.35999999999999976, 0.08999999999999947)(0.1599999999999998, 0.35999999999999976, 0.07999999999999947)(&#39;1 and 1 &#x3D;&#39;, 1)(&#39;0 and 1 &#x3D;&#39;, 1)(&#39;1 and 0 &#x3D;&#39;, 1)(&#39;0 and 0 &#x3D;&#39;, 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们明显发现结果是错误的,提升到50次:</p><pre class="line-numbers language-none"><code class="language-none">(0.4, 0.6, 0.8)(0.39, 0.6, 0.79)(0.39, 0.59, 0.78)(0.39, 0.59, 0.77)(0.39, 0.59, 0.77)(0.38, 0.59, 0.76)(0.38, 0.58, 0.75).......省略........(0.07999999999999981, 0.1799999999999996, -0.18000000000000055)(0.07999999999999981, 0.1799999999999996, -0.18000000000000055)(0.07999999999999981, 0.1799999999999996, -0.18000000000000055)(&#39;1 and 1 &#x3D;&#39;, 1)(&#39;0 and 1 &#x3D;&#39;, 0)(&#39;1 and 0 &#x3D;&#39;, 0)(&#39;0 and 0 &#x3D;&#39;, 0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果正确了,并且权重和偏置都稳定到一个值,是不是感觉很神奇<br>或运算也是相同的,这里我们将偏置改为b=0.4:<br>25次:</p><pre class="line-numbers language-none"><code class="language-none">(0.4, 0.6, 0.4)(0.4, 0.6, 0.4)(0.4, 0.6, 0.4)(0.4, 0.6, 0.39)(0.4, 0.6, 0.39)(0.4, 0.6, 0.39)(0.4, 0.6, 0.39)(0.4, 0.6, 0.38)(0.4, 0.6, 0.38)(0.4, 0.6, 0.38).......省略........(0.4, 0.6, 0.16999999999999982)(0.4, 0.6, 0.16999999999999982)(0.4, 0.6, 0.16999999999999982)(0.4, 0.6, 0.16999999999999982)(0.4, 0.6, 0.1599999999999998)(&#39;1 and 1 &#x3D;&#39;, 1)(&#39;0 and 1 &#x3D;&#39;, 1)(&#39;1 and 0 &#x3D;&#39;, 1)(&#39;0 and 0 &#x3D;&#39;, 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>50次:</p><pre class="line-numbers language-none"><code class="language-none">(0.4, 0.6, 0.4)(0.4, 0.6, 0.4)(0.4, 0.6, 0.4)(0.4, 0.6, 0.39)(0.4, 0.6, 0.39)(0.4, 0.6, 0.39)(0.4, 0.6, 0.39)(0.4, 0.6, 0.38).......省略........(0.4, 0.6, -1.97758476261356e-16)(0.4, 0.6, -1.97758476261356e-16)(0.4, 0.6, -1.97758476261356e-16)(0.4, 0.6, -1.97758476261356e-16)(0.4, 0.6, -1.97758476261356e-16)(&#39;1 and 1 &#x3D;&#39;, 1)(&#39;0 and 1 &#x3D;&#39;, 1)(&#39;1 and 0 &#x3D;&#39;, 1)(&#39;0 and 0 &#x3D;&#39;, 0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考:<br><a href="https://zh.wikipedia.org/wiki/%E6%84%9F%E7%9F%A5%E5%99%A8">感知器(维基百科)</a><br><a href="https://www.zybuluo.com/hanbingtao/note/433855">零基础入门深度学习(1) - 感知器</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;感知器的一个公式:&lt;br&gt;
&lt;strong&gt;当 wx+b&amp;gt;0 , f(x)=1,否则f(x)=0&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x输入的向量&lt;/li&gt;
&lt;li&gt;w:是权重&lt;/li&gt;
&lt;li&gt;w*x是点积&lt;/li&gt;
&lt;li&gt;b是偏置(与权重类似,偏置可以认为是激励函数的偏移量，或者给神经元一个基础活跃等级。)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对权重的调整公式,此处使用了梯度下降的方法: &lt;strong&gt;w=w+i*(t-count)*x&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;i是一个常数,i越小感知器学习越精确,当然耗费时间也最长&lt;/li&gt;
&lt;li&gt;t:本应该得到的值&lt;/li&gt;
&lt;li&gt;count:实际计算得到的值&lt;/li&gt;
&lt;li&gt;x:同上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对偏置调整的公式: &lt;em&gt;&lt;em&gt;b=b+i&lt;/em&gt;(t-count)&lt;/em&gt;*&lt;/p&gt;
&lt;p&gt;这次我们使用python来实现与和或</summary>
    
    
    
    <category term="Machine Learning" scheme="https://asutorufa.github.io/categories/Machine-Learning/"/>
    
    
    <category term="python" scheme="https://asutorufa.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>golang socks5/http proxy</title>
    <link href="https://asutorufa.github.io/posts/c7816edc/"/>
    <id>https://asutorufa.github.io/posts/c7816edc/</id>
    <published>2019-03-06T20:02:47.000Z</published>
    <updated>2020-05-30T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>完整实现代码:<br><a href="https://github.com/Asutorufa/yuhaiin/blob/master/net/proxy/socks5/client/socks5client.go">socks5 client</a><br><a href="https://github.com/Asutorufa/yuhaiin/blob/master/net/proxy/socks5/server/server.go">socks5 server</a><br><a href="https://github.com/Asutorufa/yuhaiin/blob/master/net/proxy/http/server/server.go">http server</a></p><p>此处已socks5client为例,大致流程都相同,只是协议不同:</p><p>socks5运行流程如下:</p><p>tcp:<br>- 本机和代理服务端协商和建立连接；<br>- 本机告诉代理服务端目标服务的地址；<br>- 代理服务端去连接目标服务，成功后告诉本机；<br>- 本机开始发送原本应发送到目标服务的数据给代理服务端，由代理服务端完成数据转发。<br>udp:<br>- udp因为是无连接的,所以所以数据一次只用一个udp包<br>- socks5是通过tcp先确认socks5 server支持udp,然后再通过udp发送请求</p><h2 id="先进行TCP连接">先进行TCP连接</h2><p>golang实现(<em>这里的地址我是本地socks5服务端</em>)</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">conn<span class="token punctuation">,</span>err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span><span class="token string">"127.0.0.1:1080"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向socks5服务端发送验证">向socks5服务端发送验证</h2><p>验证字段:</p><table><thead><tr><th style="text-align:center">VER</th><th style="text-align:center">NMETHODS</th><th style="text-align:center">METHODS</th></tr></thead><tbody><tr><td style="text-align:center">1字节</td><td style="text-align:center">1字节</td><td style="text-align:center">1-255字节</td></tr></tbody></table><ul><li>VER是SOCKS版本，这里应该是0x05； <span id="more"></span></li><li>NMETHODS是METHODS部分的长度；</li><li>METHODS是客户端支持的认证方式列表，每个方法占1字节。当前的定义是：<ul><li>0x00 不需要认证</li><li>0x01 GSSAPI</li><li>0x02 用户名、密码认证</li><li>0x03 - 0x7F由IANA分配（保留）</li><li>0x80 - 0xFE为私人方法保留</li><li>0xFF 无可接受的方法</li></ul></li></ul><p>golang实现代码:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">sendData <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sendData<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> err<span class="token punctuation">&#125;</span>getData <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>getData<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">if</span> getData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0x05</span> <span class="token operator">||</span> getData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0xFF</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"socks5 first handshake failed!"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> getData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0x02</span> <span class="token punctuation">&#123;</span>    sendData <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>        <span class="token function">append</span><span class="token punctuation">(</span>            <span class="token function">append</span><span class="token punctuation">(</span>                <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>socks5client<span class="token punctuation">.</span>Username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>socks5client<span class="token punctuation">.</span>Username<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">byte</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>socks5client<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>socks5client<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>    <span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sendData<span class="token punctuation">)</span>    getData <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>getData<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> err    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> getData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0x01</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"username or password not correct,socks5 handshake failed!"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向socks5服务端发送请求">向socks5服务端发送请求</h2><p>请求字段:</p><table><thead><tr><th style="text-align:center">VER</th><th style="text-align:center">CMD</th><th style="text-align:center">RSV</th><th style="text-align:center">ATYP</th><th style="text-align:center">DST.ADDR</th><th style="text-align:center">DST.PORT</th></tr></thead><tbody><tr><td style="text-align:center">1字节</td><td style="text-align:center">1字节</td><td style="text-align:center">0x00</td><td style="text-align:center">1字节</td><td style="text-align:center">动态</td><td style="text-align:center">2字节</td></tr></tbody></table><ul><li>VER是SOCKS版本，这里应该是0x05；</li><li>CMD是SOCK的命令码<ul><li>0x01表示CONNECT请求</li><li>0x02表示BIND请求</li><li>0x03表示UDP转发</li></ul></li><li>RSV 0x00，保留</li><li>ATYP DST.ADDR类型<ul><li>0x01 IPv4地址，DST.ADDR部分4字节长度</li><li>0x03 域名，DST.ADDR部分第一个字节为域名长度，DST.ADDR剩余的内容为域名，没有\0结尾。</li><li>0x04 IPv6地址，16个字节长度。</li></ul></li><li>DST.ADDR 目的地址</li><li>DST.PORT 网络字节序表示的目的端口</li></ul><p>golang实现代码</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 此处为向 www.google.com:443 发送请求</span>domain <span class="token operator">:=</span> <span class="token string">"www.google.com"</span>serverPort <span class="token operator">:=</span> <span class="token number">443</span>sendData <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>    <span class="token function">append</span><span class="token punctuation">(</span>        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token number">0x5</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">byte</span><span class="token punctuation">(</span>serverPort<span class="token operator">>></span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">byte</span><span class="token punctuation">(</span>serverPort<span class="token operator">&amp;</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span>err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sendData<span class="token punctuation">)</span><span class="token punctuation">;</span> err<span class="token operator">!=</span><span class="token boolean">nil</span><span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">&#125;</span>getData <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>getData<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">if</span> getData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0x05</span> <span class="token operator">||</span> getData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0x00</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"socks5 second handshake failed!"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="进行数据转发">进行数据转发</h2><p>golang实现代码(<em>不太熟悉各种请求这里随便弄了一个</em>)</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span>err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"GET /generate_204/ HTTP/2.0\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err<span class="token operator">!=</span><span class="token boolean">nil</span><span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关闭TCP连接">关闭TCP连接</h2><pre class="language-go" data-language="go"><code class="language-go">conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="UDP">UDP</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"> +----+------+------+----------+----------+----------+ |RSV | FRAG | ATYP | DST.ADDR | DST.PORT |   DATA   | +----+------+------+----------+----------+----------+ | 2  |  1   |  1   | Variable |    2     | Variable | +----+------+------+----------+----------+----------+The fields in the UDP request header are:<span class="token code keyword">     o  RSV  Reserved X'0000'     o  FRAG    Current fragment number     o  ATYP    address type of following addresses:        o  IP V4 address: X'01'        o  DOMAINNAME: X'03'        o  IP V6 address: X'04'     o  DST.ADDR       desired destination address     o  DST.PORT       desired destination port     o  DATA     user data</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考来源">参考来源</h2><p><a href="https://en.wikipedia.org/wiki/SOCKS">SOCKS(维基百科)</a><br><a href="https://my.oschina.net/997155658/blog/1563154">SOCKS5 协议介绍</a><br><a href="https://tools.ietf.org/html/rfc1928">rfc1928</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;完整实现代码:&lt;br&gt;
&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/blob/master/net/proxy/socks5/client/socks5client.go&quot;&gt;socks5 client&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/blob/master/net/proxy/socks5/server/server.go&quot;&gt;socks5 server&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://github.com/Asutorufa/yuhaiin/blob/master/net/proxy/http/server/server.go&quot;&gt;http server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此处已socks5client为例,大致流程都相同,只是协议不同:&lt;/p&gt;
&lt;p&gt;socks5运行流程如下:&lt;/p&gt;
&lt;p&gt;tcp:&lt;br&gt;
- 本机和代理服务端协商和建立连接；&lt;br&gt;
- 本机告诉代理服务端目标服务的地址；&lt;br&gt;
- 代理服务端去连接目标服务，成功后告诉本机；&lt;br&gt;
- 本机开始发送原本应发送到目标服务的数据给代理服务端，由代理服务端完成数据转发。&lt;br&gt;
udp:&lt;br&gt;
- udp因为是无连接的,所以所以数据一次只用一个udp包&lt;br&gt;
- socks5是通过tcp先确认socks5 server支持udp,然后再通过udp发送请求&lt;/p&gt;
&lt;h2 id=&quot;先进行TCP连接&quot;&gt;先进行TCP连接&lt;/h2&gt;
&lt;p&gt;golang实现(&lt;em&gt;这里的地址我是本地socks5服务端&lt;/em&gt;)&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-go&quot; data-language=&quot;go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;conn&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;err &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Dial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;tcp&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;127.0.0.1:1080&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; err &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;向socks5服务端发送验证&quot;&gt;向socks5服务端发送验证&lt;/h2&gt;
&lt;p&gt;验证字段:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;VER&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;NMETHODS&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;METHODS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1字节&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1字节&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1-255字节&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;VER是SOCKS版本，这里应该是0x05；</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="golang" scheme="https://asutorufa.github.io/tags/golang/"/>
    
    <category term="socks5" scheme="https://asutorufa.github.io/tags/socks5/"/>
    
  </entry>
  
  <entry>
    <title>安卓通过adb添加电池用户白名单</title>
    <link href="https://asutorufa.github.io/posts/1e63e0e/"/>
    <id>https://asutorufa.github.io/posts/1e63e0e/</id>
    <published>2019-02-02T23:15:29.000Z</published>
    <updated>2019-02-02T23:15:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>安卓6.0引入了doze来节省电量,但某些国产ui(如锤子)阉割了这个菜单,可通过adb添加</p><p>添加应用到白名单：</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys deviceidle whitelist +<span class="token operator">&lt;</span>package<span class="token operator">></span></code></pre><p>如:</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys deviceidle whitelist +com.google.android.gms</code></pre><p>删除白名单(把加号改成减号):  <span id="more"></span></p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys deviceidle whitelist -<span class="token operator">&lt;</span>package<span class="token operator">></span></code></pre><p>查看doze状态：</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys deviceidle</code></pre><p>获取完整的帮助菜单:</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys deviceidle <span class="token parameter variable">-h</span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Device idle controller <span class="token punctuation">(</span>deviceidle<span class="token punctuation">)</span> commands:  <span class="token builtin class-name">help</span>    Print this <span class="token builtin class-name">help</span> text.  step <span class="token punctuation">[</span>light<span class="token operator">|</span>deep<span class="token punctuation">]</span>    Immediately step to next state, without waiting <span class="token keyword">for</span> alarm.  force-idle <span class="token punctuation">[</span>light<span class="token operator">|</span>deep<span class="token punctuation">]</span>    Force directly into idle mode, regardless of other device state.  force-inactive    Force to be inactive, ready to freely step idle states.  unforce    Resume normal functioning after force-idle or force-inactive.  get <span class="token punctuation">[</span>light<span class="token operator">|</span>deep<span class="token operator">|</span>force<span class="token operator">|</span><span class="token function">screen</span><span class="token operator">|</span>charging<span class="token operator">|</span>network<span class="token punctuation">]</span>    Retrieve the current given state.  disable <span class="token punctuation">[</span>light<span class="token operator">|</span>deep<span class="token operator">|</span>all<span class="token punctuation">]</span>    Completely disable device idle mode.  <span class="token builtin class-name">enable</span> <span class="token punctuation">[</span>light<span class="token operator">|</span>deep<span class="token operator">|</span>all<span class="token punctuation">]</span>    Re-enable device idle mode after it had previously been disabled.  enabled <span class="token punctuation">[</span>light<span class="token operator">|</span>deep<span class="token operator">|</span>all<span class="token punctuation">]</span>    Print <span class="token number">1</span> <span class="token keyword">if</span> device idle mode is currently enabled, <span class="token keyword">else</span> <span class="token number">0</span>.  whitelist    Print currently whitelisted apps.  whitelist <span class="token punctuation">[</span>package <span class="token punctuation">..</span>.<span class="token punctuation">]</span>    Add <span class="token punctuation">(</span>prefix with +<span class="token punctuation">)</span> or remove <span class="token punctuation">(</span>prefix with -<span class="token punctuation">)</span> packages.  except-idle-whitelist <span class="token punctuation">[</span>package <span class="token punctuation">..</span>.<span class="token operator">|</span>reset<span class="token punctuation">]</span>    Prefix the package with <span class="token string">'+'</span> to <span class="token function">add</span> it to whitelist or <span class="token string">'='</span> to check <span class="token keyword">if</span> it is already whitelisted    <span class="token punctuation">[</span>reset<span class="token punctuation">]</span> will reset the whitelist to it<span class="token string">'s original state    Note that unlike &lt;whitelist> cmd, changes made using this won'</span>t be persisted across boots  tempwhitelist    Print packages that are temporarily whitelisted.  tempwhitelist <span class="token punctuation">[</span>-u <span class="token environment constant">USER</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>-d DURATION<span class="token punctuation">]</span> <span class="token punctuation">[</span>package <span class="token punctuation">..</span><span class="token punctuation">]</span>    Temporarily place packages <span class="token keyword">in</span> whitelist <span class="token keyword">for</span> DURATION milliseconds.    If no DURATION is specified, <span class="token number">10</span> seconds is used<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;安卓6.0引入了doze来节省电量,但某些国产ui(如锤子)阉割了这个菜单,可通过adb添加&lt;/p&gt;
&lt;p&gt;添加应用到白名单：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;adb shell dumpsys deviceidle whitelist +&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;adb shell dumpsys deviceidle whitelist +com.google.android.gms&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除白名单(把加号改成减号):</summary>
    
    
    
    <category term="android" scheme="https://asutorufa.github.io/categories/android/"/>
    
    
    <category term="android" scheme="https://asutorufa.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>安卓使用dalvikvm运行java(termux运行java)</title>
    <link href="https://asutorufa.github.io/posts/8b98169e/"/>
    <id>https://asutorufa.github.io/posts/8b98169e/</id>
    <published>2019-02-02T23:02:35.000Z</published>
    <updated>2019-02-02T23:02:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>一直想要使用termux来在安卓上写java,但termux上只有ecj可以使java编译为目标文件class,却不能使其编译为可执行文件<br>发现通过安卓自带的dalvikvm可以运行,只是步骤繁琐一些</p><h2 id="安装所需工具">安装所需工具</h2><p>termux上安装 ecj 和 dx就可以了</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> ecj dx</code></pre><h2 id="编译为class文件">编译为class文件</h2><pre class="language-bash" data-language="bash"><code class="language-bash">ecj XXX.java</code></pre><span id="more"></span><h2 id="编译成dex文件">编译成dex文件</h2><pre class="language-bash" data-language="bash"><code class="language-bash">dx <span class="token parameter variable">--dex</span> <span class="token parameter variable">--output</span><span class="token operator">=</span>XXX.dex XXX.class</code></pre><h2 id="使用dalvikvm运行">使用dalvikvm运行</h2><pre class="language-bash" data-language="bash"><code class="language-bash">dalvikvm <span class="token parameter variable">-cp</span> XXX.dex XXX</code></pre><p>参考: <a href="https://bbs.pediy.com/thread-184592.htm">使用 dalvikvm 执行一个运行于命令行的 Hello World</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一直想要使用termux来在安卓上写java,但termux上只有ecj可以使java编译为目标文件class,却不能使其编译为可执行文件&lt;br&gt;
发现通过安卓自带的dalvikvm可以运行,只是步骤繁琐一些&lt;/p&gt;
&lt;h2 id=&quot;安装所需工具&quot;&gt;安装所需工具&lt;/h2&gt;
&lt;p&gt;termux上安装 ecj 和 dx就可以了&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; ecj dx&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;编译为class文件&quot;&gt;编译为class文件&lt;/h2&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ecj XXX.java&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="android" scheme="https://asutorufa.github.io/categories/android/"/>
    
    
    <category term="android" scheme="https://asutorufa.github.io/tags/android/"/>
    
    <category term="java" scheme="https://asutorufa.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>用CIDR表示网段</title>
    <link href="https://asutorufa.github.io/posts/e2b25bb8/"/>
    <id>https://asutorufa.github.io/posts/e2b25bb8/</id>
    <published>2019-02-02T22:34:07.000Z</published>
    <updated>2019-02-02T22:34:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们知道一般CIDR(无类别域间路由)网段的表示为:<strong>192.168.0.0/24</strong>这种形式</p><h2 id="IP地址">IP地址</h2><p>首先我们得知道ip地址是如何来的<br>ipv4的地址是用32位二进制数表示的<br>如: 255.255.255.0 -&gt; 11111111.11111111.11111111.00000000</p><h2 id="网络前缀">网络前缀</h2><p><strong>192.168.0.0/24</strong>中的24就是网络前缀,网络前缀可转化为网络掩码,24表示网络掩码的前24位为1</p><h2 id="网络掩码">网络掩码</h2><p>「网络掩码」又叫「子网掩码」、「地址掩码」、「子網路遮罩」（subnet mask），它是一种用来指明一个IP地址的哪些位标识的是主机所在的网络地址以及哪些位标识的是主机地址的位掩码。      --维基百科<span id="more"></span></p><p>将网络前缀转化为网络掩码: 24 -&gt; 11111111.11111111.11111111.00000000 -&gt; 255.255.255.0<br><em>255.255.255.0</em>就是网络掩码</p><h2 id="CIDR">CIDR</h2><p><em><strong>网络地址的计算方法为ip地址与网络掩码进行’与’运算</strong></em><br>通过上面的计算好的网络掩码可知这个ip地址的前24位是不变的  ,所以<strong>192.168.0.0/24</strong>表示的网段为: <strong>192.168.0.0 - 192.168.0.255</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我们知道一般CIDR(无类别域间路由)网段的表示为:&lt;strong&gt;192.168.0.0/24&lt;/strong&gt;这种形式&lt;/p&gt;
&lt;h2 id=&quot;IP地址&quot;&gt;IP地址&lt;/h2&gt;
&lt;p&gt;首先我们得知道ip地址是如何来的&lt;br&gt;
ipv4的地址是用32位二进制数表示的&lt;br&gt;
如: 255.255.255.0 -&amp;gt; 11111111.11111111.11111111.00000000&lt;/p&gt;
&lt;h2 id=&quot;网络前缀&quot;&gt;网络前缀&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;192.168.0.0/24&lt;/strong&gt;中的24就是网络前缀,网络前缀可转化为网络掩码,24表示网络掩码的前24位为1&lt;/p&gt;
&lt;h2 id=&quot;网络掩码&quot;&gt;网络掩码&lt;/h2&gt;
&lt;p&gt;「网络掩码」又叫「子网掩码」、「地址掩码」、「子網路遮罩」（subnet mask），它是一种用来指明一个IP地址的哪些位标识的是主机所在的网络地址以及哪些位标识的是主机地址的位掩码。      --维基百科</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="CIDR" scheme="https://asutorufa.github.io/tags/CIDR/"/>
    
    <category term="IP" scheme="https://asutorufa.github.io/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>android dumpsys tool</title>
    <link href="https://asutorufa.github.io/posts/25303996/"/>
    <id>https://asutorufa.github.io/posts/25303996/</id>
    <published>2019-02-01T00:00:02.000Z</published>
    <updated>2019-02-01T00:00:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看dumpsys所有的子命令:</p><pre class="language-bash" data-language="bash"><code class="language-bash">dumpsys <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"DUMP OF SERVICE"</span></code></pre><p>output:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">DUMP OF SERVICE SurfaceFlinger:DUMP OF SERVICE accessibility:DUMP OF SERVICE account:DUMP OF SERVICE activity:DUMP OF SERVICE alarm:DUMP OF SERVICE appwidget:DUMP OF SERVICE audio:DUMP OF SERVICE backup:DUMP OF SERVICE battery:DUMP OF SERVICE batteryinfo:DUMP OF SERVICE clipboard:DUMP OF SERVICE connectivity:DUMP OF SERVICE content:DUMP OF SERVICE cpuinfo:DUMP OF SERVICE device_policy:DUMP OF SERVICE devicestoragemonitor:DUMP OF SERVICE diskstats:DUMP OF SERVICE dropbox:DUMP OF SERVICE entropy:DUMP OF SERVICE hardware:DUMP OF SERVICE input_method:DUMP OF SERVICE iphonesubinfo:DUMP OF SERVICE isms:DUMP OF SERVICE location:DUMP OF SERVICE media.audio_flinger:DUMP OF SERVICE media.audio_policy:DUMP OF SERVICE media.player:DUMP OF SERVICE meminfo:DUMP OF SERVICE mount:DUMP OF SERVICE netstat:DUMP OF SERVICE network_management:DUMP OF SERVICE notification:DUMP OF SERVICE package:DUMP OF SERVICE permission:DUMP OF SERVICE phone:DUMP OF SERVICE power:DUMP OF SERVICE reboot:DUMP OF SERVICE screenshot:DUMP OF SERVICE search:DUMP OF SERVICE sensor:DUMP OF SERVICE simphonebook:DUMP OF SERVICE statusbar:DUMP OF SERVICE telephony.registry:DUMP OF SERVICE throttle:DUMP OF SERVICE usagestats:DUMP OF SERVICE vibrator:DUMP OF SERVICE wallpaper:DUMP OF SERVICE wifi:DUMP OF SERVICE window:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><p>eg:<br>1.得到电池的所有信息</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys battery</code></pre><p>2.得到wifi的所有信息</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys wifi</code></pre><p>3.得到cpu的所有信息</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys cpuinfo</code></pre><p>4.得到总的存储情况</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys meminfo</code></pre><p>5.得到某应用的存储情况</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys meminfo <span class="token string">'your apps package name'</span></code></pre><p>6.得到所有的服务列表</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell <span class="token function">service</span> list</code></pre><p>7.得到所有的账户列表</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys account</code></pre><p>8.获得某子命令的帮助信息</p><pre class="language-bash" data-language="bash"><code class="language-bash">adb shell dumpsys account <span class="token parameter variable">-h</span></code></pre><p>参考:<br><a href="https://stackoverflow.com/questions/11201659/whats-the-android-adb-shell-dumpsys-tool-and-what-are-its-benefits">What’s the Android ADB shell “dumpsys” tool and what are its benefits?</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;查看dumpsys所有的子命令:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;dumpsys &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;DUMP OF SERVICE&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;output:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;DUMP OF SERVICE SurfaceFlinger:
DUMP OF SERVICE accessibility:
DUMP OF SERVICE account:
DUMP OF SERVICE activity:
DUMP OF SERVICE alarm:
DUMP OF SERVICE appwidget:
DUMP OF SERVICE audio:
DUMP OF SERVICE backup:
DUMP OF SERVICE battery:
DUMP OF SERVICE batteryinfo:
DUMP OF SERVICE clipboard:
DUMP OF SERVICE connectivity:
DUMP OF SERVICE content:
DUMP OF SERVICE cpuinfo:
DUMP OF SERVICE device_policy:
DUMP OF SERVICE devicestoragemonitor:
DUMP OF SERVICE diskstats:
DUMP OF SERVICE dropbox:
DUMP OF SERVICE entropy:
DUMP OF SERVICE hardware:
DUMP OF SERVICE input_method:
DUMP OF SERVICE iphonesubinfo:
DUMP OF SERVICE isms:
DUMP OF SERVICE location:
DUMP OF SERVICE media.audio_flinger:
DUMP OF SERVICE media.audio_policy:
DUMP OF SERVICE media.player:
DUMP OF SERVICE meminfo:
DUMP OF SERVICE mount:
DUMP OF SERVICE netstat:
DUMP OF SERVICE network_management:
DUMP OF SERVICE notification:
DUMP OF SERVICE package:
DUMP OF SERVICE permission:
DUMP OF SERVICE phone:
DUMP OF SERVICE power:
DUMP OF SERVICE reboot:
DUMP OF SERVICE screenshot:
DUMP OF SERVICE search:
DUMP OF SERVICE sensor:
DUMP OF SERVICE simphonebook:
DUMP OF SERVICE statusbar:
DUMP OF SERVICE telephony.registry:
DUMP OF SERVICE throttle:
DUMP OF SERVICE usagestats:
DUMP OF SERVICE vibrator:
DUMP OF SERVICE wallpaper:
DUMP OF SERVICE wifi:
DUMP OF SERVICE window:&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="android" scheme="https://asutorufa.github.io/categories/android/"/>
    
    
    <category term="android" scheme="https://asutorufa.github.io/tags/android/"/>
    
    <category term="adb" scheme="https://asutorufa.github.io/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>安卓通过shell更改语言</title>
    <link href="https://asutorufa.github.io/posts/f7f814df/"/>
    <id>https://asutorufa.github.io/posts/f7f814df/</id>
    <published>2019-01-23T19:15:44.000Z</published>
    <updated>2019-01-23T19:15:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于Android M或更高版本，使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setprop ro.product.locale xx-XXsetprop persist.sys.locale xx-XX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>xx是语言<br>XX是国家<br>改为日语为:xx=ja XX=JP</p><p>其他安卓版本:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setprop persist.sys.language xxsetprop persist.sys.country XXsetprop ctl.restart zygote<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>xx是语言<br>XX是国家  <span id="more"></span><br>Zygote进程运行时, 会初始化Dalvik虚拟机, 并运行它. Android的应用程序是由Java编写的, 它们不能直接运行在Linux上, 只能运行在Dalvik虚拟机中. 并且, 每个应用程序都运行在各自的虚拟机中, 应用程序每次运行都要重新初始化并启动虚拟机, 这个过程会消耗相当长时间, 是拖慢应用程序的原因之一. 因此, 在Android中, 应用程序运行前, 通过Zygote进程共享已运行的虚拟机的代码与内存信息, 缩短应用程序运行所耗费的时间. 也就是说, Zygote进程会事先将应用程序要使用的Android Framework中的类与资源加载到内存中, 并组织形成所用资源的链接信息. 这样, 新运行的Android应用程序在使用所需资源时不必每次形成资源的链接信息, 这样就大大提升了程序的运行时间.</p><p>参考:<br>1.<a href="http://bbs.bugcode.cn/t/16729">通过ADB更改设备语言</a><br>2.<a href="https://www.jianshu.com/p/3dbe46439359">初识Zygote进程</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于Android M或更高版本，使用：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;setprop ro.product.locale xx-XX
setprop persist.sys.locale xx-XX&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;xx是语言&lt;br&gt;
XX是国家&lt;br&gt;
改为日语为:xx=ja XX=JP&lt;/p&gt;
&lt;p&gt;其他安卓版本:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;setprop persist.sys.language xx
setprop persist.sys.country XX
setprop ctl.restart zygote&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;xx是语言&lt;br&gt;
XX是国家</summary>
    
    
    
    <category term="android" scheme="https://asutorufa.github.io/categories/android/"/>
    
    
    <category term="android" scheme="https://asutorufa.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>解决xfce4画面撕裂</title>
    <link href="https://asutorufa.github.io/posts/38868ade/"/>
    <id>https://asutorufa.github.io/posts/38868ade/</id>
    <published>2018-12-09T00:04:38.000Z</published>
    <updated>2018-12-09T00:04:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装compton">安装compton</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> compton</code></pre><h2 id="修改配置文件">修改配置文件</h2><p>compton的配置文件在~/.config/compton.conf<br>因为有些窗口的阴影有时候会变的很奇怪,大概你有可能需要修改一下,附上我的:<span id="more"></span></p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># Backend</span><span class="token comment">#</span><span class="token comment">#################################</span><span class="token comment"># Backend to use: "xrender" or "glx".</span><span class="token comment"># GLX backend is typically much faster but depends on a sane driver.</span><span class="token key attr-name">backend</span> <span class="token punctuation">=</span> <span class="token value attr-value">"glx";</span><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># GLX backend</span><span class="token comment">#</span><span class="token comment">#################################</span><span class="token key attr-name">glx-no-stencil</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.</span><span class="token comment"># My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,</span><span class="token comment"># but a 20% increase when only 1/4 is.</span><span class="token comment"># My tests on nouveau show terrible slowdown.</span><span class="token comment"># Useful with --glx-swap-method, as well.</span><span class="token key attr-name">glx-copy-from-front</span> <span class="token punctuation">=</span> <span class="token value attr-value">false;</span><span class="token comment"># GLX backend: Use MESA_copy_sub_buffer to do partial screen update.</span><span class="token comment"># My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.</span><span class="token comment"># May break VSync and is not available on some drivers.</span><span class="token comment"># Overrides --glx-copy-from-front.</span><span class="token comment"># glx-use-copysubbuffermesa = true;</span><span class="token comment"># GLX backend: Avoid rebinding pixmap on window damage.</span><span class="token comment"># Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).</span><span class="token comment"># Recommended if it works.</span><span class="token comment"># glx-no-rebind-pixmap = true;</span><span class="token comment"># GLX backend: GLX buffer swap method we assume.</span><span class="token comment"># Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).</span><span class="token comment"># undefined is the slowest and the safest, and the default value.</span><span class="token comment"># copy is fastest, but may fail on some drivers,</span><span class="token comment"># 2-6 are gradually slower but safer (6 is still faster than 0).</span><span class="token comment"># Usually, double buffer means 2, triple buffer means 3.</span><span class="token comment"># buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.</span><span class="token comment"># Useless with --glx-use-copysubbuffermesa.</span><span class="token comment"># Partially breaks --resize-damage.</span><span class="token comment"># Defaults to undefined.</span><span class="token key attr-name">glx-swap-method</span> <span class="token punctuation">=</span> <span class="token value attr-value">"undefined";</span><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># Shadows</span><span class="token comment">#</span><span class="token comment">#################################</span><span class="token comment"># Enabled client-side shadows on windows.</span><span class="token key attr-name">shadow</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Don't draw shadows on DND windows.</span><span class="token key attr-name">no-dnd-shadow</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Avoid drawing shadows on dock/panel windows.</span><span class="token key attr-name">no-dock-shadow</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Zero the part of the shadow's mask behind the window. Fix some weirdness with ARGB windows.</span><span class="token comment">#clear-shadow = true;</span><span class="token comment"># The blur radius for shadows. (default 12)</span><span class="token key attr-name">shadow-radius</span> <span class="token punctuation">=</span> <span class="token value attr-value">5;</span><span class="token comment"># The left offset for shadows. (default -15)</span><span class="token key attr-name">shadow-offset-x</span> <span class="token punctuation">=</span> <span class="token value attr-value">-5;</span><span class="token comment"># The top offset for shadows. (default -15)</span><span class="token key attr-name">shadow-offset-y</span> <span class="token punctuation">=</span> <span class="token value attr-value">-5;</span><span class="token comment"># The translucency for shadows. (default .75)</span><span class="token key attr-name">shadow-opacity</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.5;</span><span class="token comment"># Set if you want different colour shadows</span><span class="token comment"># shadow-red = 0.0;</span><span class="token comment"># shadow-green = 0.0;</span><span class="token comment"># shadow-blue = 0.0;</span><span class="token comment"># The shadow exclude options are helpful if you have shadows enabled. </span><span class="token comment">#Due to the way compton draws its shadows, certain applications will have visual glitches</span><span class="token comment"># (most applications are fine, only apps that do weird things with xshapes or argb are affected).</span><span class="token comment"># This list includes all the affected apps I found in my testing. </span><span class="token comment">#The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.</span><span class="token comment">#此处加入排除阴影的程序名字</span><span class="token key attr-name">shadow-exclude</span> <span class="token punctuation">=</span> <span class="token value attr-value">[</span>    <span class="token key attr-name">"! name~</span><span class="token punctuation">=</span><span class="token value attr-value">''",</span>    <span class="token key attr-name">"name</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Notification'",</span>    <span class="token key attr-name">"name</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Plank'",</span>    <span class="token key attr-name">"name</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Docky'",</span>    <span class="token key attr-name">"name</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Kupfer'",</span>    <span class="token key attr-name">"name</span> <span class="token punctuation">=</span> <span class="token value attr-value">'xfce4-notifyd'",</span>    <span class="token key attr-name">"name *</span><span class="token punctuation">=</span> <span class="token value attr-value">'VLC'",</span>    <span class="token key attr-name">"name *</span><span class="token punctuation">=</span> <span class="token value attr-value">'compton'",</span>    <span class="token key attr-name">"name *</span><span class="token punctuation">=</span> <span class="token value attr-value">'gedit'",</span>    <span class="token key attr-name">"name *</span><span class="token punctuation">=</span> <span class="token value attr-value">'Archive Manager'",</span><span class="token comment">#    "name *= 'Chromium'",</span><span class="token comment">#    "name *= 'Chrome'",</span><span class="token comment">#    "name *= 'Firefox'",</span>    <span class="token key attr-name">"class_g</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Conky'",</span>    <span class="token key attr-name">"class_g</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Kupfer'",</span>    <span class="token key attr-name">"class_g</span> <span class="token punctuation">=</span> <span class="token value attr-value">'Synapse'",</span>    <span class="token key attr-name">"class_g ?</span><span class="token punctuation">=</span> <span class="token value attr-value">'Notify-osd'",</span>    <span class="token key attr-name">"class_g ?</span><span class="token punctuation">=</span> <span class="token value attr-value">'Cairo-dock'",</span>    <span class="token key attr-name">"class_g ?</span><span class="token punctuation">=</span> <span class="token value attr-value">'Xfce4-notifyd'",</span>    <span class="token key attr-name">"class_g ?</span><span class="token punctuation">=</span> <span class="token value attr-value">'Xfce4-power-manager'"</span>];<span class="token comment"># Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)</span><span class="token key attr-name">shadow-ignore-shaped</span> <span class="token punctuation">=</span> <span class="token value attr-value">false;</span><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># Opacity</span><span class="token comment">#</span><span class="token comment">#################################</span><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># Fading</span><span class="token comment">#</span><span class="token comment">#################################</span><span class="token comment"># Fade windows during opacity changes.</span><span class="token key attr-name">fading</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># The time between steps in a fade in milliseconds. (default 10).</span><span class="token key attr-name">fade-delta</span> <span class="token punctuation">=</span> <span class="token value attr-value">4;</span><span class="token comment"># Opacity change between steps while fading in. (default 0.028).</span><span class="token comment">#fade-in-step = 0.03;</span><span class="token comment"># Opacity change between steps while fading out. (default 0.03).</span><span class="token comment">#fade-out-step = 0.03;</span><span class="token comment"># Fade windows in/out when opening/closing</span><span class="token comment">#no-fading-openclose = true;</span><span class="token comment"># Specify a list of conditions of windows that should not be faded.</span><span class="token comment">#fade-exclude = [ ];</span><span class="token key attr-name">fade-exclude</span> <span class="token punctuation">=</span> <span class="token value attr-value">[ ];</span><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># Other</span><span class="token comment">#</span><span class="token comment">#################################</span><span class="token comment"># Try to detect WM windows and mark them as active.</span><span class="token key attr-name">mark-wmwin-focused</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Mark all non-WM but override-redirect windows active (e.g. menus).</span><span class="token key attr-name">mark-ovredir-focused</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.</span><span class="token comment"># Usually more reliable but depends on a EWMH-compliant WM.</span><span class="token key attr-name">use-ewmh-active-win</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.</span><span class="token key attr-name">detect-rounded-corners</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.</span><span class="token comment"># This prevents opacity being ignored for some apps.</span><span class="token comment"># For example without this enabled my xfce4-notifyd is 100% opacity no matter what.</span><span class="token comment">#detect-client-opacity = true;</span><span class="token comment"># Specify refresh rate of the screen.</span><span class="token comment"># If not specified or 0, compton will try detecting this with X RandR extension.</span><span class="token key attr-name">refresh-rate</span> <span class="token punctuation">=</span> <span class="token value attr-value">0;</span><span class="token comment"># Set VSync method. VSync methods currently available:</span><span class="token comment"># none: No VSync</span><span class="token comment"># drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.</span><span class="token comment"># opengl: Try to VSync with SGI_video_sync OpenGL extension. Only work on some drivers.</span><span class="token comment"># opengl-oml: Try to VSync with OML_sync_control OpenGL extension. Only work on some drivers.</span><span class="token comment"># opengl-swc: Try to VSync with SGI_swap_control OpenGL extension. Only work on some drivers. </span><span class="token comment">#Works only with GLX backend. Known to be most effective on many drivers. </span><span class="token comment">#Does not actually control paint timing, only buffer swap is affected, </span><span class="token comment">#so it doesn’t have the effect of --sw-opti unlike other methods. Experimental.</span><span class="token comment"># opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension. Basically the same as opengl-swc above, except the extension we use.</span><span class="token comment"># (Note some VSync methods may not be enabled at compile time.)</span><span class="token key attr-name">vsync</span> <span class="token punctuation">=</span> <span class="token value attr-value">"opengl-swc";</span><span class="token comment"># Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.</span><span class="token comment"># Reported to have no effect, though.</span><span class="token key attr-name">dbe</span> <span class="token punctuation">=</span> <span class="token value attr-value">false;</span><span class="token comment"># Painting on X Composite overlay window. Recommended.</span><span class="token key attr-name">paint-on-overlay</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.</span><span class="token comment"># This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,</span><span class="token comment"># unless you wish to specify a lower refresh rate than the actual value.</span><span class="token key attr-name">sw-opti</span> <span class="token punctuation">=</span> <span class="token value attr-value">false;</span><span class="token comment"># Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.</span><span class="token comment"># Known to cause flickering when redirecting/unredirecting windows.</span><span class="token comment"># paint-on-overlay may make the flickering less obvious.</span><span class="token key attr-name">unredir-if-possible</span> <span class="token punctuation">=</span> <span class="token value attr-value">false;</span><span class="token comment"># Specify a list of conditions of windows that should always be considered focused.</span><span class="token key attr-name">focus-exclude</span> <span class="token punctuation">=</span> <span class="token value attr-value">[ ];</span><span class="token comment"># Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.</span><span class="token key attr-name">detect-transient</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment"># Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.</span><span class="token comment"># WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.</span><span class="token key attr-name">detect-client-leader</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span><span class="token comment">#################################</span><span class="token comment">#</span><span class="token comment"># Window type settings</span><span class="token comment">#</span><span class="token comment">#################################</span>wintypes:&#123;    <span class="token key attr-name">tooltip</span> <span class="token punctuation">=</span>    &#123;        <span class="token comment"># fade: Fade the particular type of windows.</span>        <span class="token key attr-name">fade</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span>        <span class="token comment"># shadow: Give those windows shadow</span>        <span class="token key attr-name">shadow</span> <span class="token punctuation">=</span> <span class="token value attr-value">false;</span>        <span class="token comment"># opacity: Default opacity for the type of windows.</span>        <span class="token key attr-name">opacity</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.85;</span>        <span class="token comment"># focus: Whether to always consider windows of this type focused.</span>        <span class="token key attr-name">focus</span> <span class="token punctuation">=</span> <span class="token value attr-value">true;</span>    &#125;;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关闭xfce4自带的合成器">关闭xfce4自带的合成器</h2><p><strong>设置管理器-&gt;窗口管理器微调-&gt;合成器</strong></p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/compton.png" alt="" loading="lazy"></p><h2 id="启动compton">启动compton</h2><h3 id="前台运行">前台运行</h3><pre class="language-bash" data-language="bash"><code class="language-bash">compton</code></pre><h3 id="后台运行">后台运行</h3><pre class="language-bash" data-language="bash"><code class="language-bash">compton <span class="token parameter variable">-b</span></code></pre><h3 id="开机自启动">开机自启动</h3><p>修改~/.xprofile文件<br>将<code>compton -b</code>直接加到新的一行就行了</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;安装compton&quot;&gt;安装compton&lt;/h2&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; compton&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;修改配置文件&quot;&gt;修改配置文件&lt;/h2&gt;
&lt;p&gt;compton的配置文件在~/.config/compton.conf&lt;br&gt;
因为有些窗口的阴影有时候会变的很奇怪,大概你有可能需要修改一下,附上我的:</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
    <category term="xfce4" scheme="https://asutorufa.github.io/tags/xfce4/"/>
    
  </entry>
  
  <entry>
    <title>linux下intel&amp;AMD双显卡切换</title>
    <link href="https://asutorufa.github.io/posts/3b8b96de/"/>
    <id>https://asutorufa.github.io/posts/3b8b96de/</id>
    <published>2018-09-08T19:02:47.000Z</published>
    <updated>2020-05-05T19:02:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用<strong>xrandr</strong>显示可支持的显卡</p><pre class="language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--listproviders</span></code></pre><p>输出类似以下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Providers: number <span class="token builtin class-name">:</span> <span class="token number">2</span>Provider <span class="token number">0</span>: id: 0x6b cap: 0x9, Source Output, Sink Offload crtcs: <span class="token number">3</span> outputs: <span class="token number">7</span> associated providers: <span class="token number">1</span> name:modesettingProvider <span class="token number">1</span>: id: 0x41 cap: 0x6, Sink Output, Source Offload crtcs: <span class="token number">2</span> outputs: <span class="token number">0</span> associated providers: <span class="token number">1</span> name:OLAND @ pci:0000:01:00.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>To be able to render GPU-intensive applications by the more powerful discrete card use</p><pre class="language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--setprovideroffloadsink</span> <span class="token number">1</span> <span class="token number">0</span></code></pre><p>或者<span id="more"></span></p><pre class="language-bash" data-language="bash"><code class="language-bash">xrandr <span class="token parameter variable">--setprovideroffloadsink</span> 0x41 0x6b</code></pre><p>使用DRI_PRIME为某个应用选择使用哪一张显卡,使用glxinfo可以查看正在使用的显卡</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">DRI_PRIME</span><span class="token operator">=</span><span class="token number">0</span> glxinfo <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"OpenGL renderer"</span><span class="token assign-left variable">DRI_PRIME</span><span class="token operator">=</span><span class="token number">1</span> glxinfo <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"OpenGL renderer"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如为steam启用独显</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">DRI_PRIME</span><span class="token operator">=</span><span class="token number">1</span> steam</code></pre><p>如果需要使用独显进行视频硬件播放,还需指定视频解码库,不然会乱码:<br>如AMD:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">DRI_PRIME</span><span class="token operator">=</span><span class="token number">1</span>            <span class="token comment"># for laptops with switchable graphics</span><span class="token assign-left variable">LIBVA_DRIVER_NAME</span><span class="token operator">=</span>r600 <span class="token comment"># value depends on the driver, check /usr/lib/dri for possible options</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用mpv:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">DRI_PRIME</span><span class="token operator">=</span><span class="token number">1</span>  <span class="token assign-left variable">LIBVA_DRIVER_NAME</span><span class="token operator">=</span>r600 mpv <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span></code></pre><p>参考资料:<br>1.<a href="https://askubuntu.com/questions/1038271/intel-amd-hybrid-graphics-ubuntu-18-04">Intel/AMD Hybrid graphics Ubuntu 18.04</a><br>2.<a href="https://wiki.archlinux.org/index.php/PRIME">PRIME (简体中文)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用&lt;strong&gt;xrandr&lt;/strong&gt;显示可支持的显卡&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;xrandr &lt;span class=&quot;token parameter variable&quot;&gt;--listproviders&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输出类似以下内容&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Providers: number &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
Provider &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;: id: 0x6b cap: 0x9, Source Output, Sink Offload crtcs: &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; outputs: &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt; associated providers: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; name:modesetting
Provider &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;: id: 0x41 cap: 0x6, Sink Output, Source Offload crtcs: &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; outputs: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; associated providers: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; name:OLAND @ pci:0000:01:00.0&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To be able to render GPU-intensive applications by the more powerful discrete card use&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;xrandr &lt;span class=&quot;token parameter variable&quot;&gt;--setprovideroffloadsink&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
    <category term="双显卡" scheme="https://asutorufa.github.io/tags/%E5%8F%8C%E6%98%BE%E5%8D%A1/"/>
    
    <category term="amd" scheme="https://asutorufa.github.io/tags/amd/"/>
    
  </entry>
  
  <entry>
    <title>python使用lxml分析网页</title>
    <link href="https://asutorufa.github.io/posts/77d15527/"/>
    <id>https://asutorufa.github.io/posts/77d15527/</id>
    <published>2018-08-07T14:47:51.000Z</published>
    <updated>2018-08-07T14:47:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先得引入lxml</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#xpath为</span>frome lxml <span class="token keyword">import</span> etree<span class="token comment">#cssselector为</span><span class="token keyword">import</span> lxml<span class="token punctuation">.</span>html<span class="token comment">#cssselector使用起来简单但功能比xpath少</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cssselector</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tree <span class="token operator">=</span> lxml<span class="token punctuation">.</span>html<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span><span class="token string">'你获取的网页源代码文件或变量'</span><span class="token punctuation">)</span>css <span class="token operator">=</span> tree<span class="token punctuation">.</span>cssselect<span class="token punctuation">(</span><span class="token string">'要选择的内容'</span><span class="token punctuation">)</span><span class="token comment">#例如tree.cssselect('div.word-info > div.pronounces > span.word-audio')</span><span class="token comment">#选择器选择的结果为list</span>css<span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#表示选择的内容</span>css<span class="token punctuation">.</span>attrib<span class="token punctuation">[</span><span class="token string">'要表示的标签属性'</span><span class="token punctuation">]</span><span class="token comment">#如css.attrb['class']表示的就是所选择内容的class属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><p><strong>如果选择的内容换行符太多可以使用split表示成list去除</strong></p><table><thead><tr><th>说明</th><th>例子</th></tr></thead><tbody><tr><td>选择所有标签</td><td>*</td></tr><tr><td>选择&lt;a&gt;标签</td><td>a</td></tr><tr><td>选择所有class=&quot;link&quot;的标签</td><td>.link</td></tr><tr><td>选择class=&quot;link&quot;的&lt;a&gt;标签</td><td>a.link</td></tr><tr><td>选择id=&quot;home&quot;的&lt;a&gt;标签</td><td>a#home</td></tr><tr><td>选择父元素为&lt;a&gt;标签的所有&lt;span&gt;标签</td><td>a &gt; span</td></tr><tr><td>选择&lt;a&gt;标签内部的所有&lt;span&gt;标签</td><td>a span</td></tr><tr><td>选择title属性为”Home”的所有&lt;a&gt;标签</td><td>a[title=Home]</td></tr></tbody></table><p>xpath</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">selector<span class="token operator">=</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span><span class="token string">'你获取的网页源代码文件或变量'</span><span class="token punctuation">)</span>css <span class="token operator">=</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'要选择的内容'</span><span class="token punctuation">)</span><span class="token comment">#xpath可直接表示</span><span class="token comment">#xpath可选择并表示属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>xpath由于内容太多,可以直接参考官方文档</em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;首先得引入lxml&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#xpath为&lt;/span&gt;
frome lxml &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; etree
&lt;span class=&quot;token comment&quot;&gt;#cssselector为&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; lxml&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html
&lt;span class=&quot;token comment&quot;&gt;#cssselector使用起来简单但功能比xpath少&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cssselector&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;tree &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; lxml&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fromstring&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;你获取的网页源代码文件或变量&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
css &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tree&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cssselect&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;要选择的内容&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;#例如tree.cssselect(&#39;div.word-info &gt; div.pronounces &gt; span.word-audio&#39;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#选择器选择的结果为list&lt;/span&gt;

css&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text_content&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;#表示选择的内容&lt;/span&gt;

css&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;attrib&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;要表示的标签属性&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;#如css.attrb[&#39;class&#39;]表示的就是所选择内容的class属性&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="python" scheme="https://asutorufa.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://asutorufa.github.io/tags/python/"/>
    
    <category term="编程" scheme="https://asutorufa.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>python获取网页源码(爬虫?)</title>
    <link href="https://asutorufa.github.io/posts/cee10602/"/>
    <id>https://asutorufa.github.io/posts/cee10602/</id>
    <published>2018-08-07T14:35:06.000Z</published>
    <updated>2018-08-07T14:35:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>利用requrst,使用首先要</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests</code></pre><p>使用方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">url <span class="token operator">=</span> <span class="token string">'要获取的网页地址'</span>useragent <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span><span class="token comment">#user-agent 可有可无,有些网页防爬虫就要模拟浏览器</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span>useragent<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;利用requrst,使用首先要&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token</summary>
        
      
    
    
    
    <category term="python" scheme="https://asutorufa.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://asutorufa.github.io/tags/python/"/>
    
    <category term="编程" scheme="https://asutorufa.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>snap删除旧的core(snap删除其他版本的软件)</title>
    <link href="https://asutorufa.github.io/posts/b6b8953/"/>
    <id>https://asutorufa.github.io/posts/b6b8953/</id>
    <published>2018-06-28T13:43:41.000Z</published>
    <updated>2018-06-28T13:43:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>偶尔发现snap会自动升级core且不删除旧版，在’/snap/core’<br>会发现好几个版本的文件夹。<br>使用</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> snap remove core <span class="token parameter variable">--revision</span> xxx</code></pre><p>删除某个版本的core，xxx是软件的rev，使用</p><pre class="language-bash" data-language="bash"><code class="language-bash">snap list</code></pre><p>可以查看软件的rev，其他软件也能用这个方法删除旧的版本哦。</p><p>参考：<a href="https://askubuntu.com/questions/828859/how-to-unmount-and-possibly-delete-old-ubuntu-core-snap">How to unmount and possibly delete old Ubuntu Core snap</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;偶尔发现snap会自动升级core且不删除旧版，在’/snap/core’&lt;br&gt;
会发现好几个版本的文件夹。&lt;br&gt;
使用&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
    <category term="snap" scheme="https://asutorufa.github.io/tags/snap/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu终端下连接wifi</title>
    <link href="https://asutorufa.github.io/posts/fb6d8628/"/>
    <id>https://asutorufa.github.io/posts/fb6d8628/</id>
    <published>2018-06-23T12:24:10.000Z</published>
    <updated>2018-06-23T12:24:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先使用rfkill查看你的wifi设备是否被停用">首先使用rfkill查看你的wifi设备是否被停用</h2><p>使用命令</p><pre class="language-bash" data-language="bash"><code class="language-bash">rfkill list</code></pre><p>获得设备列表，每个都包含与之关联的索引号，从 0 开始<br>查看设备是否被停用，要启用被停用的设备，请运行：</p><pre class="language-bash" data-language="bash"><code class="language-bash">rfkill unblock <span class="token operator">&lt;</span>索引号<span class="token operator">></span></code></pre><p>要启用所有设备，请运行：</p><pre class="language-bash" data-language="bash"><code class="language-bash">rfkill unblock all</code></pre><span id="more"></span><p>您可以使用这个索引号让 rfkill 停使或者使用某个设备，例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash">rfkill block <span class="token number">0</span></code></pre><p>您还可以使用 rfkill 阻断某一类设备，或者所有启用了RFKill的设备。例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash">rfkill block wifi </code></pre><p>停用系统中的所有Wi-Fi设备</p><h2 id="启用无线网卡">启用无线网卡</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> wlan0 up</code></pre><h2 id="使用iwconfig命令搜索无线网">使用iwconfig命令搜索无线网</h2><pre class="language-bash" data-language="bash"><code class="language-bash">iwlist wlan0 scan</code></pre><p>记下essid<br>连接无密码的无线网</p><pre class="language-bash" data-language="bash"><code class="language-bash">iwconfig wlan0 essid essidname</code></pre><p>其中essidname是搜索到的无线网essid<br>连接有密码的无线网</p><pre class="language-bash" data-language="bash"><code class="language-bash">iwconfig wlan0 essid essidname key <span class="token operator">&lt;</span>密码<span class="token operator">></span></code></pre><h2 id="补充">补充</h2><p>通过dhcp获取IP</p><pre class="language-bash" data-language="bash"><code class="language-bash">dhclient wlan0</code></pre><p>或</p><pre class="language-bash" data-language="bash"><code class="language-bash">dhcpcd wlan0</code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;首先使用rfkill查看你的wifi设备是否被停用&quot;&gt;首先使用rfkill查看你的wifi设备是否被停用&lt;/h2&gt;
&lt;p&gt;使用命令&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;rfkill list&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获得设备列表，每个都包含与之关联的索引号，从 0 开始&lt;br&gt;
查看设备是否被停用，要启用被停用的设备，请运行：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;rfkill unblock &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;索引号&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;要启用所有设备，请运行：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;rfkill unblock all&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="linux" scheme="https://asutorufa.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://asutorufa.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>暗影精灵更改efi启动顺序</title>
    <link href="https://asutorufa.github.io/posts/6683eff9/"/>
    <id>https://asutorufa.github.io/posts/6683eff9/</id>
    <published>2018-06-23T11:43:40.000Z</published>
    <updated>2018-06-23T11:43:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>–2019-04-22 更新–<br><strong>最新版bios已经可以调整启动顺序了(<a href="#jump">图在最下面</a>)</strong></p><p>-------- 之 前 -------<br>暗影精灵安装完ubuntu之后只能开机按esc+f9进入ubuntu，否则会直接启动windows,虽然可以使用但及其不方便的说</p><p>首先从ubuntu进入/boot/efi/EFI<br><strong>备份windwos的启动文件</strong>（<strong>切记一定要备份，否则只能从pe重新建立windwos启动项</strong>）</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> <span class="token parameter variable">-arf</span> Microsoft win10</code></pre><p>将ubuntu的grubx64.efi替换掉EFI/Microsoft/Boot/bootmgfw.efi文件 <span id="more"></span></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> <span class="token parameter variable">-arf</span> ubuntu/grubx64.efi Microsoft/Boot/bootmgfw.efi </code></pre><p>这样替换之后grub就接管了系统的启动</p><p>然后将/boot/grub/grub.cfg中关于windows的启动段复制到/etc/grub.d/40_custom中<br>将<strong>chainloader /EFI/Micorosoft/Boot/bootmgfw.efi</strong><br>改为<br><strong>chainloader /EFI/win10/Boot/bootmgfw.efi</strong><br>就是把中间那个改为你备份的文件夹，可以改一改前面的启动名称<br>最后执行update-grub来更新启动项</p><p>但是windwos有大更新的时候会把更改的覆盖掉，再来一遍就好了</p><p><span id = "jump"><img src="http://blog-1254450445.cossgp.myqcloud.com/efi.jpg" alt="" loading="lazy"></span></p><p>参考文章<a href="https://blog.csdn.net/zyix_0712/article/details/69675748">暗影精灵2pro安装win10+ubuntu16.10双系统</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;–2019-04-22 更新–&lt;br&gt;
&lt;strong&gt;最新版bios已经可以调整启动顺序了(&lt;a href=&quot;#jump&quot;&gt;图在最下面&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-------- 之 前 -------&lt;br&gt;
暗影精灵安装完ubuntu之后只能开机按esc+f9进入ubuntu，否则会直接启动windows,虽然可以使用但及其不方便的说&lt;/p&gt;
&lt;p&gt;首先从ubuntu进入/boot/efi/EFI&lt;br&gt;
&lt;strong&gt;备份windwos的启动文件&lt;/strong&gt;（&lt;strong&gt;切记一定要备份，否则只能从pe重新建立windwos启动项&lt;/strong&gt;）&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-arf&lt;/span&gt; Microsoft win10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将ubuntu的grubx64.efi替换掉EFI/Microsoft/Boot/bootmgfw.efi文件</summary>
    
    
    
    <category term="Computer" scheme="https://asutorufa.github.io/categories/Computer/"/>
    
    
    <category term="EFI" scheme="https://asutorufa.github.io/tags/EFI/"/>
    
    <category term="BIOS" scheme="https://asutorufa.github.io/tags/BIOS/"/>
    
  </entry>
  
  <entry>
    <title>関西弁コレクション</title>
    <link href="https://asutorufa.github.io/posts/a4241e7/"/>
    <id>https://asutorufa.github.io/posts/a4241e7/</id>
    <published>2018-06-21T09:42:02.000Z</published>
    <updated>2020-01-30T09:42:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>普段発見の関西弁ここで記録します。</p><p>–<strong>2020年1月30日</strong>–<br>おらん とはどういう意味ですか?</p><blockquote><p>文からするとその方は関西の人ですかね。おらんは方言で、「いない」という意味です。<br>例文：<em>俺も一緒やな 3年ぐらいはおらん。</em></p></blockquote><p>–<strong>2019年2月1日</strong>–</p><hr><p>①関西弁の～ねんけど、～やねん、～ねんの意味を教えて下さい<br>②～ねやは～ですかの意味ですか？それ意外に意味、使い方等は有りますか？<br>③言葉の関西弁のアクセントを教えて下さい</p><p>①・・・<br>～ねんけど ですけれど（〇〇なんですけれど）<br>～やねん、～ねん です（〇〇なんです）</p><p>②・・・<br>～ねやは～（～やねん”わ”～ですね。）<br>〇○なんですよ。</p><p>③・・・<br>～ねんけど（中中）<br>～やねん（高低）<br>～やねんわ～（高低中）</p><span id="more"></span>  <hr><p>関西弁で、「あんねんけど」と「あるねんけど」の違いはなんですか？</p><p>意味の違いはない。<br>「あるねんけど」＝「あんねんけど」</p><p>「る」が撥音化して「ん」になっただけ。日本語では語中の「ラ行音」が「ん」に変化する傾向がある。<br>・それで→そんで<br>・分からない→分かんない</p><p>–<strong>2018年12月8日</strong>–</p><hr><p>せやからアカンてゆうたやろ<br>せやから 別表記：そやから<br>「だから」の意味。主に関西地方で用いる。「そやから」ともいう。</p><p>アカン(あかん)<br>関西弁で「ダメ」の意味。</p><p>『ゆうて』は『～言って』<br>##方言で だから ダメって 言ったでしょ</p><p>–<strong>2018年8月29日</strong>–</p><hr><p>ビビり【名词】<br>1.颤动，振纹（机械）<br>2.胆小，大阪方言。関西弁</p><hr><p>女子|おなご</p><ul><li>名词<ul><li>（女の子、女児）。</li><li>（女の人、女性、婦人）。</li><li>（召し使いの女、女中、はしため）。　&lt;-関西弁</li></ul></li></ul><p>–<strong>2018年8月7日</strong>–</p><hr><p>それアカンやつや<br>一字一句、分けてみましょう。「それ、アカン、やつ、や」になります。<br>「それ」はthatのことですよね。<br>「アカン」はNOのことです。その通り、関西弁です。<br>「やつ」は奴のことです。人を愚弄する言い方ですね。でも人以外に、ものに対しても指す場合があります。<br>「や」も関西弁です。<br>これを東京の人が話すと「それはいけない人だよね～」や「それはありえないよね～」という言い方になります。元ネタを想像すると、ここでは「やつ」はものを指していると思います。</p><hr><p>せ や な<br>同意を表明する語。関西弁。「そうだね」、「そうだな」などに相当する。</p><hr><p>しんどい</p><ul><li>骨が折れる。難儀だ。<br>例文：<ul><li>この仕事はしんどい。</li></ul></li><li>くたびれている。<br>例文：<ul><li>しんどくてもこの仕事をやってしまおう。</li><li>おお，しんどい。</li></ul></li></ul><hr><p>ほんま 【本真】（ 名 ・形動 ）<br>本当である・こと（さま）。真実。主に関西地方で用いる。 「 －の話やで」 「 －に驚いたわ」</p><hr><p>しゃあない<br>大阪弁で「しかたない」の意味である。</p><hr><p>アカン<br>（「埒らち明かぬ」の略。多く関西で使う）うまくいかない。だめだ。不可である。</p><hr><p>アホやん<br>ドジっ娘</p><p>中国語：<br>跟冒失娘（ドジっ娘）类似，关西方言</p><blockquote><p>冒失娘（ドジっ娘），萌属性之一。此属性以女性为主，若是男性可用较中性的“ドジっ子”。<br>日文“どじ”或“どぢ”是指人或事的出错和失误。“ドジっ娘”就是指经常弄翻物件、行事笨拙、“大错不出，小错不断”，总是搞出呆呆笨笨事情的少女。<br>中文意译的“冒失”，是指做事有漏失，而不是为人鲁莽无礼的意思。<br>どじっ应该不写成汉字<br>参考自维基百科</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;普段発見の関西弁ここで記録します。&lt;/p&gt;
&lt;p&gt;–&lt;strong&gt;2020年1月30日&lt;/strong&gt;–&lt;br&gt;
おらん とはどういう意味ですか?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文からするとその方は関西の人ですかね。おらんは方言で、「いない」という意味です。&lt;br&gt;
例文：&lt;em&gt;俺も一緒やな 3年ぐらいはおらん。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;–&lt;strong&gt;2019年2月1日&lt;/strong&gt;–&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;①関西弁の～ねんけど、～やねん、～ねんの意味を教えて下さい&lt;br&gt;
②～ねやは～ですかの意味ですか？それ意外に意味、使い方等は有りますか？&lt;br&gt;
③言葉の関西弁のアクセントを教えて下さい&lt;/p&gt;
&lt;p&gt;①・・・&lt;br&gt;
～ねんけど ですけれど（〇〇なんですけれど）&lt;br&gt;
～やねん、～ねん です（〇〇なんです）&lt;/p&gt;
&lt;p&gt;②・・・&lt;br&gt;
～ねやは～（～やねん”わ”～ですね。）&lt;br&gt;
〇○なんですよ。&lt;/p&gt;
&lt;p&gt;③・・・&lt;br&gt;
～ねんけど（中中）&lt;br&gt;
～やねん（高低）&lt;br&gt;
～やねんわ～（高低中）&lt;/p&gt;</summary>
    
    
    
    <category term="日本語" scheme="https://asutorufa.github.io/categories/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    
    <category term="関西弁" scheme="https://asutorufa.github.io/tags/%E9%96%A2%E8%A5%BF%E5%BC%81/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript对字符串操作</title>
    <link href="https://asutorufa.github.io/posts/86cfa6a/"/>
    <id>https://asutorufa.github.io/posts/86cfa6a/</id>
    <published>2018-03-24T23:17:58.000Z</published>
    <updated>2018-09-04T23:17:58.000Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> name<span class="token operator">=</span><span class="token string">'aaaa'</span><span class="token punctuation">;</span><span class="token keyword">var</span> age<span class="token operator">=</span><span class="token string">'bbbb'</span><span class="token punctuation">;</span><span class="token keyword">var</span> change<span class="token operator">=</span><span class="token string">'Hello javascript'</span><span class="token punctuation">;</span><span class="token keyword">var</span> message<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">hello,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">,</span><span class="token template-punctuation string">`</span></span><span class="token operator">+</span>name<span class="token operator">+</span>age<span class="token punctuation">;</span><span class="token comment">//将多个字符串写成一句话</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> length<span class="token operator">=</span>message<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token comment">//获取字符串长度</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> upper<span class="token operator">=</span>message<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把字符串全部变成大写</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> lower<span class="token operator">=</span>message<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把字符串全部变成小写</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> search<span class="token operator">=</span>message<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'aaaa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//搜索字符串位置</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> substr<span class="token operator">=</span>message<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回区间内字符串</span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">x<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//查找元素</span>x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Hello JavaScript"</span><span class="token punctuation">;</span>    <span class="token comment">//改变内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://asutorufa.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://asutorufa.github.io/tags/JavaScript/"/>
    
    <category term="前端" scheme="https://asutorufa.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>让win10的UWP应用走代理</title>
    <link href="https://asutorufa.github.io/posts/d22ffdb6/"/>
    <id>https://asutorufa.github.io/posts/d22ffdb6/</id>
    <published>2018-02-08T15:09:16.000Z</published>
    <updated>2020-03-01T15:09:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原因">原因</h2><p>因为uwp应用的特殊性,即使使用proxifier和proxycap这种应用也无法让其走代理</p><h2 id="现在可直接用WindowsLoopbackManager">现在可直接用WindowsLoopbackManager</h2><p><a href="https://github.com/tiagonmas/Windows-Loopback-Exemption-Manager">WindowsLoopbackManager</a></p><span id="more"></span><h2 id="1-SSTAP">1.SSTAP</h2><p>这个应用是创建虚拟网卡,让windows全局走代理.但其有弊端就是有一些国内的网站也会走代理,比如BILIBILI.虽然可以自己写规则但实在是麻烦无比.</p><h2 id="2-fiddler">2.fiddler</h2><p>利用fiddler的winconfig实现uwp应用走代理<br><img src="http://blog-1254450445.cossgp.myqcloud.com/WK%290~%29WR%29N79$KZ4HZZTDQ2.png" alt="." loading="lazy"><br>把要走代理的应用勾上<br><img src="http://blog-1254450445.cossgp.myqcloud.com/KT3%28H@%60C63P@2KH_X7C@QDI.png" alt="." loading="lazy"><br>但这不是全局代理,只能让uwp应用走代理</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;因为uwp应用的特殊性,即使使用proxifier和proxycap这种应用也无法让其走代理&lt;/p&gt;
&lt;h2 id=&quot;现在可直接用WindowsLoopbackManager&quot;&gt;现在可直接用WindowsLoopbackManager&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tiagonmas/Windows-Loopback-Exemption-Manager&quot;&gt;WindowsLoopbackManager&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://asutorufa.github.io/categories/Network/"/>
    
    
    <category term="proxy" scheme="https://asutorufa.github.io/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>c语言数组输出的另一种方法</title>
    <link href="https://asutorufa.github.io/posts/854ed6ec/"/>
    <id>https://asutorufa.github.io/posts/854ed6ec/</id>
    <published>2017-12-10T10:39:54.000Z</published>
    <updated>2017-12-10T10:39:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到这样一种写法,原文链接:<a href="http://blog.accut.cn/archives/173">一个有趣的C语言程序</a></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash">output: <span class="token number">2</span></code></pre><span id="more"></span><p>int x[5],x实际上保存的是这个数组首元素的地址也就是&amp;x[0].<br>a[x]的等效写法是*(a+&amp;x).因为上面说了x实际上是x[0].<br>所以可以进一步写成*(a+&amp;x[0]),又因为a=1所以可以替换成*(&amp;x[0]+1),也就是x[1].<br>所以就是x[1]对应的值：2</p><p>由此我又想到了二位数组</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash">output: <span class="token number">4</span></code></pre><p>感觉好神奇,而且在之前不知道在哪看到__c语言的数组其实就是指针的合集__,而且最近要用链表,更觉得链表和数组差不多.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天看到这样一种写法,原文链接:&lt;a href=&quot;http://blog.accut.cn/archives/173&quot;&gt;一个有趣的C语言程序&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-c&quot; data-language=&quot;c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;
 
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;output: &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Program" scheme="https://asutorufa.github.io/categories/Program/"/>
    
    
    <category term="C" scheme="https://asutorufa.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>利用结构体让函数返回多个值</title>
    <link href="https://asutorufa.github.io/posts/c69434f1/"/>
    <id>https://asutorufa.github.io/posts/c69434f1/</id>
    <published>2017-11-29T14:39:27.000Z</published>
    <updated>2017-11-29T14:39:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="c语言">c语言</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"stdio.h"</span></span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">test</span> <span class="token comment">//建立结构体</span><span class="token punctuation">&#123;</span> <span class="token keyword">int</span> a<span class="token punctuation">;</span> <span class="token keyword">int</span> b<span class="token punctuation">;</span> <span class="token keyword">int</span> c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>T<span class="token punctuation">;</span>T <span class="token function">testt</span><span class="token punctuation">(</span><span class="token keyword">int</span> aa<span class="token punctuation">,</span><span class="token keyword">int</span> bb<span class="token punctuation">,</span><span class="token keyword">int</span> cc<span class="token punctuation">)</span> <span class="token comment">//建立函数</span><span class="token punctuation">&#123;</span> T aaa<span class="token punctuation">;</span> aaa<span class="token punctuation">.</span>a<span class="token operator">=</span>aa<span class="token operator">*</span>bb<span class="token punctuation">;</span> aaa<span class="token punctuation">.</span>b<span class="token operator">=</span>aa<span class="token operator">*</span>cc<span class="token punctuation">;</span> aaa<span class="token punctuation">.</span>c<span class="token operator">=</span>bb<span class="token operator">*</span>cc<span class="token punctuation">;</span> <span class="token keyword">return</span> aaa<span class="token punctuation">;</span> <span class="token comment">//返回结构</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> T b<span class="token operator">=</span><span class="token function">testt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d \n"</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span>a<span class="token punctuation">,</span>b<span class="token punctuation">.</span>b<span class="token punctuation">,</span>b<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> T <span class="token operator">*</span>f<span class="token operator">=</span><span class="token operator">&amp;</span>b<span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d"</span><span class="token punctuation">,</span>f<span class="token operator">-></span>a<span class="token punctuation">,</span>f<span class="token operator">-></span>b<span class="token punctuation">,</span>f<span class="token operator">-></span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="C">C++</h2><span id="more"></span><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"iostream"</span></span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">sss</span> <span class="token comment">//建立结构体</span><span class="token punctuation">&#123;</span> <span class="token keyword">int</span> a<span class="token punctuation">;</span> <span class="token keyword">int</span> b<span class="token punctuation">;</span> <span class="token keyword">int</span> c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>S<span class="token punctuation">;</span>S <span class="token function">s</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">,</span><span class="token keyword">double</span> c<span class="token punctuation">)</span> 建立函数<span class="token punctuation">&#123;</span> S d<span class="token punctuation">;</span> d<span class="token punctuation">.</span>a<span class="token operator">=</span>a<span class="token operator">*</span>a<span class="token punctuation">;</span> d<span class="token punctuation">.</span>b<span class="token operator">=</span>b<span class="token operator">*</span>b<span class="token punctuation">;</span> d<span class="token punctuation">.</span>c<span class="token operator">=</span>c<span class="token operator">*</span>c<span class="token punctuation">;</span> <span class="token keyword">return</span> d<span class="token punctuation">;</span><span class="token comment">//返回结构体</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> S z<span class="token operator">=</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span>z<span class="token punctuation">.</span>a          <span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl          <span class="token operator">&lt;&lt;</span>z<span class="token punctuation">.</span>b          <span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl          <span class="token operator">&lt;&lt;</span>z<span class="token punctuation">.</span>c          <span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;c语言&quot;&gt;c语言&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-c&quot; data-language=&quot;c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;stdio.h&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//建立结构体&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

T &lt;span class=&quot;token function&quot;&gt;testt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; aa&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; bb&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; cc&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//建立函数&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
 T aaa&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 aaa&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;aa&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;bb&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 aaa&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;b&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;aa&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;cc&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 aaa&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;c&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;bb&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;cc&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; aaa&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//返回结构&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
 T b&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;testt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;%d %d %d &#92;n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 T &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;%d %d %d&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;f&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;C&quot;&gt;C++&lt;/h2&gt;</summary>
    
    
    
    <category term="Program" scheme="https://asutorufa.github.io/categories/Program/"/>
    
    
    <category term="C++" scheme="https://asutorufa.github.io/tags/C/"/>
    
    <category term="C" scheme="https://asutorufa.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>c语言基本类型在内存中的存储方式</title>
    <link href="https://asutorufa.github.io/posts/e404489/"/>
    <id>https://asutorufa.github.io/posts/e404489/</id>
    <published>2017-10-30T15:27:46.000Z</published>
    <updated>2017-10-30T15:27:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浮点数">浮点数</h2><h3 id="float">float</h3><table><thead><tr><th style="text-align:center">符号位</th><th style="text-align:center">+</th><th style="text-align:center">指数位</th><th style="text-align:center">+</th><th style="text-align:center">尾数位</th></tr></thead><tbody><tr><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td></tr><tr><td style="text-align:center">第一位</td><td style="text-align:center"></td><td style="text-align:center">8位</td><td style="text-align:center"></td><td style="text-align:center">23位</td></tr></tbody></table><span id="more"></span><h3 id="double">double</h3><table><thead><tr><th style="text-align:center">符号位</th><th style="text-align:center">+</th><th style="text-align:center">指数位</th><th style="text-align:center">+</th><th style="text-align:center">尾数位</th></tr></thead><tbody><tr><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td><td style="text-align:center"></td><td style="text-align:center">↑</td></tr><tr><td style="text-align:center">第一位</td><td style="text-align:center"></td><td style="text-align:center">11位</td><td style="text-align:center"></td><td style="text-align:center">52位</td></tr></tbody></table><h2 id="整数">整数</h2><p>整数在内存中是以补码的形式存储</p><h3 id="正整数">正整数</h3><p>原码=反码=补码</p><h3 id="负整数">负整数</h3><p>原码即为原码<br>反码=原码符号为不变,其余取反(注:第一位为符号位)<br>补码=反码+1</p><p><strong>2019年4月3日更新</strong><br>原码范围:</p><ul><li>整数:(1111…1) <strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>≤</mo><mi>x</mi><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-(2^n-1) \leq x \leq 2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong> (01111…1)</li><li>小数:(1.111…1) <strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">-(1-2^n) \leq x \leq 1-2^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></strong> (0.111…1)</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;浮点数&quot;&gt;浮点数&lt;/h2&gt;
&lt;h3 id=&quot;float&quot;&gt;float&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;符号位&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;+&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;指数位&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;+&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;尾数位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;↑&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;↑&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;↑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;第一位&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8位&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;23位&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="Program" scheme="https://asutorufa.github.io/categories/Program/"/>
    
    
    <category term="C" scheme="https://asutorufa.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>c语言利用char指针变量将int按字节打印地址</title>
    <link href="https://asutorufa.github.io/posts/43cb2931/"/>
    <id>https://asutorufa.github.io/posts/43cb2931/</id>
    <published>2017-10-24T22:27:37.000Z</published>
    <updated>2017-10-24T22:27:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为int变量的大小为四个字节,所以如果利用int指针变量+1输出地址的话,实际上是加了四个字节后的地址.<br>而char的大小刚好为一个字节,是我们想要的东西.<br>这样我们可以强制转换为char指针变量输出每个字节的地址然后+1,+2,+3来分别输出int的四个字节的地址,得到我们想要的内容.<br>代码如下</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token operator">-</span><span class="token number">65</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>b<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%p\n%p\n%p\n%p\n"</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><span id="more"></span><p>如果你想按字节输出内存中的内容可以这样写,这里我输出的是16进制整数.</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token operator">-</span><span class="token number">65</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>b<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%02x\n%02x\n%02x\n%02x\n"</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>a<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>两者结合一下</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token operator">-</span><span class="token number">65</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>b<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%p %02x\n%p %02x\n%p %02x\n%p %02x\n"</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>a<span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输出内容如图<br><img src="http://blog-1254450445.cossgp.myqcloud.com/TIM%E6%88%AA%E5%9B%BE20171024224821.png" alt="" loading="lazy"><br><strong>有任何错误请邮箱联系我指出我的错误,万分感谢</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;因为int变量的大小为四个字节,所以如果利用int指针变量+1输出地址的话,实际上是加了四个字节后的地址.&lt;br&gt;
而char的大小刚好为一个字节,是我们想要的东西.&lt;br&gt;
这样我们可以强制转换为char指针变量输出每个字节的地址然后+1,+2,+3来分别输出int的四个字节的地址,得到我们想要的内容.&lt;br&gt;
代码如下&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-c&quot; data-language=&quot;c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; a&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;b&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;%p&#92;n%p&#92;n%p&#92;n%p&#92;n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Program" scheme="https://asutorufa.github.io/categories/Program/"/>
    
    
    <category term="C" scheme="https://asutorufa.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>c语言中格式化字符的应用</title>
    <link href="https://asutorufa.github.io/posts/b6b4601/"/>
    <id>https://asutorufa.github.io/posts/b6b4601/</id>
    <published>2017-10-10T13:03:15.000Z</published>
    <updated>2017-10-10T13:03:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="格式化规定符">格式化规定符</h2><p>符号 作用<br>%d 十进制有符号整数<br>%u 十进制无符号整数<br>%f 浮点数<br>%s 字符串<br>%c 单个字符<br>%p 指针的值<br>%e 指数形式的浮点数<br>%x, %X 无符号以十六进制表示的整数<span id="more"></span><br>%0 无符号以八进制表示的整数<br>%g 自动选择合适的表示法</p><p>说明:<br>(1). 可以在&quot;%“和字母之间插进数字表示最大场宽。<br>例如: %3d 表示输出3位整型数, 不够3位右对齐。<br>%9.2f 表示输出场宽为9的浮点数, 其中小数位为2, 整数位为6,小数点占一位, 不够9位右对齐。<br>另外, 若想在输出值前加一些0, 就应在场宽项前加个0。<br>例如: %04d 表示在输出一个小于4位的数值时, 将在前面补0使其总宽度为4位。<br>如果用浮点数表示字符或整型量的输出格式, 小数点后的数字代表最大宽度,小数点前的数字代表最小宽度。<br>例如: %6.9s 表示显示一个长度不小于6且不大于9的字符串。若大于9, 则第9个字符以后的内容将被删除。<br>(2). 可以在”%“和字母之间加小写字母l, 表示输出的是长型数。<br>例如: %ld 表示输出long整数,%lf 表示输出double浮点数<br>(3). 可以控制输出左对齐或右对齐, 即在”%“和字母之间加入一个”-&quot; 号可说明输出为左对齐, 否则为右对齐。<br>例如: %-7d 表示输出7位整数左对齐,%-10s 表示输出10个字符左对齐.</p><h2 id="一些特殊规定字符">一些特殊规定字符</h2><p>字符 作用<br>/n   换行<br>/f   清屏并换页<br>/r   回车<br>/t   Tab符<br>/xhh 表示一个ASCII码用16进表示,其中hh是1到2个16进制数</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;格式化规定符&quot;&gt;格式化规定符&lt;/h2&gt;
&lt;p&gt;符号 作用&lt;br&gt;
%d 十进制有符号整数&lt;br&gt;
%u 十进制无符号整数&lt;br&gt;
%f 浮点数&lt;br&gt;
%s 字符串&lt;br&gt;
%c 单个字符&lt;br&gt;
%p 指针的值&lt;br&gt;
%e 指数形式的浮点数&lt;br&gt;
%x, %X 无符号以十六进制表示的整数</summary>
    
    
    
    <category term="Program" scheme="https://asutorufa.github.io/categories/Program/"/>
    
    
    <category term="C" scheme="https://asutorufa.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>常用等价无穷小的一般形式</title>
    <link href="https://asutorufa.github.io/posts/10bb899d/"/>
    <id>https://asutorufa.github.io/posts/10bb899d/</id>
    <published>2017-10-09T16:35:01.000Z</published>
    <updated>2017-10-09T16:35:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>→</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\lim_{φ(x)\to0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0496em;vertical-align:-0.3552em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span>时,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sin φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>c</mi><mi>sin</mi><mo>⁡</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">arc\sin φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rc</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>tan</mi><mo>⁡</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tanφ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>c</mi><mi>tan</mi><mo>⁡</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">arc\tanφ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rc</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ln(1+φ(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">e^{φ(x)}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a^{φ(x)}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>ln</mi><mo>⁡</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">φ(x)\ln a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mroot><mrow><mn>1</mn><mo>+</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mi>n</mi></mroot><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sqrt[n]{1+φ(x)}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.305em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5933em;"><span style="top:-2.878em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{n}φ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mrow><mi>μ</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">(1+φ(x))^{\mu-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\muφ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1-\cosφ(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mo stretchy="false">(</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{(φ(x))^2}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4539em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1089em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;当&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math</summary>
        
      
    
    
    
    <category term="Math" scheme="https://asutorufa.github.io/categories/Math/"/>
    
    
    <category term="Math" scheme="https://asutorufa.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>三蛋空间自建贴吧云签到</title>
    <link href="https://asutorufa.github.io/posts/8a291f21/"/>
    <id>https://asutorufa.github.io/posts/8a291f21/</id>
    <published>2017-10-08T15:16:56.000Z</published>
    <updated>2017-10-08T15:16:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="–">–</h2><p>这是我自建的贴吧云签到:~~<a href="http://dmly.tk~~">http://dmly.tk~~</a>(已失效)<br>之后为教程</p><h3 id="注册免费空间">注册免费空间</h3><p>首先你得注册一个三蛋空间的账号,三蛋空间注册网址:<a href="https://www.000webhost.com/members/website/list">三蛋空间</a><span id="more"></span></p><h3 id="创建网站">创建网站</h3><p>注册完成之后点击这里 添加一个空模版,如图</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/%E6%B3%A8%E5%86%8C.png" alt="" loading="lazy"></p><p>写上名字和密码,点击create</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/%E5%90%8D%E5%AD%97.png" alt="" loading="lazy"></p><h3 id="ftp">ftp</h3><p>下载SmartFTP Client或者其他你熟悉的ftp上传工具,这里百度就行了<br>进入三蛋空间的管理网站,点击这里,如图</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/detile.png" alt="" loading="lazy"><br><img src="http://blog-1254450445.cossgp.myqcloud.com/%5D%60$%603%29%284TGPPR%5DZDA8@60W8.png" alt="" loading="lazy"></p><p>把这里的信息填入SmartFTP Client中</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/NS0ID6B9@2EIS4%25%7D%7B%60KLQQ7.png" alt="" loading="lazy"><br>然后点ok</p><h3 id="上传">上传</h3><p>贴吧云签到源码github地址:<a href="https://github.com/MoeNetwork/Tieba-Cloud-Sign">Tieba-Cloud-Sign</a><br>点击这里下载zip并解压</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/GA%5D3BI8Q77U8J%7DTW2%25PD%5D4L.png" alt="" loading="lazy"></p><p>将解压得到的所有文件拖入ftp上的public_html文件夹中</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/LR%7D$$65~BX37S2%29I%7DL%60Y309.png" alt="" loading="lazy"></p><h3 id="创建数据库">创建数据库</h3><p>然后进入三蛋空间创建数据库<br>三蛋空间会自动给你的数据库名字前加上数字,所以之后在贴吧安装中要注意</p><p><img src="http://blog-1254450445.cossgp.myqcloud.com/4%25JP1V7TEKX4IE0~1UUQN%5DU.png" alt="" loading="lazy"></p><h3 id="安装">安装</h3><p>之后进入你的网站,然后安装就行了.</p><h3 id="创建cron-job">创建cron job</h3><p>安装完成后就要把do.php加入cron,否则是不会自动签到的,按图中的步骤进行<br><img src="http://blog-1254450445.cossgp.myqcloud.com/P5LC1%7B%7D%7BQ%7B1_QCZ0%5DE@L0WO.png" alt="" loading="lazy"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;–&quot;&gt;–&lt;/h2&gt;
&lt;p&gt;这是我自建的贴吧云签到:~~&lt;a href=&quot;http://dmly.tk~~&quot;&gt;http://dmly.tk~~&lt;/a&gt;(已失效)&lt;br&gt;
之后为教程&lt;/p&gt;
&lt;h3 id=&quot;注册免费空间&quot;&gt;注册免费空间&lt;/h3&gt;
&lt;p&gt;首先你得注册一个三蛋空间的账号,三蛋空间注册网址:&lt;a href=&quot;https://www.000webhost.com/members/website/list&quot;&gt;三蛋空间&lt;/a&gt;</summary>
    
    
    
    <category term="建站" scheme="https://asutorufa.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="建站" scheme="https://asutorufa.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
    <category term="免费" scheme="https://asutorufa.github.io/tags/%E5%85%8D%E8%B4%B9/"/>
    
  </entry>
  
</feed>
